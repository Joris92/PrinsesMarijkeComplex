controllable North_Upstream_Gates_East_Actuator_c_open;
controllable North_Upstream_Gates_East_Actuator_c_close;
controllable North_Upstream_Gates_East_Actuator_c_emergencyStop;
controllable North_Upstream_Gates_East_Actuator_c_endStopClosing;
controllable North_Upstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Gates_East_Sensor_u_open_on;
uncontrollable North_Upstream_Gates_East_Sensor_u_open_off;
uncontrollable North_Upstream_Gates_East_Sensor_u_closed_on;
uncontrollable North_Upstream_Gates_East_Sensor_u_closed_off;
controllable North_Upstream_Gates_West_Actuator_c_open;
controllable North_Upstream_Gates_West_Actuator_c_close;
controllable North_Upstream_Gates_West_Actuator_c_emergencyStop;
controllable North_Upstream_Gates_West_Actuator_c_endStopClosing;
controllable North_Upstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Gates_West_Sensor_u_open_on;
uncontrollable North_Upstream_Gates_West_Sensor_u_open_off;
uncontrollable North_Upstream_Gates_West_Sensor_u_closed_on;
uncontrollable North_Upstream_Gates_West_Sensor_u_closed_off;
controllable North_Upstream_Paddles_East_Actuator_c_open;
controllable North_Upstream_Paddles_East_Actuator_c_close;
controllable North_Upstream_Paddles_East_Actuator_c_emergencyStop;
controllable North_Upstream_Paddles_East_Actuator_c_endStopClosing;
controllable North_Upstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Paddles_East_Sensor_u_open_on;
uncontrollable North_Upstream_Paddles_East_Sensor_u_open_off;
uncontrollable North_Upstream_Paddles_East_Sensor_u_closed_on;
uncontrollable North_Upstream_Paddles_East_Sensor_u_closed_off;
controllable North_Upstream_Paddles_West_Actuator_c_open;
controllable North_Upstream_Paddles_West_Actuator_c_close;
controllable North_Upstream_Paddles_West_Actuator_c_emergencyStop;
controllable North_Upstream_Paddles_West_Actuator_c_endStopClosing;
controllable North_Upstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable North_Upstream_Paddles_West_Sensor_u_open_on;
uncontrollable North_Upstream_Paddles_West_Sensor_u_open_off;
uncontrollable North_Upstream_Paddles_West_Sensor_u_closed_on;
uncontrollable North_Upstream_Paddles_West_Sensor_u_closed_off;
controllable North_Upstream_EnteringTLs_East_Actuator_c_r;
controllable North_Upstream_EnteringTLs_East_Actuator_c_rr;
controllable North_Upstream_EnteringTLs_East_Actuator_c_rg;
controllable North_Upstream_EnteringTLs_East_Actuator_c_g;
uncontrollable North_Upstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable North_Upstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable North_Upstream_EnteringTLs_East_SensorG_u_on;
uncontrollable North_Upstream_EnteringTLs_East_SensorG_u_off;
uncontrollable North_Upstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable North_Upstream_EnteringTLs_East_SensorR2_u_off;
controllable North_Upstream_EnteringTLs_West_Actuator_c_r;
controllable North_Upstream_EnteringTLs_West_Actuator_c_rr;
controllable North_Upstream_EnteringTLs_West_Actuator_c_rg;
controllable North_Upstream_EnteringTLs_West_Actuator_c_g;
uncontrollable North_Upstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable North_Upstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable North_Upstream_EnteringTLs_West_SensorG_u_on;
uncontrollable North_Upstream_EnteringTLs_West_SensorG_u_off;
uncontrollable North_Upstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable North_Upstream_EnteringTLs_West_SensorR2_u_off;
controllable North_Upstream_LeavingTLs_East_Actuator_c_r;
controllable North_Upstream_LeavingTLs_East_Actuator_c_g;
uncontrollable North_Upstream_LeavingTLs_East_SensorR_u_on;
uncontrollable North_Upstream_LeavingTLs_East_SensorR_u_off;
uncontrollable North_Upstream_LeavingTLs_East_SensorG_u_on;
uncontrollable North_Upstream_LeavingTLs_East_SensorG_u_off;
controllable North_Upstream_LeavingTLs_West_Actuator_c_r;
controllable North_Upstream_LeavingTLs_West_Actuator_c_g;
uncontrollable North_Upstream_LeavingTLs_West_SensorR_u_on;
uncontrollable North_Upstream_LeavingTLs_West_SensorR_u_off;
uncontrollable North_Upstream_LeavingTLs_West_SensorG_u_on;
uncontrollable North_Upstream_LeavingTLs_West_SensorG_u_off;
uncontrollable North_Upstream_EqualWaterSensor_u_on;
uncontrollable North_Upstream_EqualWaterSensor_u_off;
controllable North_Downstream_Gates_East_Actuator_c_open;
controllable North_Downstream_Gates_East_Actuator_c_close;
controllable North_Downstream_Gates_East_Actuator_c_emergencyStop;
controllable North_Downstream_Gates_East_Actuator_c_endStopClosing;
controllable North_Downstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Gates_East_Sensor_u_open_on;
uncontrollable North_Downstream_Gates_East_Sensor_u_open_off;
uncontrollable North_Downstream_Gates_East_Sensor_u_closed_on;
uncontrollable North_Downstream_Gates_East_Sensor_u_closed_off;
controllable North_Downstream_Gates_West_Actuator_c_open;
controllable North_Downstream_Gates_West_Actuator_c_close;
controllable North_Downstream_Gates_West_Actuator_c_emergencyStop;
controllable North_Downstream_Gates_West_Actuator_c_endStopClosing;
controllable North_Downstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Gates_West_Sensor_u_open_on;
uncontrollable North_Downstream_Gates_West_Sensor_u_open_off;
uncontrollable North_Downstream_Gates_West_Sensor_u_closed_on;
uncontrollable North_Downstream_Gates_West_Sensor_u_closed_off;
controllable North_Downstream_Paddles_East_Actuator_c_open;
controllable North_Downstream_Paddles_East_Actuator_c_close;
controllable North_Downstream_Paddles_East_Actuator_c_emergencyStop;
controllable North_Downstream_Paddles_East_Actuator_c_endStopClosing;
controllable North_Downstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Paddles_East_Sensor_u_open_on;
uncontrollable North_Downstream_Paddles_East_Sensor_u_open_off;
uncontrollable North_Downstream_Paddles_East_Sensor_u_closed_on;
uncontrollable North_Downstream_Paddles_East_Sensor_u_closed_off;
controllable North_Downstream_Paddles_West_Actuator_c_open;
controllable North_Downstream_Paddles_West_Actuator_c_close;
controllable North_Downstream_Paddles_West_Actuator_c_emergencyStop;
controllable North_Downstream_Paddles_West_Actuator_c_endStopClosing;
controllable North_Downstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable North_Downstream_Paddles_West_Sensor_u_open_on;
uncontrollable North_Downstream_Paddles_West_Sensor_u_open_off;
uncontrollable North_Downstream_Paddles_West_Sensor_u_closed_on;
uncontrollable North_Downstream_Paddles_West_Sensor_u_closed_off;
controllable North_Downstream_EnteringTLs_East_Actuator_c_r;
controllable North_Downstream_EnteringTLs_East_Actuator_c_rr;
controllable North_Downstream_EnteringTLs_East_Actuator_c_rg;
controllable North_Downstream_EnteringTLs_East_Actuator_c_g;
uncontrollable North_Downstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable North_Downstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable North_Downstream_EnteringTLs_East_SensorG_u_on;
uncontrollable North_Downstream_EnteringTLs_East_SensorG_u_off;
uncontrollable North_Downstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable North_Downstream_EnteringTLs_East_SensorR2_u_off;
controllable North_Downstream_EnteringTLs_West_Actuator_c_r;
controllable North_Downstream_EnteringTLs_West_Actuator_c_rr;
controllable North_Downstream_EnteringTLs_West_Actuator_c_rg;
controllable North_Downstream_EnteringTLs_West_Actuator_c_g;
uncontrollable North_Downstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable North_Downstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable North_Downstream_EnteringTLs_West_SensorG_u_on;
uncontrollable North_Downstream_EnteringTLs_West_SensorG_u_off;
uncontrollable North_Downstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable North_Downstream_EnteringTLs_West_SensorR2_u_off;
controllable North_Downstream_LeavingTLs_East_Actuator_c_r;
controllable North_Downstream_LeavingTLs_East_Actuator_c_g;
uncontrollable North_Downstream_LeavingTLs_East_SensorR_u_on;
uncontrollable North_Downstream_LeavingTLs_East_SensorR_u_off;
uncontrollable North_Downstream_LeavingTLs_East_SensorG_u_on;
uncontrollable North_Downstream_LeavingTLs_East_SensorG_u_off;
controllable North_Downstream_LeavingTLs_West_Actuator_c_r;
controllable North_Downstream_LeavingTLs_West_Actuator_c_g;
uncontrollable North_Downstream_LeavingTLs_West_SensorR_u_on;
uncontrollable North_Downstream_LeavingTLs_West_SensorR_u_off;
uncontrollable North_Downstream_LeavingTLs_West_SensorG_u_on;
uncontrollable North_Downstream_LeavingTLs_West_SensorG_u_off;
uncontrollable North_Downstream_EqualWaterSensor_u_on;
uncontrollable North_Downstream_EqualWaterSensor_u_off;
uncontrollable North_EmergencyStop_u_activate;
uncontrollable North_EmergencyStop_u_deactivate;
uncontrollable North_Commands_Deactivate;
uncontrollable North_Commands_DownstreamGateOpen_act;
uncontrollable North_Commands_DownstreamGateClose_act;
uncontrollable North_Commands_DownstreamGateStop_act;
uncontrollable North_Commands_DownstreamPaddleOpen_act;
uncontrollable North_Commands_DownstreamPaddleClose_act;
uncontrollable North_Commands_DownstreamPaddleStop_act;
uncontrollable North_Commands_DownstreamEnteringTLRedRed_act;
uncontrollable North_Commands_DownstreamEnteringTLRed_act;
uncontrollable North_Commands_DownstreamEnteringTLRedGreen_act;
uncontrollable North_Commands_DownstreamEnteringTLGreen_act;
uncontrollable North_Commands_DownstreamLeavingTLRed_act;
uncontrollable North_Commands_DownstreamLeavingTLGreen_act;
uncontrollable North_Commands_UpstreamGateOpen_act;
uncontrollable North_Commands_UpstreamGateClose_act;
uncontrollable North_Commands_UpstreamGateStop_act;
uncontrollable North_Commands_UpstreamPaddleOpen_act;
uncontrollable North_Commands_UpstreamPaddleClose_act;
uncontrollable North_Commands_UpstreamPaddleStop_act;
uncontrollable North_Commands_UpstreamEnteringTLRedRed_act;
uncontrollable North_Commands_UpstreamEnteringTLRed_act;
uncontrollable North_Commands_UpstreamEnteringTLRedGreen_act;
uncontrollable North_Commands_UpstreamEnteringTLGreen_act;
uncontrollable North_Commands_UpstreamLeavingTLRed_act;
uncontrollable North_Commands_UpstreamLeavingTLGreen_act;
controllable South_Upstream_Gates_East_Actuator_c_open;
controllable South_Upstream_Gates_East_Actuator_c_close;
controllable South_Upstream_Gates_East_Actuator_c_emergencyStop;
controllable South_Upstream_Gates_East_Actuator_c_endStopClosing;
controllable South_Upstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Gates_East_Sensor_u_open_on;
uncontrollable South_Upstream_Gates_East_Sensor_u_open_off;
uncontrollable South_Upstream_Gates_East_Sensor_u_closed_on;
uncontrollable South_Upstream_Gates_East_Sensor_u_closed_off;
controllable South_Upstream_Gates_West_Actuator_c_open;
controllable South_Upstream_Gates_West_Actuator_c_close;
controllable South_Upstream_Gates_West_Actuator_c_emergencyStop;
controllable South_Upstream_Gates_West_Actuator_c_endStopClosing;
controllable South_Upstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Gates_West_Sensor_u_open_on;
uncontrollable South_Upstream_Gates_West_Sensor_u_open_off;
uncontrollable South_Upstream_Gates_West_Sensor_u_closed_on;
uncontrollable South_Upstream_Gates_West_Sensor_u_closed_off;
controllable South_Upstream_Paddles_East_Actuator_c_open;
controllable South_Upstream_Paddles_East_Actuator_c_close;
controllable South_Upstream_Paddles_East_Actuator_c_emergencyStop;
controllable South_Upstream_Paddles_East_Actuator_c_endStopClosing;
controllable South_Upstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Paddles_East_Sensor_u_open_on;
uncontrollable South_Upstream_Paddles_East_Sensor_u_open_off;
uncontrollable South_Upstream_Paddles_East_Sensor_u_closed_on;
uncontrollable South_Upstream_Paddles_East_Sensor_u_closed_off;
controllable South_Upstream_Paddles_West_Actuator_c_open;
controllable South_Upstream_Paddles_West_Actuator_c_close;
controllable South_Upstream_Paddles_West_Actuator_c_emergencyStop;
controllable South_Upstream_Paddles_West_Actuator_c_endStopClosing;
controllable South_Upstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable South_Upstream_Paddles_West_Sensor_u_open_on;
uncontrollable South_Upstream_Paddles_West_Sensor_u_open_off;
uncontrollable South_Upstream_Paddles_West_Sensor_u_closed_on;
uncontrollable South_Upstream_Paddles_West_Sensor_u_closed_off;
controllable South_Upstream_EnteringTLs_East_Actuator_c_r;
controllable South_Upstream_EnteringTLs_East_Actuator_c_rr;
controllable South_Upstream_EnteringTLs_East_Actuator_c_rg;
controllable South_Upstream_EnteringTLs_East_Actuator_c_g;
uncontrollable South_Upstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable South_Upstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable South_Upstream_EnteringTLs_East_SensorG_u_on;
uncontrollable South_Upstream_EnteringTLs_East_SensorG_u_off;
uncontrollable South_Upstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable South_Upstream_EnteringTLs_East_SensorR2_u_off;
controllable South_Upstream_EnteringTLs_West_Actuator_c_r;
controllable South_Upstream_EnteringTLs_West_Actuator_c_rr;
controllable South_Upstream_EnteringTLs_West_Actuator_c_rg;
controllable South_Upstream_EnteringTLs_West_Actuator_c_g;
uncontrollable South_Upstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable South_Upstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable South_Upstream_EnteringTLs_West_SensorG_u_on;
uncontrollable South_Upstream_EnteringTLs_West_SensorG_u_off;
uncontrollable South_Upstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable South_Upstream_EnteringTLs_West_SensorR2_u_off;
controllable South_Upstream_LeavingTLs_East_Actuator_c_r;
controllable South_Upstream_LeavingTLs_East_Actuator_c_g;
uncontrollable South_Upstream_LeavingTLs_East_SensorR_u_on;
uncontrollable South_Upstream_LeavingTLs_East_SensorR_u_off;
uncontrollable South_Upstream_LeavingTLs_East_SensorG_u_on;
uncontrollable South_Upstream_LeavingTLs_East_SensorG_u_off;
controllable South_Upstream_LeavingTLs_West_Actuator_c_r;
controllable South_Upstream_LeavingTLs_West_Actuator_c_g;
uncontrollable South_Upstream_LeavingTLs_West_SensorR_u_on;
uncontrollable South_Upstream_LeavingTLs_West_SensorR_u_off;
uncontrollable South_Upstream_LeavingTLs_West_SensorG_u_on;
uncontrollable South_Upstream_LeavingTLs_West_SensorG_u_off;
uncontrollable South_Upstream_EqualWaterSensor_u_on;
uncontrollable South_Upstream_EqualWaterSensor_u_off;
controllable South_Downstream_Gates_East_Actuator_c_open;
controllable South_Downstream_Gates_East_Actuator_c_close;
controllable South_Downstream_Gates_East_Actuator_c_emergencyStop;
controllable South_Downstream_Gates_East_Actuator_c_endStopClosing;
controllable South_Downstream_Gates_East_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Gates_East_Sensor_u_open_on;
uncontrollable South_Downstream_Gates_East_Sensor_u_open_off;
uncontrollable South_Downstream_Gates_East_Sensor_u_closed_on;
uncontrollable South_Downstream_Gates_East_Sensor_u_closed_off;
controllable South_Downstream_Gates_West_Actuator_c_open;
controllable South_Downstream_Gates_West_Actuator_c_close;
controllable South_Downstream_Gates_West_Actuator_c_emergencyStop;
controllable South_Downstream_Gates_West_Actuator_c_endStopClosing;
controllable South_Downstream_Gates_West_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Gates_West_Sensor_u_open_on;
uncontrollable South_Downstream_Gates_West_Sensor_u_open_off;
uncontrollable South_Downstream_Gates_West_Sensor_u_closed_on;
uncontrollable South_Downstream_Gates_West_Sensor_u_closed_off;
controllable South_Downstream_Paddles_East_Actuator_c_open;
controllable South_Downstream_Paddles_East_Actuator_c_close;
controllable South_Downstream_Paddles_East_Actuator_c_emergencyStop;
controllable South_Downstream_Paddles_East_Actuator_c_endStopClosing;
controllable South_Downstream_Paddles_East_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Paddles_East_Sensor_u_open_on;
uncontrollable South_Downstream_Paddles_East_Sensor_u_open_off;
uncontrollable South_Downstream_Paddles_East_Sensor_u_closed_on;
uncontrollable South_Downstream_Paddles_East_Sensor_u_closed_off;
controllable South_Downstream_Paddles_West_Actuator_c_open;
controllable South_Downstream_Paddles_West_Actuator_c_close;
controllable South_Downstream_Paddles_West_Actuator_c_emergencyStop;
controllable South_Downstream_Paddles_West_Actuator_c_endStopClosing;
controllable South_Downstream_Paddles_West_Actuator_c_endStopOpening;
uncontrollable South_Downstream_Paddles_West_Sensor_u_open_on;
uncontrollable South_Downstream_Paddles_West_Sensor_u_open_off;
uncontrollable South_Downstream_Paddles_West_Sensor_u_closed_on;
uncontrollable South_Downstream_Paddles_West_Sensor_u_closed_off;
controllable South_Downstream_EnteringTLs_East_Actuator_c_r;
controllable South_Downstream_EnteringTLs_East_Actuator_c_rr;
controllable South_Downstream_EnteringTLs_East_Actuator_c_rg;
controllable South_Downstream_EnteringTLs_East_Actuator_c_g;
uncontrollable South_Downstream_EnteringTLs_East_SensorR1_u_on;
uncontrollable South_Downstream_EnteringTLs_East_SensorR1_u_off;
uncontrollable South_Downstream_EnteringTLs_East_SensorG_u_on;
uncontrollable South_Downstream_EnteringTLs_East_SensorG_u_off;
uncontrollable South_Downstream_EnteringTLs_East_SensorR2_u_on;
uncontrollable South_Downstream_EnteringTLs_East_SensorR2_u_off;
controllable South_Downstream_EnteringTLs_West_Actuator_c_r;
controllable South_Downstream_EnteringTLs_West_Actuator_c_rr;
controllable South_Downstream_EnteringTLs_West_Actuator_c_rg;
controllable South_Downstream_EnteringTLs_West_Actuator_c_g;
uncontrollable South_Downstream_EnteringTLs_West_SensorR1_u_on;
uncontrollable South_Downstream_EnteringTLs_West_SensorR1_u_off;
uncontrollable South_Downstream_EnteringTLs_West_SensorG_u_on;
uncontrollable South_Downstream_EnteringTLs_West_SensorG_u_off;
uncontrollable South_Downstream_EnteringTLs_West_SensorR2_u_on;
uncontrollable South_Downstream_EnteringTLs_West_SensorR2_u_off;
controllable South_Downstream_LeavingTLs_East_Actuator_c_r;
controllable South_Downstream_LeavingTLs_East_Actuator_c_g;
uncontrollable South_Downstream_LeavingTLs_East_SensorR_u_on;
uncontrollable South_Downstream_LeavingTLs_East_SensorR_u_off;
uncontrollable South_Downstream_LeavingTLs_East_SensorG_u_on;
uncontrollable South_Downstream_LeavingTLs_East_SensorG_u_off;
controllable South_Downstream_LeavingTLs_West_Actuator_c_r;
controllable South_Downstream_LeavingTLs_West_Actuator_c_g;
uncontrollable South_Downstream_LeavingTLs_West_SensorR_u_on;
uncontrollable South_Downstream_LeavingTLs_West_SensorR_u_off;
uncontrollable South_Downstream_LeavingTLs_West_SensorG_u_on;
uncontrollable South_Downstream_LeavingTLs_West_SensorG_u_off;
uncontrollable South_Downstream_EqualWaterSensor_u_on;
uncontrollable South_Downstream_EqualWaterSensor_u_off;
uncontrollable South_EmergencyStop_u_activate;
uncontrollable South_EmergencyStop_u_deactivate;
uncontrollable South_Commands_Deactivate;
uncontrollable South_Commands_DownstreamGateOpen_act;
uncontrollable South_Commands_DownstreamGateClose_act;
uncontrollable South_Commands_DownstreamGateStop_act;
uncontrollable South_Commands_DownstreamPaddleOpen_act;
uncontrollable South_Commands_DownstreamPaddleClose_act;
uncontrollable South_Commands_DownstreamPaddleStop_act;
uncontrollable South_Commands_DownstreamEnteringTLRedRed_act;
uncontrollable South_Commands_DownstreamEnteringTLRed_act;
uncontrollable South_Commands_DownstreamEnteringTLRedGreen_act;
uncontrollable South_Commands_DownstreamEnteringTLGreen_act;
uncontrollable South_Commands_DownstreamLeavingTLRed_act;
uncontrollable South_Commands_DownstreamLeavingTLGreen_act;
uncontrollable South_Commands_UpstreamGateOpen_act;
uncontrollable South_Commands_UpstreamGateClose_act;
uncontrollable South_Commands_UpstreamGateStop_act;
uncontrollable South_Commands_UpstreamPaddleOpen_act;
uncontrollable South_Commands_UpstreamPaddleClose_act;
uncontrollable South_Commands_UpstreamPaddleStop_act;
uncontrollable South_Commands_UpstreamEnteringTLRedRed_act;
uncontrollable South_Commands_UpstreamEnteringTLRed_act;
uncontrollable South_Commands_UpstreamEnteringTLRedGreen_act;
uncontrollable South_Commands_UpstreamEnteringTLGreen_act;
uncontrollable South_Commands_UpstreamLeavingTLRed_act;
uncontrollable South_Commands_UpstreamLeavingTLGreen_act;
controllable Barrier_Downstream_TLs_East_Actuator_c_r;
controllable Barrier_Downstream_TLs_East_Actuator_c_g;
uncontrollable Barrier_Downstream_TLs_East_SensorR_u_on;
uncontrollable Barrier_Downstream_TLs_East_SensorR_u_off;
uncontrollable Barrier_Downstream_TLs_East_SensorG_u_on;
uncontrollable Barrier_Downstream_TLs_East_SensorG_u_off;
controllable Barrier_Downstream_TLs_West_Actuator_c_r;
controllable Barrier_Downstream_TLs_West_Actuator_c_g;
uncontrollable Barrier_Downstream_TLs_West_SensorR_u_on;
uncontrollable Barrier_Downstream_TLs_West_SensorR_u_off;
uncontrollable Barrier_Downstream_TLs_West_SensorG_u_on;
uncontrollable Barrier_Downstream_TLs_West_SensorG_u_off;
controllable Barrier_Upstream_TLs_East_Actuator_c_r;
controllable Barrier_Upstream_TLs_East_Actuator_c_g;
uncontrollable Barrier_Upstream_TLs_East_SensorR_u_on;
uncontrollable Barrier_Upstream_TLs_East_SensorR_u_off;
uncontrollable Barrier_Upstream_TLs_East_SensorG_u_on;
uncontrollable Barrier_Upstream_TLs_East_SensorG_u_off;
controllable Barrier_Upstream_TLs_West_Actuator_c_r;
controllable Barrier_Upstream_TLs_West_Actuator_c_g;
uncontrollable Barrier_Upstream_TLs_West_SensorR_u_on;
uncontrollable Barrier_Upstream_TLs_West_SensorR_u_off;
uncontrollable Barrier_Upstream_TLs_West_SensorG_u_on;
uncontrollable Barrier_Upstream_TLs_West_SensorG_u_off;
controllable Barrier_Barrier_Actuator_c_open;
controllable Barrier_Barrier_Actuator_c_close;
controllable Barrier_Barrier_Actuator_c_emergencyStop;
controllable Barrier_Barrier_Actuator_c_endStopClosing;
controllable Barrier_Barrier_Actuator_c_endStopOpening;
uncontrollable Barrier_Barrier_Sensor_u_open_on;
uncontrollable Barrier_Barrier_Sensor_u_open_off;
uncontrollable Barrier_Barrier_Sensor_u_closed_on;
uncontrollable Barrier_Barrier_Sensor_u_closed_off;
uncontrollable Barrier_EmergencyStop_u_activate;
uncontrollable Barrier_EmergencyStop_u_deactivate;
uncontrollable Barrier_Commands_Deactivate;
uncontrollable Barrier_Commands_BarrierOpen_act;
uncontrollable Barrier_Commands_BarrierClose_act;
uncontrollable Barrier_Commands_BarrierStop_act;
uncontrollable Barrier_Commands_DownstreamTLRed_act;
uncontrollable Barrier_Commands_DownstreamTLGreen_act;
uncontrollable Barrier_Commands_UpstreamTLRed_act;
uncontrollable Barrier_Commands_UpstreamTLGreen_act;
enum E = Active, BarrierClose, BarrierOpen, BarrierStop, Closed, Closing, DownstreamEnteringTLGreen, DownstreamEnteringTLRed, DownstreamEnteringTLRedGreen, DownstreamEnteringTLRedRed, DownstreamGateClose, DownstreamGateOpen, DownstreamGateStop, DownstreamLeavingTLGreen, DownstreamLeavingTLRed, DownstreamPaddleClose, DownstreamPaddleOpen, DownstreamPaddleStop, DownstreamTLGreen, DownstreamTLRed, Equal, Green, Inactive, Intermediate, NoCommand, Off, On, Open, Opening, Red, RedGreen, RedRed, Rest, Unequal, UpstreamEnteringTLGreen, UpstreamEnteringTLRed, UpstreamEnteringTLRedGreen, UpstreamEnteringTLRedRed, UpstreamGateClose, UpstreamGateOpen, UpstreamGateStop, UpstreamLeavingTLGreen, UpstreamLeavingTLRed, UpstreamPaddleClose, UpstreamPaddleOpen, UpstreamPaddleStop, UpstreamTLGreen, UpstreamTLRed, X;
automaton M:
  alphabet Barrier_Barrier_Actuator_c_close, Barrier_Barrier_Actuator_c_emergencyStop, Barrier_Barrier_Actuator_c_endStopClosing, Barrier_Barrier_Actuator_c_endStopOpening, Barrier_Barrier_Actuator_c_open, Barrier_Barrier_Sensor_u_closed_off, Barrier_Barrier_Sensor_u_closed_on, Barrier_Barrier_Sensor_u_open_off, Barrier_Barrier_Sensor_u_open_on, Barrier_Commands_BarrierClose_act, Barrier_Commands_BarrierOpen_act, Barrier_Commands_BarrierStop_act, Barrier_Commands_Deactivate, Barrier_Commands_DownstreamTLGreen_act, Barrier_Commands_DownstreamTLRed_act, Barrier_Commands_UpstreamTLGreen_act, Barrier_Commands_UpstreamTLRed_act, Barrier_Downstream_TLs_East_Actuator_c_g, Barrier_Downstream_TLs_East_Actuator_c_r, Barrier_Downstream_TLs_East_SensorG_u_off, Barrier_Downstream_TLs_East_SensorG_u_on, Barrier_Downstream_TLs_East_SensorR_u_off, Barrier_Downstream_TLs_East_SensorR_u_on, Barrier_Downstream_TLs_West_Actuator_c_g, Barrier_Downstream_TLs_West_Actuator_c_r, Barrier_Downstream_TLs_West_SensorG_u_off, Barrier_Downstream_TLs_West_SensorG_u_on, Barrier_Downstream_TLs_West_SensorR_u_off, Barrier_Downstream_TLs_West_SensorR_u_on, Barrier_EmergencyStop_u_activate, Barrier_EmergencyStop_u_deactivate, Barrier_Upstream_TLs_East_Actuator_c_g, Barrier_Upstream_TLs_East_Actuator_c_r, Barrier_Upstream_TLs_East_SensorG_u_off, Barrier_Upstream_TLs_East_SensorG_u_on, Barrier_Upstream_TLs_East_SensorR_u_off, Barrier_Upstream_TLs_East_SensorR_u_on, Barrier_Upstream_TLs_West_Actuator_c_g, Barrier_Upstream_TLs_West_Actuator_c_r, Barrier_Upstream_TLs_West_SensorG_u_off, Barrier_Upstream_TLs_West_SensorG_u_on, Barrier_Upstream_TLs_West_SensorR_u_off, Barrier_Upstream_TLs_West_SensorR_u_on, North_Commands_Deactivate, North_Commands_DownstreamEnteringTLGreen_act, North_Commands_DownstreamEnteringTLRed_act, North_Commands_DownstreamEnteringTLRedGreen_act, North_Commands_DownstreamEnteringTLRedRed_act, North_Commands_DownstreamGateClose_act, North_Commands_DownstreamGateOpen_act, North_Commands_DownstreamGateStop_act, North_Commands_DownstreamLeavingTLGreen_act, North_Commands_DownstreamLeavingTLRed_act, North_Commands_DownstreamPaddleClose_act, North_Commands_DownstreamPaddleOpen_act, North_Commands_DownstreamPaddleStop_act, North_Commands_UpstreamEnteringTLGreen_act, North_Commands_UpstreamEnteringTLRed_act, North_Commands_UpstreamEnteringTLRedGreen_act, North_Commands_UpstreamEnteringTLRedRed_act, North_Commands_UpstreamGateClose_act, North_Commands_UpstreamGateOpen_act, North_Commands_UpstreamGateStop_act, North_Commands_UpstreamLeavingTLGreen_act, North_Commands_UpstreamLeavingTLRed_act, North_Commands_UpstreamPaddleClose_act, North_Commands_UpstreamPaddleOpen_act, North_Commands_UpstreamPaddleStop_act, North_Downstream_EnteringTLs_East_Actuator_c_g, North_Downstream_EnteringTLs_East_Actuator_c_r, North_Downstream_EnteringTLs_East_Actuator_c_rg, North_Downstream_EnteringTLs_East_Actuator_c_rr, North_Downstream_EnteringTLs_East_SensorG_u_off, North_Downstream_EnteringTLs_East_SensorG_u_on, North_Downstream_EnteringTLs_East_SensorR1_u_off, North_Downstream_EnteringTLs_East_SensorR1_u_on, North_Downstream_EnteringTLs_East_SensorR2_u_off, North_Downstream_EnteringTLs_East_SensorR2_u_on, North_Downstream_EnteringTLs_West_Actuator_c_g, North_Downstream_EnteringTLs_West_Actuator_c_r, North_Downstream_EnteringTLs_West_Actuator_c_rg, North_Downstream_EnteringTLs_West_Actuator_c_rr, North_Downstream_EnteringTLs_West_SensorG_u_off, North_Downstream_EnteringTLs_West_SensorG_u_on, North_Downstream_EnteringTLs_West_SensorR1_u_off, North_Downstream_EnteringTLs_West_SensorR1_u_on, North_Downstream_EnteringTLs_West_SensorR2_u_off, North_Downstream_EnteringTLs_West_SensorR2_u_on, North_Downstream_EqualWaterSensor_u_off, North_Downstream_EqualWaterSensor_u_on, North_Downstream_Gates_East_Actuator_c_close, North_Downstream_Gates_East_Actuator_c_emergencyStop, North_Downstream_Gates_East_Actuator_c_endStopClosing, North_Downstream_Gates_East_Actuator_c_endStopOpening, North_Downstream_Gates_East_Actuator_c_open, North_Downstream_Gates_East_Sensor_u_closed_off, North_Downstream_Gates_East_Sensor_u_closed_on, North_Downstream_Gates_East_Sensor_u_open_off, North_Downstream_Gates_East_Sensor_u_open_on, North_Downstream_Gates_West_Actuator_c_close, North_Downstream_Gates_West_Actuator_c_emergencyStop, North_Downstream_Gates_West_Actuator_c_endStopClosing, North_Downstream_Gates_West_Actuator_c_endStopOpening, North_Downstream_Gates_West_Actuator_c_open, North_Downstream_Gates_West_Sensor_u_closed_off, North_Downstream_Gates_West_Sensor_u_closed_on, North_Downstream_Gates_West_Sensor_u_open_off, North_Downstream_Gates_West_Sensor_u_open_on, North_Downstream_LeavingTLs_East_Actuator_c_g, North_Downstream_LeavingTLs_East_Actuator_c_r, North_Downstream_LeavingTLs_East_SensorG_u_off, North_Downstream_LeavingTLs_East_SensorG_u_on, North_Downstream_LeavingTLs_East_SensorR_u_off, North_Downstream_LeavingTLs_East_SensorR_u_on, North_Downstream_LeavingTLs_West_Actuator_c_g, North_Downstream_LeavingTLs_West_Actuator_c_r, North_Downstream_LeavingTLs_West_SensorG_u_off, North_Downstream_LeavingTLs_West_SensorG_u_on, North_Downstream_LeavingTLs_West_SensorR_u_off, North_Downstream_LeavingTLs_West_SensorR_u_on, North_Downstream_Paddles_East_Actuator_c_close, North_Downstream_Paddles_East_Actuator_c_emergencyStop, North_Downstream_Paddles_East_Actuator_c_endStopClosing, North_Downstream_Paddles_East_Actuator_c_endStopOpening, North_Downstream_Paddles_East_Actuator_c_open, North_Downstream_Paddles_East_Sensor_u_closed_off, North_Downstream_Paddles_East_Sensor_u_closed_on, North_Downstream_Paddles_East_Sensor_u_open_off, North_Downstream_Paddles_East_Sensor_u_open_on, North_Downstream_Paddles_West_Actuator_c_close, North_Downstream_Paddles_West_Actuator_c_emergencyStop, North_Downstream_Paddles_West_Actuator_c_endStopClosing, North_Downstream_Paddles_West_Actuator_c_endStopOpening, North_Downstream_Paddles_West_Actuator_c_open, North_Downstream_Paddles_West_Sensor_u_closed_off, North_Downstream_Paddles_West_Sensor_u_closed_on, North_Downstream_Paddles_West_Sensor_u_open_off, North_Downstream_Paddles_West_Sensor_u_open_on, North_EmergencyStop_u_activate, North_EmergencyStop_u_deactivate, North_Upstream_EnteringTLs_East_Actuator_c_g, North_Upstream_EnteringTLs_East_Actuator_c_r, North_Upstream_EnteringTLs_East_Actuator_c_rg, North_Upstream_EnteringTLs_East_Actuator_c_rr, North_Upstream_EnteringTLs_East_SensorG_u_off, North_Upstream_EnteringTLs_East_SensorG_u_on, North_Upstream_EnteringTLs_East_SensorR1_u_off, North_Upstream_EnteringTLs_East_SensorR1_u_on, North_Upstream_EnteringTLs_East_SensorR2_u_off, North_Upstream_EnteringTLs_East_SensorR2_u_on, North_Upstream_EnteringTLs_West_Actuator_c_g, North_Upstream_EnteringTLs_West_Actuator_c_r, North_Upstream_EnteringTLs_West_Actuator_c_rg, North_Upstream_EnteringTLs_West_Actuator_c_rr, North_Upstream_EnteringTLs_West_SensorG_u_off, North_Upstream_EnteringTLs_West_SensorG_u_on, North_Upstream_EnteringTLs_West_SensorR1_u_off, North_Upstream_EnteringTLs_West_SensorR1_u_on, North_Upstream_EnteringTLs_West_SensorR2_u_off, North_Upstream_EnteringTLs_West_SensorR2_u_on, North_Upstream_EqualWaterSensor_u_off, North_Upstream_EqualWaterSensor_u_on, North_Upstream_Gates_East_Actuator_c_close, North_Upstream_Gates_East_Actuator_c_emergencyStop, North_Upstream_Gates_East_Actuator_c_endStopClosing, North_Upstream_Gates_East_Actuator_c_endStopOpening, North_Upstream_Gates_East_Actuator_c_open, North_Upstream_Gates_East_Sensor_u_closed_off, North_Upstream_Gates_East_Sensor_u_closed_on, North_Upstream_Gates_East_Sensor_u_open_off, North_Upstream_Gates_East_Sensor_u_open_on, North_Upstream_Gates_West_Actuator_c_close, North_Upstream_Gates_West_Actuator_c_emergencyStop, North_Upstream_Gates_West_Actuator_c_endStopClosing, North_Upstream_Gates_West_Actuator_c_endStopOpening, North_Upstream_Gates_West_Actuator_c_open, North_Upstream_Gates_West_Sensor_u_closed_off, North_Upstream_Gates_West_Sensor_u_closed_on, North_Upstream_Gates_West_Sensor_u_open_off, North_Upstream_Gates_West_Sensor_u_open_on, North_Upstream_LeavingTLs_East_Actuator_c_g, North_Upstream_LeavingTLs_East_Actuator_c_r, North_Upstream_LeavingTLs_East_SensorG_u_off, North_Upstream_LeavingTLs_East_SensorG_u_on, North_Upstream_LeavingTLs_East_SensorR_u_off, North_Upstream_LeavingTLs_East_SensorR_u_on, North_Upstream_LeavingTLs_West_Actuator_c_g, North_Upstream_LeavingTLs_West_Actuator_c_r, North_Upstream_LeavingTLs_West_SensorG_u_off, North_Upstream_LeavingTLs_West_SensorG_u_on, North_Upstream_LeavingTLs_West_SensorR_u_off, North_Upstream_LeavingTLs_West_SensorR_u_on, North_Upstream_Paddles_East_Actuator_c_close, North_Upstream_Paddles_East_Actuator_c_emergencyStop, North_Upstream_Paddles_East_Actuator_c_endStopClosing, North_Upstream_Paddles_East_Actuator_c_endStopOpening, North_Upstream_Paddles_East_Actuator_c_open, North_Upstream_Paddles_East_Sensor_u_closed_off, North_Upstream_Paddles_East_Sensor_u_closed_on, North_Upstream_Paddles_East_Sensor_u_open_off, North_Upstream_Paddles_East_Sensor_u_open_on, North_Upstream_Paddles_West_Actuator_c_close, North_Upstream_Paddles_West_Actuator_c_emergencyStop, North_Upstream_Paddles_West_Actuator_c_endStopClosing, North_Upstream_Paddles_West_Actuator_c_endStopOpening, North_Upstream_Paddles_West_Actuator_c_open, North_Upstream_Paddles_West_Sensor_u_closed_off, North_Upstream_Paddles_West_Sensor_u_closed_on, North_Upstream_Paddles_West_Sensor_u_open_off, North_Upstream_Paddles_West_Sensor_u_open_on, South_Commands_Deactivate, South_Commands_DownstreamEnteringTLGreen_act, South_Commands_DownstreamEnteringTLRed_act, South_Commands_DownstreamEnteringTLRedGreen_act, South_Commands_DownstreamEnteringTLRedRed_act, South_Commands_DownstreamGateClose_act, South_Commands_DownstreamGateOpen_act, South_Commands_DownstreamGateStop_act, South_Commands_DownstreamLeavingTLGreen_act, South_Commands_DownstreamLeavingTLRed_act, South_Commands_DownstreamPaddleClose_act, South_Commands_DownstreamPaddleOpen_act, South_Commands_DownstreamPaddleStop_act, South_Commands_UpstreamEnteringTLGreen_act, South_Commands_UpstreamEnteringTLRed_act, South_Commands_UpstreamEnteringTLRedGreen_act, South_Commands_UpstreamEnteringTLRedRed_act, South_Commands_UpstreamGateClose_act, South_Commands_UpstreamGateOpen_act, South_Commands_UpstreamGateStop_act, South_Commands_UpstreamLeavingTLGreen_act, South_Commands_UpstreamLeavingTLRed_act, South_Commands_UpstreamPaddleClose_act, South_Commands_UpstreamPaddleOpen_act, South_Commands_UpstreamPaddleStop_act, South_Downstream_EnteringTLs_East_Actuator_c_g, South_Downstream_EnteringTLs_East_Actuator_c_r, South_Downstream_EnteringTLs_East_Actuator_c_rg, South_Downstream_EnteringTLs_East_Actuator_c_rr, South_Downstream_EnteringTLs_East_SensorG_u_off, South_Downstream_EnteringTLs_East_SensorG_u_on, South_Downstream_EnteringTLs_East_SensorR1_u_off, South_Downstream_EnteringTLs_East_SensorR1_u_on, South_Downstream_EnteringTLs_East_SensorR2_u_off, South_Downstream_EnteringTLs_East_SensorR2_u_on, South_Downstream_EnteringTLs_West_Actuator_c_g, South_Downstream_EnteringTLs_West_Actuator_c_r, South_Downstream_EnteringTLs_West_Actuator_c_rg, South_Downstream_EnteringTLs_West_Actuator_c_rr, South_Downstream_EnteringTLs_West_SensorG_u_off, South_Downstream_EnteringTLs_West_SensorG_u_on, South_Downstream_EnteringTLs_West_SensorR1_u_off, South_Downstream_EnteringTLs_West_SensorR1_u_on, South_Downstream_EnteringTLs_West_SensorR2_u_off, South_Downstream_EnteringTLs_West_SensorR2_u_on, South_Downstream_EqualWaterSensor_u_off, South_Downstream_EqualWaterSensor_u_on, South_Downstream_Gates_East_Actuator_c_close, South_Downstream_Gates_East_Actuator_c_emergencyStop, South_Downstream_Gates_East_Actuator_c_endStopClosing, South_Downstream_Gates_East_Actuator_c_endStopOpening, South_Downstream_Gates_East_Actuator_c_open, South_Downstream_Gates_East_Sensor_u_closed_off, South_Downstream_Gates_East_Sensor_u_closed_on, South_Downstream_Gates_East_Sensor_u_open_off, South_Downstream_Gates_East_Sensor_u_open_on, South_Downstream_Gates_West_Actuator_c_close, South_Downstream_Gates_West_Actuator_c_emergencyStop, South_Downstream_Gates_West_Actuator_c_endStopClosing, South_Downstream_Gates_West_Actuator_c_endStopOpening, South_Downstream_Gates_West_Actuator_c_open, South_Downstream_Gates_West_Sensor_u_closed_off, South_Downstream_Gates_West_Sensor_u_closed_on, South_Downstream_Gates_West_Sensor_u_open_off, South_Downstream_Gates_West_Sensor_u_open_on, South_Downstream_LeavingTLs_East_Actuator_c_g, South_Downstream_LeavingTLs_East_Actuator_c_r, South_Downstream_LeavingTLs_East_SensorG_u_off, South_Downstream_LeavingTLs_East_SensorG_u_on, South_Downstream_LeavingTLs_East_SensorR_u_off, South_Downstream_LeavingTLs_East_SensorR_u_on, South_Downstream_LeavingTLs_West_Actuator_c_g, South_Downstream_LeavingTLs_West_Actuator_c_r, South_Downstream_LeavingTLs_West_SensorG_u_off, South_Downstream_LeavingTLs_West_SensorG_u_on, South_Downstream_LeavingTLs_West_SensorR_u_off, South_Downstream_LeavingTLs_West_SensorR_u_on, South_Downstream_Paddles_East_Actuator_c_close, South_Downstream_Paddles_East_Actuator_c_emergencyStop, South_Downstream_Paddles_East_Actuator_c_endStopClosing, South_Downstream_Paddles_East_Actuator_c_endStopOpening, South_Downstream_Paddles_East_Actuator_c_open, South_Downstream_Paddles_East_Sensor_u_closed_off, South_Downstream_Paddles_East_Sensor_u_closed_on, South_Downstream_Paddles_East_Sensor_u_open_off, South_Downstream_Paddles_East_Sensor_u_open_on, South_Downstream_Paddles_West_Actuator_c_close, South_Downstream_Paddles_West_Actuator_c_emergencyStop, South_Downstream_Paddles_West_Actuator_c_endStopClosing, South_Downstream_Paddles_West_Actuator_c_endStopOpening, South_Downstream_Paddles_West_Actuator_c_open, South_Downstream_Paddles_West_Sensor_u_closed_off, South_Downstream_Paddles_West_Sensor_u_closed_on, South_Downstream_Paddles_West_Sensor_u_open_off, South_Downstream_Paddles_West_Sensor_u_open_on, South_EmergencyStop_u_activate, South_EmergencyStop_u_deactivate, South_Upstream_EnteringTLs_East_Actuator_c_g, South_Upstream_EnteringTLs_East_Actuator_c_r, South_Upstream_EnteringTLs_East_Actuator_c_rg, South_Upstream_EnteringTLs_East_Actuator_c_rr, South_Upstream_EnteringTLs_East_SensorG_u_off, South_Upstream_EnteringTLs_East_SensorG_u_on, South_Upstream_EnteringTLs_East_SensorR1_u_off, South_Upstream_EnteringTLs_East_SensorR1_u_on, South_Upstream_EnteringTLs_East_SensorR2_u_off, South_Upstream_EnteringTLs_East_SensorR2_u_on, South_Upstream_EnteringTLs_West_Actuator_c_g, South_Upstream_EnteringTLs_West_Actuator_c_r, South_Upstream_EnteringTLs_West_Actuator_c_rg, South_Upstream_EnteringTLs_West_Actuator_c_rr, South_Upstream_EnteringTLs_West_SensorG_u_off, South_Upstream_EnteringTLs_West_SensorG_u_on, South_Upstream_EnteringTLs_West_SensorR1_u_off, South_Upstream_EnteringTLs_West_SensorR1_u_on, South_Upstream_EnteringTLs_West_SensorR2_u_off, South_Upstream_EnteringTLs_West_SensorR2_u_on, South_Upstream_EqualWaterSensor_u_off, South_Upstream_EqualWaterSensor_u_on, South_Upstream_Gates_East_Actuator_c_close, South_Upstream_Gates_East_Actuator_c_emergencyStop, South_Upstream_Gates_East_Actuator_c_endStopClosing, South_Upstream_Gates_East_Actuator_c_endStopOpening, South_Upstream_Gates_East_Actuator_c_open, South_Upstream_Gates_East_Sensor_u_closed_off, South_Upstream_Gates_East_Sensor_u_closed_on, South_Upstream_Gates_East_Sensor_u_open_off, South_Upstream_Gates_East_Sensor_u_open_on, South_Upstream_Gates_West_Actuator_c_close, South_Upstream_Gates_West_Actuator_c_emergencyStop, South_Upstream_Gates_West_Actuator_c_endStopClosing, South_Upstream_Gates_West_Actuator_c_endStopOpening, South_Upstream_Gates_West_Actuator_c_open, South_Upstream_Gates_West_Sensor_u_closed_off, South_Upstream_Gates_West_Sensor_u_closed_on, South_Upstream_Gates_West_Sensor_u_open_off, South_Upstream_Gates_West_Sensor_u_open_on, South_Upstream_LeavingTLs_East_Actuator_c_g, South_Upstream_LeavingTLs_East_Actuator_c_r, South_Upstream_LeavingTLs_East_SensorG_u_off, South_Upstream_LeavingTLs_East_SensorG_u_on, South_Upstream_LeavingTLs_East_SensorR_u_off, South_Upstream_LeavingTLs_East_SensorR_u_on, South_Upstream_LeavingTLs_West_Actuator_c_g, South_Upstream_LeavingTLs_West_Actuator_c_r, South_Upstream_LeavingTLs_West_SensorG_u_off, South_Upstream_LeavingTLs_West_SensorG_u_on, South_Upstream_LeavingTLs_West_SensorR_u_off, South_Upstream_LeavingTLs_West_SensorR_u_on, South_Upstream_Paddles_East_Actuator_c_close, South_Upstream_Paddles_East_Actuator_c_emergencyStop, South_Upstream_Paddles_East_Actuator_c_endStopClosing, South_Upstream_Paddles_East_Actuator_c_endStopOpening, South_Upstream_Paddles_East_Actuator_c_open, South_Upstream_Paddles_East_Sensor_u_closed_off, South_Upstream_Paddles_East_Sensor_u_closed_on, South_Upstream_Paddles_East_Sensor_u_open_off, South_Upstream_Paddles_East_Sensor_u_open_on, South_Upstream_Paddles_West_Actuator_c_close, South_Upstream_Paddles_West_Actuator_c_emergencyStop, South_Upstream_Paddles_West_Actuator_c_endStopClosing, South_Upstream_Paddles_West_Actuator_c_endStopOpening, South_Upstream_Paddles_West_Actuator_c_open, South_Upstream_Paddles_West_Sensor_u_closed_off, South_Upstream_Paddles_West_Sensor_u_closed_on, South_Upstream_Paddles_West_Sensor_u_open_off, South_Upstream_Paddles_West_Sensor_u_open_on;
  input bool Barrier_HW_Barrier_BVH_East_Open;
  input bool Barrier_HW_Barrier_BVH_East_Closed;
  disc bool Barrier_HW_Barrier_BVH_East_Q_Open = false;
  disc bool Barrier_HW_Barrier_BVH_East_Q_Close = false;
  input bool Barrier_HW_EmergencyStop_Active;
  input bool Barrier_HW_TL_BNH_East_Red;
  input bool Barrier_HW_TL_BNH_East_Green;
  disc bool Barrier_HW_TL_BNH_East_Q_Red = true;
  disc bool Barrier_HW_TL_BNH_East_Q_Green = false;
  input bool Barrier_HW_TL_BNH_West_Red;
  input bool Barrier_HW_TL_BNH_West_Green;
  disc bool Barrier_HW_TL_BNH_West_Q_Red = true;
  disc bool Barrier_HW_TL_BNH_West_Q_Green = false;
  input bool Barrier_HW_TL_BVH_East_Red;
  input bool Barrier_HW_TL_BVH_East_Green;
  disc bool Barrier_HW_TL_BVH_East_Q_Red = true;
  disc bool Barrier_HW_TL_BVH_East_Q_Green = false;
  input bool Barrier_HW_TL_BVH_West_Red;
  input bool Barrier_HW_TL_BVH_West_Green;
  disc bool Barrier_HW_TL_BVH_West_Q_Red = true;
  disc bool Barrier_HW_TL_BVH_West_Q_Green = false;
  disc bool Barrier_SCADA_BarrierOpen = false;
  disc bool Barrier_SCADA_BarrierClose = false;
  disc bool Barrier_SCADA_BarrierStop = false;
  disc bool Barrier_SCADA_DownstreamTLRed = false;
  disc bool Barrier_SCADA_DownstreamTLGreen = false;
  disc bool Barrier_SCADA_UpstreamTLRed = false;
  disc bool Barrier_SCADA_UpstreamTLGreen = false;
  disc E Barrier_SCADA = Inactive;
  input bool North_HW_EmergencyStop_Active;
  input bool North_HW_EnteringTL_BNH_East_Red;
  input bool North_HW_EnteringTL_BNH_East_Green;
  input bool North_HW_EnteringTL_BNH_East_RedRed;
  disc bool North_HW_EnteringTL_BNH_East_Q_Red = true;
  disc bool North_HW_EnteringTL_BNH_East_Q_Green = false;
  disc bool North_HW_EnteringTL_BNH_East_Q_RedRed = false;
  input bool North_HW_EnteringTL_BNH_West_Red;
  input bool North_HW_EnteringTL_BNH_West_Green;
  input bool North_HW_EnteringTL_BNH_West_RedRed;
  disc bool North_HW_EnteringTL_BNH_West_Q_Red = true;
  disc bool North_HW_EnteringTL_BNH_West_Q_Green = false;
  disc bool North_HW_EnteringTL_BNH_West_Q_RedRed = false;
  input bool North_HW_EnteringTL_BVH_East_Red;
  input bool North_HW_EnteringTL_BVH_East_Green;
  input bool North_HW_EnteringTL_BVH_East_RedRed;
  disc bool North_HW_EnteringTL_BVH_East_Q_Red = true;
  disc bool North_HW_EnteringTL_BVH_East_Q_Green = false;
  disc bool North_HW_EnteringTL_BVH_East_Q_RedRed = false;
  input bool North_HW_EnteringTL_BVH_West_Red;
  input bool North_HW_EnteringTL_BVH_West_Green;
  input bool North_HW_EnteringTL_BVH_West_RedRed;
  disc bool North_HW_EnteringTL_BVH_West_Q_Red = true;
  disc bool North_HW_EnteringTL_BVH_West_Q_Green = false;
  disc bool North_HW_EnteringTL_BVH_West_Q_RedRed = false;
  input bool North_HW_EqualWaterSensor_BNH_Equal;
  input bool North_HW_EqualWaterSensor_BVH_Equal;
  input bool North_HW_Gate_BNH_East_Open;
  input bool North_HW_Gate_BNH_East_Closed;
  disc bool North_HW_Gate_BNH_East_Q_Open = false;
  disc bool North_HW_Gate_BNH_East_Q_Close = false;
  input bool North_HW_Gate_BNH_West_Open;
  input bool North_HW_Gate_BNH_West_Closed;
  disc bool North_HW_Gate_BNH_West_Q_Open = false;
  disc bool North_HW_Gate_BNH_West_Q_Close = false;
  input bool North_HW_Gate_BVH_East_Open;
  input bool North_HW_Gate_BVH_East_Closed;
  disc bool North_HW_Gate_BVH_East_Q_Open = false;
  disc bool North_HW_Gate_BVH_East_Q_Close = false;
  input bool North_HW_Gate_BVH_West_Open;
  input bool North_HW_Gate_BVH_West_Closed;
  disc bool North_HW_Gate_BVH_West_Q_Open = false;
  disc bool North_HW_Gate_BVH_West_Q_Close = false;
  input bool North_HW_LeavingTL_BNH_East_Red;
  input bool North_HW_LeavingTL_BNH_East_Green;
  disc bool North_HW_LeavingTL_BNH_East_Q_Red = true;
  disc bool North_HW_LeavingTL_BNH_East_Q_Green = false;
  input bool North_HW_LeavingTL_BNH_West_Red;
  input bool North_HW_LeavingTL_BNH_West_Green;
  disc bool North_HW_LeavingTL_BNH_West_Q_Red = true;
  disc bool North_HW_LeavingTL_BNH_West_Q_Green = false;
  input bool North_HW_LeavingTL_BVH_East_Red;
  input bool North_HW_LeavingTL_BVH_East_Green;
  disc bool North_HW_LeavingTL_BVH_East_Q_Red = true;
  disc bool North_HW_LeavingTL_BVH_East_Q_Green = false;
  input bool North_HW_LeavingTL_BVH_West_Red;
  input bool North_HW_LeavingTL_BVH_West_Green;
  disc bool North_HW_LeavingTL_BVH_West_Q_Red = true;
  disc bool North_HW_LeavingTL_BVH_West_Q_Green = false;
  input bool North_HW_Paddle_BNH_East_Open;
  input bool North_HW_Paddle_BNH_East_Closed;
  disc bool North_HW_Paddle_BNH_East_Q_Open = false;
  disc bool North_HW_Paddle_BNH_East_Q_Close = false;
  input bool North_HW_Paddle_BNH_West_Open;
  input bool North_HW_Paddle_BNH_West_Closed;
  disc bool North_HW_Paddle_BNH_West_Q_Open = false;
  disc bool North_HW_Paddle_BNH_West_Q_Close = false;
  input bool North_HW_Paddle_BVH_East_Open;
  input bool North_HW_Paddle_BVH_East_Closed;
  disc bool North_HW_Paddle_BVH_East_Q_Open = false;
  disc bool North_HW_Paddle_BVH_East_Q_Close = false;
  input bool North_HW_Paddle_BVH_West_Open;
  input bool North_HW_Paddle_BVH_West_Closed;
  disc bool North_HW_Paddle_BVH_West_Q_Open = false;
  disc bool North_HW_Paddle_BVH_West_Q_Close = false;
  disc bool North_SCADA_DownstreamGateOpen = false;
  disc bool North_SCADA_DownstreamGateClose = false;
  disc bool North_SCADA_DownstreamGateStop = false;
  disc bool North_SCADA_DownstreamPaddleOpen = false;
  disc bool North_SCADA_DownstreamPaddleClose = false;
  disc bool North_SCADA_DownstreamPaddleStop = false;
  disc bool North_SCADA_DownstreamEnteringTLRedRed = false;
  disc bool North_SCADA_DownstreamEnteringTLRed = false;
  disc bool North_SCADA_DownstreamEnteringTLRedGreen = false;
  disc bool North_SCADA_DownstreamEnteringTLGreen = false;
  disc bool North_SCADA_DownstreamLeavingTLRed = false;
  disc bool North_SCADA_DownstreamLeavingTLGreen = false;
  disc bool North_SCADA_UpstreamGateOpen = false;
  disc bool North_SCADA_UpstreamGateClose = false;
  disc bool North_SCADA_UpstreamGateStop = false;
  disc bool North_SCADA_UpstreamPaddleOpen = false;
  disc bool North_SCADA_UpstreamPaddleClose = false;
  disc bool North_SCADA_UpstreamPaddleStop = false;
  disc bool North_SCADA_UpstreamEnteringTLRedRed = false;
  disc bool North_SCADA_UpstreamEnteringTLRed = false;
  disc bool North_SCADA_UpstreamEnteringTLRedGreen = false;
  disc bool North_SCADA_UpstreamEnteringTLGreen = false;
  disc bool North_SCADA_UpstreamLeavingTLRed = false;
  disc bool North_SCADA_UpstreamLeavingTLGreen = false;
  disc E North_SCADA = Inactive;
  input bool South_HW_EmergencyStop_Active;
  input bool South_HW_EnteringTL_BNH_East_Red;
  input bool South_HW_EnteringTL_BNH_East_Green;
  input bool South_HW_EnteringTL_BNH_East_RedRed;
  disc bool South_HW_EnteringTL_BNH_East_Q_Red = true;
  disc bool South_HW_EnteringTL_BNH_East_Q_Green = false;
  disc bool South_HW_EnteringTL_BNH_East_Q_RedRed = false;
  input bool South_HW_EnteringTL_BNH_West_Red;
  input bool South_HW_EnteringTL_BNH_West_Green;
  input bool South_HW_EnteringTL_BNH_West_RedRed;
  disc bool South_HW_EnteringTL_BNH_West_Q_Red = true;
  disc bool South_HW_EnteringTL_BNH_West_Q_Green = false;
  disc bool South_HW_EnteringTL_BNH_West_Q_RedRed = false;
  input bool South_HW_EnteringTL_BVH_East_Red;
  input bool South_HW_EnteringTL_BVH_East_Green;
  input bool South_HW_EnteringTL_BVH_East_RedRed;
  disc bool South_HW_EnteringTL_BVH_East_Q_Red = true;
  disc bool South_HW_EnteringTL_BVH_East_Q_Green = false;
  disc bool South_HW_EnteringTL_BVH_East_Q_RedRed = false;
  input bool South_HW_EnteringTL_BVH_West_Red;
  input bool South_HW_EnteringTL_BVH_West_Green;
  input bool South_HW_EnteringTL_BVH_West_RedRed;
  disc bool South_HW_EnteringTL_BVH_West_Q_Red = true;
  disc bool South_HW_EnteringTL_BVH_West_Q_Green = false;
  disc bool South_HW_EnteringTL_BVH_West_Q_RedRed = false;
  input bool South_HW_EqualWaterSensor_BNH_Equal;
  input bool South_HW_EqualWaterSensor_BVH_Equal;
  input bool South_HW_Gate_BNH_East_Open;
  input bool South_HW_Gate_BNH_East_Closed;
  disc bool South_HW_Gate_BNH_East_Q_Open = false;
  disc bool South_HW_Gate_BNH_East_Q_Close = false;
  input bool South_HW_Gate_BNH_West_Open;
  input bool South_HW_Gate_BNH_West_Closed;
  disc bool South_HW_Gate_BNH_West_Q_Open = false;
  disc bool South_HW_Gate_BNH_West_Q_Close = false;
  input bool South_HW_Gate_BVH_East_Open;
  input bool South_HW_Gate_BVH_East_Closed;
  disc bool South_HW_Gate_BVH_East_Q_Open = false;
  disc bool South_HW_Gate_BVH_East_Q_Close = false;
  input bool South_HW_Gate_BVH_West_Open;
  input bool South_HW_Gate_BVH_West_Closed;
  disc bool South_HW_Gate_BVH_West_Q_Open = false;
  disc bool South_HW_Gate_BVH_West_Q_Close = false;
  input bool South_HW_LeavingTL_BNH_East_Red;
  input bool South_HW_LeavingTL_BNH_East_Green;
  disc bool South_HW_LeavingTL_BNH_East_Q_Red = true;
  disc bool South_HW_LeavingTL_BNH_East_Q_Green = false;
  input bool South_HW_LeavingTL_BNH_West_Red;
  input bool South_HW_LeavingTL_BNH_West_Green;
  disc bool South_HW_LeavingTL_BNH_West_Q_Red = true;
  disc bool South_HW_LeavingTL_BNH_West_Q_Green = false;
  input bool South_HW_LeavingTL_BVH_East_Red;
  input bool South_HW_LeavingTL_BVH_East_Green;
  disc bool South_HW_LeavingTL_BVH_East_Q_Red = true;
  disc bool South_HW_LeavingTL_BVH_East_Q_Green = false;
  input bool South_HW_LeavingTL_BVH_West_Red;
  input bool South_HW_LeavingTL_BVH_West_Green;
  disc bool South_HW_LeavingTL_BVH_West_Q_Red = true;
  disc bool South_HW_LeavingTL_BVH_West_Q_Green = false;
  input bool South_HW_Paddle_BNH_East_Open;
  input bool South_HW_Paddle_BNH_East_Closed;
  disc bool South_HW_Paddle_BNH_East_Q_Open = false;
  disc bool South_HW_Paddle_BNH_East_Q_Close = false;
  input bool South_HW_Paddle_BNH_West_Open;
  input bool South_HW_Paddle_BNH_West_Closed;
  disc bool South_HW_Paddle_BNH_West_Q_Open = false;
  disc bool South_HW_Paddle_BNH_West_Q_Close = false;
  input bool South_HW_Paddle_BVH_East_Open;
  input bool South_HW_Paddle_BVH_East_Closed;
  disc bool South_HW_Paddle_BVH_East_Q_Open = false;
  disc bool South_HW_Paddle_BVH_East_Q_Close = false;
  input bool South_HW_Paddle_BVH_West_Open;
  input bool South_HW_Paddle_BVH_West_Closed;
  disc bool South_HW_Paddle_BVH_West_Q_Open = false;
  disc bool South_HW_Paddle_BVH_West_Q_Close = false;
  disc bool South_SCADA_DownstreamGateOpen = false;
  disc bool South_SCADA_DownstreamGateClose = false;
  disc bool South_SCADA_DownstreamGateStop = false;
  disc bool South_SCADA_DownstreamPaddleOpen = false;
  disc bool South_SCADA_DownstreamPaddleClose = false;
  disc bool South_SCADA_DownstreamPaddleStop = false;
  disc bool South_SCADA_DownstreamEnteringTLRedRed = false;
  disc bool South_SCADA_DownstreamEnteringTLRed = false;
  disc bool South_SCADA_DownstreamEnteringTLRedGreen = false;
  disc bool South_SCADA_DownstreamEnteringTLGreen = false;
  disc bool South_SCADA_DownstreamLeavingTLRed = false;
  disc bool South_SCADA_DownstreamLeavingTLGreen = false;
  disc bool South_SCADA_UpstreamGateOpen = false;
  disc bool South_SCADA_UpstreamGateClose = false;
  disc bool South_SCADA_UpstreamGateStop = false;
  disc bool South_SCADA_UpstreamPaddleOpen = false;
  disc bool South_SCADA_UpstreamPaddleClose = false;
  disc bool South_SCADA_UpstreamPaddleStop = false;
  disc bool South_SCADA_UpstreamEnteringTLRedRed = false;
  disc bool South_SCADA_UpstreamEnteringTLRed = false;
  disc bool South_SCADA_UpstreamEnteringTLRedGreen = false;
  disc bool South_SCADA_UpstreamEnteringTLGreen = false;
  disc bool South_SCADA_UpstreamLeavingTLRed = false;
  disc bool South_SCADA_UpstreamLeavingTLGreen = false;
  disc E South_SCADA = Inactive;
  disc E sup_Barrier_Barrier_Actuator = Rest;
  disc E sup_Barrier_Barrier_Sensor = Closed;
  disc E sup_Barrier_Commands = NoCommand;
  disc E sup_Barrier_Downstream_TLs_East_Actuator = Red;
  disc E sup_Barrier_Downstream_TLs_East_SensorG = Off;
  disc E sup_Barrier_Downstream_TLs_East_SensorR = On;
  disc E sup_Barrier_Downstream_TLs_West_Actuator = Red;
  disc E sup_Barrier_Downstream_TLs_West_SensorG = Off;
  disc E sup_Barrier_Downstream_TLs_West_SensorR = On;
  disc E sup_Barrier_EmergencyStop = Inactive;
  disc E sup_Barrier_Upstream_TLs_East_Actuator = Red;
  disc E sup_Barrier_Upstream_TLs_East_SensorG = Off;
  disc E sup_Barrier_Upstream_TLs_East_SensorR = On;
  disc E sup_Barrier_Upstream_TLs_West_Actuator = Red;
  disc E sup_Barrier_Upstream_TLs_West_SensorG = Off;
  disc E sup_Barrier_Upstream_TLs_West_SensorR = On;
  disc E sup_North_Commands = NoCommand;
  disc E sup_North_Downstream_EnteringTLs_East_Actuator = Red;
  disc E sup_North_Downstream_EnteringTLs_East_SensorG = Off;
  disc E sup_North_Downstream_EnteringTLs_East_SensorR1 = On;
  disc E sup_North_Downstream_EnteringTLs_East_SensorR2 = Off;
  disc E sup_North_Downstream_EnteringTLs_West_Actuator = Red;
  disc E sup_North_Downstream_EnteringTLs_West_SensorG = Off;
  disc E sup_North_Downstream_EnteringTLs_West_SensorR1 = On;
  disc E sup_North_Downstream_EnteringTLs_West_SensorR2 = Off;
  disc E sup_North_Downstream_EqualWaterSensor = Unequal;
  disc E sup_North_Downstream_Gates_East_Actuator = Rest;
  disc E sup_North_Downstream_Gates_East_Sensor = Closed;
  disc E sup_North_Downstream_Gates_West_Actuator = Rest;
  disc E sup_North_Downstream_Gates_West_Sensor = Closed;
  disc E sup_North_Downstream_LeavingTLs_East_Actuator = Red;
  disc E sup_North_Downstream_LeavingTLs_East_SensorG = Off;
  disc E sup_North_Downstream_LeavingTLs_East_SensorR = On;
  disc E sup_North_Downstream_LeavingTLs_West_Actuator = Red;
  disc E sup_North_Downstream_LeavingTLs_West_SensorG = Off;
  disc E sup_North_Downstream_LeavingTLs_West_SensorR = On;
  disc E sup_North_Downstream_Paddles_East_Actuator = Rest;
  disc E sup_North_Downstream_Paddles_East_Sensor = Closed;
  disc E sup_North_Downstream_Paddles_West_Actuator = Rest;
  disc E sup_North_Downstream_Paddles_West_Sensor = Closed;
  disc E sup_North_EmergencyStop = Inactive;
  disc E sup_North_Upstream_EnteringTLs_East_Actuator = Red;
  disc E sup_North_Upstream_EnteringTLs_East_SensorG = Off;
  disc E sup_North_Upstream_EnteringTLs_East_SensorR1 = On;
  disc E sup_North_Upstream_EnteringTLs_East_SensorR2 = Off;
  disc E sup_North_Upstream_EnteringTLs_West_Actuator = Red;
  disc E sup_North_Upstream_EnteringTLs_West_SensorG = Off;
  disc E sup_North_Upstream_EnteringTLs_West_SensorR1 = On;
  disc E sup_North_Upstream_EnteringTLs_West_SensorR2 = Off;
  disc E sup_North_Upstream_EqualWaterSensor = Unequal;
  disc E sup_North_Upstream_Gates_East_Actuator = Rest;
  disc E sup_North_Upstream_Gates_East_Sensor = Closed;
  disc E sup_North_Upstream_Gates_West_Actuator = Rest;
  disc E sup_North_Upstream_Gates_West_Sensor = Closed;
  disc E sup_North_Upstream_LeavingTLs_East_Actuator = Red;
  disc E sup_North_Upstream_LeavingTLs_East_SensorG = Off;
  disc E sup_North_Upstream_LeavingTLs_East_SensorR = On;
  disc E sup_North_Upstream_LeavingTLs_West_Actuator = Red;
  disc E sup_North_Upstream_LeavingTLs_West_SensorG = Off;
  disc E sup_North_Upstream_LeavingTLs_West_SensorR = On;
  disc E sup_North_Upstream_Paddles_East_Actuator = Rest;
  disc E sup_North_Upstream_Paddles_East_Sensor = Closed;
  disc E sup_North_Upstream_Paddles_West_Actuator = Rest;
  disc E sup_North_Upstream_Paddles_West_Sensor = Closed;
  disc E sup_South_Commands = NoCommand;
  disc E sup_South_Downstream_EnteringTLs_East_Actuator = Red;
  disc E sup_South_Downstream_EnteringTLs_East_SensorG = Off;
  disc E sup_South_Downstream_EnteringTLs_East_SensorR1 = On;
  disc E sup_South_Downstream_EnteringTLs_East_SensorR2 = Off;
  disc E sup_South_Downstream_EnteringTLs_West_Actuator = Red;
  disc E sup_South_Downstream_EnteringTLs_West_SensorG = Off;
  disc E sup_South_Downstream_EnteringTLs_West_SensorR1 = On;
  disc E sup_South_Downstream_EnteringTLs_West_SensorR2 = Off;
  disc E sup_South_Downstream_EqualWaterSensor = Unequal;
  disc E sup_South_Downstream_Gates_East_Actuator = Rest;
  disc E sup_South_Downstream_Gates_East_Sensor = Closed;
  disc E sup_South_Downstream_Gates_West_Actuator = Rest;
  disc E sup_South_Downstream_Gates_West_Sensor = Closed;
  disc E sup_South_Downstream_LeavingTLs_East_Actuator = Red;
  disc E sup_South_Downstream_LeavingTLs_East_SensorG = Off;
  disc E sup_South_Downstream_LeavingTLs_East_SensorR = On;
  disc E sup_South_Downstream_LeavingTLs_West_Actuator = Red;
  disc E sup_South_Downstream_LeavingTLs_West_SensorG = Off;
  disc E sup_South_Downstream_LeavingTLs_West_SensorR = On;
  disc E sup_South_Downstream_Paddles_East_Actuator = Rest;
  disc E sup_South_Downstream_Paddles_East_Sensor = Closed;
  disc E sup_South_Downstream_Paddles_West_Actuator = Rest;
  disc E sup_South_Downstream_Paddles_West_Sensor = Closed;
  disc E sup_South_EmergencyStop = Inactive;
  disc E sup_South_Upstream_EnteringTLs_East_Actuator = Red;
  disc E sup_South_Upstream_EnteringTLs_East_SensorG = Off;
  disc E sup_South_Upstream_EnteringTLs_East_SensorR1 = On;
  disc E sup_South_Upstream_EnteringTLs_East_SensorR2 = Off;
  disc E sup_South_Upstream_EnteringTLs_West_Actuator = Red;
  disc E sup_South_Upstream_EnteringTLs_West_SensorG = Off;
  disc E sup_South_Upstream_EnteringTLs_West_SensorR1 = On;
  disc E sup_South_Upstream_EnteringTLs_West_SensorR2 = Off;
  disc E sup_South_Upstream_EqualWaterSensor = Unequal;
  disc E sup_South_Upstream_Gates_East_Actuator = Rest;
  disc E sup_South_Upstream_Gates_East_Sensor = Closed;
  disc E sup_South_Upstream_Gates_West_Actuator = Rest;
  disc E sup_South_Upstream_Gates_West_Sensor = Closed;
  disc E sup_South_Upstream_LeavingTLs_East_Actuator = Red;
  disc E sup_South_Upstream_LeavingTLs_East_SensorG = Off;
  disc E sup_South_Upstream_LeavingTLs_East_SensorR = On;
  disc E sup_South_Upstream_LeavingTLs_West_Actuator = Red;
  disc E sup_South_Upstream_LeavingTLs_West_SensorG = Off;
  disc E sup_South_Upstream_LeavingTLs_West_SensorR = On;
  disc E sup_South_Upstream_Paddles_East_Actuator = Rest;
  disc E sup_South_Upstream_Paddles_East_Sensor = Closed;
  disc E sup_South_Upstream_Paddles_West_Actuator = Rest;
  disc E sup_South_Upstream_Paddles_West_Sensor = Closed;
  marked false;
  location L:
    initial;
    marked;
    edge Barrier_Barrier_Actuator_c_close when sup_Barrier_Barrier_Actuator = Rest and sup_Barrier_Barrier_Sensor != Closed and (sup_Barrier_Downstream_TLs_East_Actuator = Red and (sup_Barrier_Downstream_TLs_East_SensorR = On and (sup_Barrier_Downstream_TLs_East_SensorG = Off and sup_Barrier_Downstream_TLs_West_Actuator = Red))) and (sup_Barrier_Downstream_TLs_West_SensorR = On and sup_Barrier_Downstream_TLs_West_SensorG = Off and (sup_Barrier_Upstream_TLs_East_Actuator = Red and (sup_Barrier_Upstream_TLs_East_SensorR = On and sup_Barrier_Upstream_TLs_East_SensorG = Off)) and (sup_Barrier_Upstream_TLs_West_Actuator = Red and (sup_Barrier_Upstream_TLs_West_SensorR = On and sup_Barrier_Upstream_TLs_West_SensorG = Off) and sup_Barrier_Commands = BarrierClose)) do Barrier_HW_Barrier_BVH_East_Q_Close := true, sup_Barrier_Barrier_Actuator := Closing;
    edge Barrier_Barrier_Actuator_c_emergencyStop when (sup_Barrier_Barrier_Actuator = Opening or sup_Barrier_Barrier_Actuator = Closing) and (sup_Barrier_EmergencyStop = Active or sup_Barrier_Commands = BarrierStop) do Barrier_HW_Barrier_BVH_East_Q_Close := false, Barrier_HW_Barrier_BVH_East_Q_Open := false, if sup_Barrier_Barrier_Actuator = Opening: sup_Barrier_Barrier_Actuator := Rest elif sup_Barrier_Barrier_Actuator = Closing: sup_Barrier_Barrier_Actuator := Rest end;
    edge Barrier_Barrier_Actuator_c_endStopClosing when sup_Barrier_Barrier_Actuator = Closing and sup_Barrier_Barrier_Sensor = Closed do Barrier_HW_Barrier_BVH_East_Q_Close := false, sup_Barrier_Barrier_Actuator := Rest;
    edge Barrier_Barrier_Actuator_c_endStopOpening when sup_Barrier_Barrier_Actuator = Opening and sup_Barrier_Barrier_Sensor = Open do Barrier_HW_Barrier_BVH_East_Q_Open := false, sup_Barrier_Barrier_Actuator := Rest;
    edge Barrier_Barrier_Actuator_c_open when sup_Barrier_Barrier_Actuator = Rest and (sup_Barrier_Barrier_Sensor != Open and sup_Barrier_Commands = BarrierOpen) do Barrier_HW_Barrier_BVH_East_Q_Open := true, sup_Barrier_Barrier_Actuator := Opening;
    edge Barrier_Barrier_Sensor_u_closed_off when not Barrier_HW_Barrier_BVH_East_Closed and (sup_Barrier_Barrier_Actuator = Opening and sup_Barrier_Barrier_Sensor = Closed) do sup_Barrier_Barrier_Sensor := Intermediate;
    edge Barrier_Barrier_Sensor_u_closed_on when Barrier_HW_Barrier_BVH_East_Closed and (sup_Barrier_Barrier_Actuator = Closing and sup_Barrier_Barrier_Sensor = Intermediate) do sup_Barrier_Barrier_Sensor := Closed;
    edge Barrier_Barrier_Sensor_u_open_off when not Barrier_HW_Barrier_BVH_East_Open and (sup_Barrier_Barrier_Actuator = Closing and sup_Barrier_Barrier_Sensor = Open) do sup_Barrier_Barrier_Sensor := Intermediate;
    edge Barrier_Barrier_Sensor_u_open_on when Barrier_HW_Barrier_BVH_East_Open and (sup_Barrier_Barrier_Actuator = Opening and sup_Barrier_Barrier_Sensor = Intermediate) do sup_Barrier_Barrier_Sensor := Open;
    edge Barrier_Commands_BarrierClose_act when Barrier_SCADA = Inactive and Barrier_SCADA_BarrierClose do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Commands_BarrierOpen_act when Barrier_SCADA = Inactive and Barrier_SCADA_BarrierOpen do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Commands_BarrierStop_act when Barrier_SCADA = Inactive and Barrier_SCADA_BarrierStop do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Commands_Deactivate when Barrier_SCADA = Active and not Barrier_SCADA_BarrierOpen and (not Barrier_SCADA_BarrierClose and not Barrier_SCADA_BarrierStop) and (not Barrier_SCADA_DownstreamTLRed and not Barrier_SCADA_DownstreamTLGreen and (not Barrier_SCADA_UpstreamTLRed and not Barrier_SCADA_UpstreamTLGreen)) do Barrier_SCADA := Inactive, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := NoCommand elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := NoCommand end;
    edge Barrier_Commands_DownstreamTLGreen_act when Barrier_SCADA = Inactive and Barrier_SCADA_DownstreamTLGreen do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Commands_DownstreamTLRed_act when Barrier_SCADA = Inactive and Barrier_SCADA_DownstreamTLRed do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Commands_UpstreamTLGreen_act when Barrier_SCADA = Inactive and Barrier_SCADA_UpstreamTLGreen do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := UpstreamTLGreen elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Commands_UpstreamTLRed_act when Barrier_SCADA = Inactive and Barrier_SCADA_UpstreamTLRed do Barrier_SCADA := Active, if sup_Barrier_Commands = NoCommand: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = BarrierOpen: sup_Barrier_Commands := BarrierOpen elif sup_Barrier_Commands = BarrierClose: sup_Barrier_Commands := BarrierClose elif sup_Barrier_Commands = BarrierStop: sup_Barrier_Commands := BarrierStop elif sup_Barrier_Commands = DownstreamTLRed: sup_Barrier_Commands := DownstreamTLRed elif sup_Barrier_Commands = DownstreamTLGreen: sup_Barrier_Commands := DownstreamTLGreen elif sup_Barrier_Commands = UpstreamTLRed: sup_Barrier_Commands := UpstreamTLRed elif sup_Barrier_Commands = UpstreamTLGreen: sup_Barrier_Commands := UpstreamTLGreen end;
    edge Barrier_Downstream_TLs_East_Actuator_c_g when sup_Barrier_Downstream_TLs_East_Actuator = Red and (sup_Barrier_Barrier_Actuator = Rest and sup_Barrier_Barrier_Sensor = Open and sup_Barrier_Commands = DownstreamTLGreen) do Barrier_HW_TL_BNH_East_Q_Red := false, Barrier_HW_TL_BNH_East_Q_Green := true, sup_Barrier_Downstream_TLs_East_Actuator := Green;
    edge Barrier_Downstream_TLs_East_Actuator_c_r when sup_Barrier_Downstream_TLs_East_Actuator = Green and sup_Barrier_Commands = DownstreamTLRed do Barrier_HW_TL_BNH_East_Q_Red := true, Barrier_HW_TL_BNH_East_Q_Green := false, sup_Barrier_Downstream_TLs_East_Actuator := Red;
    edge Barrier_Downstream_TLs_East_SensorG_u_off when not Barrier_HW_TL_BNH_East_Green and (sup_Barrier_Downstream_TLs_East_Actuator = Red and sup_Barrier_Downstream_TLs_East_SensorG = On) do sup_Barrier_Downstream_TLs_East_SensorG := Off;
    edge Barrier_Downstream_TLs_East_SensorG_u_on when Barrier_HW_TL_BNH_East_Green and (sup_Barrier_Downstream_TLs_East_Actuator != Red and sup_Barrier_Downstream_TLs_East_SensorG = Off) do sup_Barrier_Downstream_TLs_East_SensorG := On;
    edge Barrier_Downstream_TLs_East_SensorR_u_off when not Barrier_HW_TL_BNH_East_Red and (sup_Barrier_Downstream_TLs_East_Actuator = Green and sup_Barrier_Downstream_TLs_East_SensorR = On) do sup_Barrier_Downstream_TLs_East_SensorR := Off;
    edge Barrier_Downstream_TLs_East_SensorR_u_on when Barrier_HW_TL_BNH_East_Red and (sup_Barrier_Downstream_TLs_East_Actuator != Green and sup_Barrier_Downstream_TLs_East_SensorR = Off) do sup_Barrier_Downstream_TLs_East_SensorR := On;
    edge Barrier_Downstream_TLs_West_Actuator_c_g when sup_Barrier_Downstream_TLs_West_Actuator = Red and (sup_Barrier_Barrier_Actuator = Rest and sup_Barrier_Barrier_Sensor = Open and sup_Barrier_Commands = DownstreamTLGreen) do Barrier_HW_TL_BNH_West_Q_Red := false, Barrier_HW_TL_BNH_West_Q_Green := true, sup_Barrier_Downstream_TLs_West_Actuator := Green;
    edge Barrier_Downstream_TLs_West_Actuator_c_r when sup_Barrier_Downstream_TLs_West_Actuator = Green and sup_Barrier_Commands = DownstreamTLRed do Barrier_HW_TL_BNH_West_Q_Red := true, Barrier_HW_TL_BNH_West_Q_Green := false, sup_Barrier_Downstream_TLs_West_Actuator := Red;
    edge Barrier_Downstream_TLs_West_SensorG_u_off when not Barrier_HW_TL_BNH_West_Green and (sup_Barrier_Downstream_TLs_West_Actuator = Red and sup_Barrier_Downstream_TLs_West_SensorG = On) do sup_Barrier_Downstream_TLs_West_SensorG := Off;
    edge Barrier_Downstream_TLs_West_SensorG_u_on when Barrier_HW_TL_BNH_West_Green and (sup_Barrier_Downstream_TLs_West_Actuator != Red and sup_Barrier_Downstream_TLs_West_SensorG = Off) do sup_Barrier_Downstream_TLs_West_SensorG := On;
    edge Barrier_Downstream_TLs_West_SensorR_u_off when not Barrier_HW_TL_BNH_West_Red and (sup_Barrier_Downstream_TLs_West_Actuator = Green and sup_Barrier_Downstream_TLs_West_SensorR = On) do sup_Barrier_Downstream_TLs_West_SensorR := Off;
    edge Barrier_Downstream_TLs_West_SensorR_u_on when Barrier_HW_TL_BNH_West_Red and (sup_Barrier_Downstream_TLs_West_Actuator != Green and sup_Barrier_Downstream_TLs_West_SensorR = Off) do sup_Barrier_Downstream_TLs_West_SensorR := On;
    edge Barrier_EmergencyStop_u_activate when Barrier_HW_EmergencyStop_Active and sup_Barrier_EmergencyStop = Inactive do sup_Barrier_EmergencyStop := Active;
    edge Barrier_EmergencyStop_u_deactivate when not Barrier_HW_EmergencyStop_Active and sup_Barrier_EmergencyStop = Active do sup_Barrier_EmergencyStop := Inactive;
    edge Barrier_Upstream_TLs_East_Actuator_c_g when sup_Barrier_Upstream_TLs_East_Actuator = Red and (sup_Barrier_Barrier_Actuator = Rest and sup_Barrier_Barrier_Sensor = Open and sup_Barrier_Commands = UpstreamTLGreen) do Barrier_HW_TL_BVH_East_Q_Red := false, Barrier_HW_TL_BVH_East_Q_Green := true, sup_Barrier_Upstream_TLs_East_Actuator := Green;
    edge Barrier_Upstream_TLs_East_Actuator_c_r when sup_Barrier_Upstream_TLs_East_Actuator = Green and sup_Barrier_Commands = UpstreamTLRed do Barrier_HW_TL_BVH_East_Q_Red := true, Barrier_HW_TL_BVH_East_Q_Green := false, sup_Barrier_Upstream_TLs_East_Actuator := Red;
    edge Barrier_Upstream_TLs_East_SensorG_u_off when not Barrier_HW_TL_BVH_East_Green and (sup_Barrier_Upstream_TLs_East_Actuator = Red and sup_Barrier_Upstream_TLs_East_SensorG = On) do sup_Barrier_Upstream_TLs_East_SensorG := Off;
    edge Barrier_Upstream_TLs_East_SensorG_u_on when Barrier_HW_TL_BVH_East_Green and (sup_Barrier_Upstream_TLs_East_Actuator != Red and sup_Barrier_Upstream_TLs_East_SensorG = Off) do sup_Barrier_Upstream_TLs_East_SensorG := On;
    edge Barrier_Upstream_TLs_East_SensorR_u_off when not Barrier_HW_TL_BVH_East_Red and (sup_Barrier_Upstream_TLs_East_Actuator = Green and sup_Barrier_Upstream_TLs_East_SensorR = On) do sup_Barrier_Upstream_TLs_East_SensorR := Off;
    edge Barrier_Upstream_TLs_East_SensorR_u_on when Barrier_HW_TL_BVH_East_Red and (sup_Barrier_Upstream_TLs_East_Actuator != Green and sup_Barrier_Upstream_TLs_East_SensorR = Off) do sup_Barrier_Upstream_TLs_East_SensorR := On;
    edge Barrier_Upstream_TLs_West_Actuator_c_g when sup_Barrier_Upstream_TLs_West_Actuator = Red and (sup_Barrier_Barrier_Actuator = Rest and sup_Barrier_Barrier_Sensor = Open and sup_Barrier_Commands = UpstreamTLGreen) do Barrier_HW_TL_BVH_West_Q_Red := false, Barrier_HW_TL_BVH_West_Q_Green := true, sup_Barrier_Upstream_TLs_West_Actuator := Green;
    edge Barrier_Upstream_TLs_West_Actuator_c_r when sup_Barrier_Upstream_TLs_West_Actuator = Green and sup_Barrier_Commands = UpstreamTLRed do Barrier_HW_TL_BVH_West_Q_Red := true, Barrier_HW_TL_BVH_West_Q_Green := false, sup_Barrier_Upstream_TLs_West_Actuator := Red;
    edge Barrier_Upstream_TLs_West_SensorG_u_off when not Barrier_HW_TL_BVH_West_Green and (sup_Barrier_Upstream_TLs_West_Actuator = Red and sup_Barrier_Upstream_TLs_West_SensorG = On) do sup_Barrier_Upstream_TLs_West_SensorG := Off;
    edge Barrier_Upstream_TLs_West_SensorG_u_on when Barrier_HW_TL_BVH_West_Green and (sup_Barrier_Upstream_TLs_West_Actuator != Red and sup_Barrier_Upstream_TLs_West_SensorG = Off) do sup_Barrier_Upstream_TLs_West_SensorG := On;
    edge Barrier_Upstream_TLs_West_SensorR_u_off when not Barrier_HW_TL_BVH_West_Red and (sup_Barrier_Upstream_TLs_West_Actuator = Green and sup_Barrier_Upstream_TLs_West_SensorR = On) do sup_Barrier_Upstream_TLs_West_SensorR := Off;
    edge Barrier_Upstream_TLs_West_SensorR_u_on when Barrier_HW_TL_BVH_West_Red and (sup_Barrier_Upstream_TLs_West_Actuator != Green and sup_Barrier_Upstream_TLs_West_SensorR = Off) do sup_Barrier_Upstream_TLs_West_SensorR := On;
    edge North_Commands_Deactivate when North_SCADA = Active and (not North_SCADA_DownstreamGateOpen and not North_SCADA_DownstreamGateClose) and (not North_SCADA_DownstreamGateStop and (not North_SCADA_DownstreamPaddleOpen and not North_SCADA_DownstreamPaddleClose)) and (not North_SCADA_DownstreamPaddleStop and (not North_SCADA_DownstreamEnteringTLRedRed and not North_SCADA_DownstreamEnteringTLRed) and (not North_SCADA_DownstreamEnteringTLRedGreen and (not North_SCADA_DownstreamEnteringTLGreen and not North_SCADA_DownstreamLeavingTLRed))) and (not North_SCADA_DownstreamLeavingTLGreen and (not North_SCADA_UpstreamGateOpen and not North_SCADA_UpstreamGateClose) and (not North_SCADA_UpstreamGateStop and (not North_SCADA_UpstreamPaddleOpen and not North_SCADA_UpstreamPaddleClose)) and (not North_SCADA_UpstreamPaddleStop and (not North_SCADA_UpstreamEnteringTLRedRed and not North_SCADA_UpstreamEnteringTLRed) and (not North_SCADA_UpstreamEnteringTLRedGreen and not North_SCADA_UpstreamEnteringTLGreen and (not North_SCADA_UpstreamLeavingTLRed and not North_SCADA_UpstreamLeavingTLGreen)))) do North_SCADA := Inactive, if sup_North_Commands = NoCommand: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := NoCommand elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := NoCommand elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := NoCommand end;
    edge North_Commands_DownstreamEnteringTLGreen_act when North_SCADA = Inactive and North_SCADA_DownstreamEnteringTLGreen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamEnteringTLRed_act when North_SCADA = Inactive and North_SCADA_DownstreamEnteringTLRed do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamEnteringTLRedGreen_act when North_SCADA = Inactive and North_SCADA_DownstreamEnteringTLRedGreen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamEnteringTLRedRed_act when North_SCADA = Inactive and North_SCADA_DownstreamEnteringTLRedRed do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamGateClose_act when North_SCADA = Inactive and North_SCADA_DownstreamGateClose do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamGateOpen_act when North_SCADA = Inactive and North_SCADA_DownstreamGateOpen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamGateStop_act when North_SCADA = Inactive and North_SCADA_DownstreamGateStop do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamLeavingTLGreen_act when North_SCADA = Inactive and North_SCADA_DownstreamLeavingTLGreen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamLeavingTLRed_act when North_SCADA = Inactive and North_SCADA_DownstreamLeavingTLRed do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamPaddleClose_act when North_SCADA = Inactive and North_SCADA_DownstreamPaddleClose do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamPaddleOpen_act when North_SCADA = Inactive and North_SCADA_DownstreamPaddleOpen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_DownstreamPaddleStop_act when North_SCADA = Inactive and North_SCADA_DownstreamPaddleStop do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamEnteringTLGreen_act when North_SCADA = Inactive and North_SCADA_UpstreamEnteringTLGreen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamEnteringTLRed_act when North_SCADA = Inactive and North_SCADA_UpstreamEnteringTLRed do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamEnteringTLRedGreen_act when North_SCADA = Inactive and North_SCADA_UpstreamEnteringTLRedGreen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamEnteringTLRedRed_act when North_SCADA = Inactive and North_SCADA_UpstreamEnteringTLRedRed do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamGateClose_act when North_SCADA = Inactive and North_SCADA_UpstreamGateClose do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamGateOpen_act when North_SCADA = Inactive and North_SCADA_UpstreamGateOpen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamGateStop_act when North_SCADA = Inactive and North_SCADA_UpstreamGateStop do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamLeavingTLGreen_act when North_SCADA = Inactive and North_SCADA_UpstreamLeavingTLGreen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamLeavingTLGreen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamLeavingTLRed_act when North_SCADA = Inactive and North_SCADA_UpstreamLeavingTLRed do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamPaddleClose_act when North_SCADA = Inactive and North_SCADA_UpstreamPaddleClose do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamPaddleOpen_act when North_SCADA = Inactive and North_SCADA_UpstreamPaddleOpen do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Commands_UpstreamPaddleStop_act when North_SCADA = Inactive and North_SCADA_UpstreamPaddleStop do North_SCADA := Active, if sup_North_Commands = NoCommand: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = DownstreamGateOpen: sup_North_Commands := DownstreamGateOpen elif sup_North_Commands = DownstreamGateClose: sup_North_Commands := DownstreamGateClose elif sup_North_Commands = DownstreamGateStop: sup_North_Commands := DownstreamGateStop elif sup_North_Commands = DownstreamPaddleOpen: sup_North_Commands := DownstreamPaddleOpen elif sup_North_Commands = DownstreamPaddleClose: sup_North_Commands := DownstreamPaddleClose elif sup_North_Commands = DownstreamPaddleStop: sup_North_Commands := DownstreamPaddleStop elif sup_North_Commands = DownstreamEnteringTLRedRed: sup_North_Commands := DownstreamEnteringTLRedRed elif sup_North_Commands = DownstreamEnteringTLRed: sup_North_Commands := DownstreamEnteringTLRed elif sup_North_Commands = DownstreamEnteringTLRedGreen: sup_North_Commands := DownstreamEnteringTLRedGreen elif sup_North_Commands = DownstreamEnteringTLGreen: sup_North_Commands := DownstreamEnteringTLGreen elif sup_North_Commands = DownstreamLeavingTLRed: sup_North_Commands := DownstreamLeavingTLRed elif sup_North_Commands = DownstreamLeavingTLGreen: sup_North_Commands := DownstreamLeavingTLGreen elif sup_North_Commands = UpstreamGateOpen: sup_North_Commands := UpstreamGateOpen elif sup_North_Commands = UpstreamGateClose: sup_North_Commands := UpstreamGateClose elif sup_North_Commands = UpstreamGateStop: sup_North_Commands := UpstreamGateStop elif sup_North_Commands = UpstreamPaddleOpen: sup_North_Commands := UpstreamPaddleOpen elif sup_North_Commands = UpstreamPaddleClose: sup_North_Commands := UpstreamPaddleClose elif sup_North_Commands = UpstreamPaddleStop: sup_North_Commands := UpstreamPaddleStop elif sup_North_Commands = UpstreamEnteringTLRedRed: sup_North_Commands := UpstreamEnteringTLRedRed elif sup_North_Commands = UpstreamEnteringTLRed: sup_North_Commands := UpstreamEnteringTLRed elif sup_North_Commands = UpstreamEnteringTLRedGreen: sup_North_Commands := UpstreamEnteringTLRedGreen elif sup_North_Commands = UpstreamEnteringTLGreen: sup_North_Commands := UpstreamEnteringTLGreen elif sup_North_Commands = UpstreamLeavingTLRed: sup_North_Commands := UpstreamLeavingTLRed elif sup_North_Commands = UpstreamLeavingTLGreen: sup_North_Commands := UpstreamLeavingTLGreen end;
    edge North_Downstream_EnteringTLs_East_Actuator_c_g when sup_North_Downstream_EnteringTLs_East_Actuator = RedGreen and (sup_North_Downstream_LeavingTLs_East_Actuator = Red and sup_North_Downstream_LeavingTLs_East_SensorR = On and (sup_North_Downstream_LeavingTLs_East_SensorG = Off and sup_North_Downstream_LeavingTLs_West_Actuator = Red)) and (sup_North_Downstream_LeavingTLs_West_SensorR = On and sup_North_Downstream_LeavingTLs_West_SensorG = Off and (sup_North_Downstream_Gates_East_Actuator = Rest and sup_North_Downstream_Gates_East_Sensor = Open) and (sup_North_Downstream_Gates_West_Actuator = Rest and sup_North_Downstream_Gates_West_Sensor = Open and sup_North_Commands = DownstreamEnteringTLGreen)) do North_HW_EnteringTL_BNH_East_Q_Green := true, sup_North_Downstream_EnteringTLs_East_Actuator := Green;
    edge North_Downstream_EnteringTLs_East_Actuator_c_r when (sup_North_Downstream_EnteringTLs_East_Actuator = RedRed or (sup_North_Downstream_EnteringTLs_East_Actuator = RedGreen or sup_North_Downstream_EnteringTLs_East_Actuator = Green)) and sup_North_Commands = DownstreamEnteringTLRed do North_HW_EnteringTL_BNH_East_Q_Red := true, North_HW_EnteringTL_BNH_East_Q_Green := false, North_HW_EnteringTL_BNH_East_Q_RedRed := false, if sup_North_Downstream_EnteringTLs_East_Actuator = RedRed: sup_North_Downstream_EnteringTLs_East_Actuator := Red elif sup_North_Downstream_EnteringTLs_East_Actuator = RedGreen: sup_North_Downstream_EnteringTLs_East_Actuator := Red elif sup_North_Downstream_EnteringTLs_East_Actuator = Green: sup_North_Downstream_EnteringTLs_East_Actuator := Red end;
    edge North_Downstream_EnteringTLs_East_Actuator_c_rg when sup_North_Downstream_EnteringTLs_East_Actuator = Red and sup_North_Commands = DownstreamEnteringTLRedGreen do North_HW_EnteringTL_BNH_East_Q_Red := true, North_HW_EnteringTL_BNH_East_Q_Green := true, sup_North_Downstream_EnteringTLs_East_Actuator := RedGreen;
    edge North_Downstream_EnteringTLs_East_Actuator_c_rr when sup_North_Downstream_EnteringTLs_East_Actuator = Red and sup_North_Commands = DownstreamEnteringTLRedRed do North_HW_EnteringTL_BNH_East_Q_RedRed := true, sup_North_Downstream_EnteringTLs_East_Actuator := RedRed;
    edge North_Downstream_EnteringTLs_East_SensorG_u_off when not North_HW_EnteringTL_BNH_East_Green and ((sup_North_Downstream_EnteringTLs_East_Actuator = Red or sup_North_Downstream_EnteringTLs_East_Actuator = RedRed) and sup_North_Downstream_EnteringTLs_East_SensorG = On) do sup_North_Downstream_EnteringTLs_East_SensorG := Off;
    edge North_Downstream_EnteringTLs_East_SensorG_u_on when North_HW_EnteringTL_BNH_East_Green and ((sup_North_Downstream_EnteringTLs_East_Actuator = Green or sup_North_Downstream_EnteringTLs_East_Actuator = RedGreen) and sup_North_Downstream_EnteringTLs_East_SensorG = Off) do sup_North_Downstream_EnteringTLs_East_SensorG := On;
    edge North_Downstream_EnteringTLs_East_SensorR1_u_off when not North_HW_EnteringTL_BNH_East_Red and (sup_North_Downstream_EnteringTLs_East_Actuator = Green and sup_North_Downstream_EnteringTLs_East_SensorR1 = On) do sup_North_Downstream_EnteringTLs_East_SensorR1 := Off;
    edge North_Downstream_EnteringTLs_East_SensorR1_u_on when North_HW_EnteringTL_BNH_East_Red and (sup_North_Downstream_EnteringTLs_East_Actuator != Green and sup_North_Downstream_EnteringTLs_East_SensorR1 = Off) do sup_North_Downstream_EnteringTLs_East_SensorR1 := On;
    edge North_Downstream_EnteringTLs_East_SensorR2_u_off when not North_HW_EnteringTL_BNH_East_RedRed and (sup_North_Downstream_EnteringTLs_East_Actuator != RedRed and sup_North_Downstream_EnteringTLs_East_SensorR2 = On) do sup_North_Downstream_EnteringTLs_East_SensorR2 := Off;
    edge North_Downstream_EnteringTLs_East_SensorR2_u_on when North_HW_EnteringTL_BNH_East_RedRed and (sup_North_Downstream_EnteringTLs_East_Actuator = RedRed and sup_North_Downstream_EnteringTLs_East_SensorR2 = Off) do sup_North_Downstream_EnteringTLs_East_SensorR2 := On;
    edge North_Downstream_EnteringTLs_West_Actuator_c_g when sup_North_Downstream_EnteringTLs_West_Actuator = RedGreen and (sup_North_Downstream_LeavingTLs_East_Actuator = Red and sup_North_Downstream_LeavingTLs_East_SensorR = On and (sup_North_Downstream_LeavingTLs_East_SensorG = Off and sup_North_Downstream_LeavingTLs_West_Actuator = Red)) and (sup_North_Downstream_LeavingTLs_West_SensorR = On and sup_North_Downstream_LeavingTLs_West_SensorG = Off and (sup_North_Downstream_Gates_East_Actuator = Rest and sup_North_Downstream_Gates_East_Sensor = Open) and (sup_North_Downstream_Gates_West_Actuator = Rest and sup_North_Downstream_Gates_West_Sensor = Open and sup_North_Commands = DownstreamEnteringTLGreen)) do North_HW_EnteringTL_BNH_West_Q_Green := true, sup_North_Downstream_EnteringTLs_West_Actuator := Green;
    edge North_Downstream_EnteringTLs_West_Actuator_c_r when (sup_North_Downstream_EnteringTLs_West_Actuator = RedRed or (sup_North_Downstream_EnteringTLs_West_Actuator = RedGreen or sup_North_Downstream_EnteringTLs_West_Actuator = Green)) and sup_North_Commands = DownstreamEnteringTLRed do North_HW_EnteringTL_BNH_West_Q_Red := true, North_HW_EnteringTL_BNH_West_Q_Green := false, North_HW_EnteringTL_BNH_West_Q_RedRed := false, if sup_North_Downstream_EnteringTLs_West_Actuator = RedRed: sup_North_Downstream_EnteringTLs_West_Actuator := Red elif sup_North_Downstream_EnteringTLs_West_Actuator = RedGreen: sup_North_Downstream_EnteringTLs_West_Actuator := Red elif sup_North_Downstream_EnteringTLs_West_Actuator = Green: sup_North_Downstream_EnteringTLs_West_Actuator := Red end;
    edge North_Downstream_EnteringTLs_West_Actuator_c_rg when sup_North_Downstream_EnteringTLs_West_Actuator = Red and sup_North_Commands = DownstreamEnteringTLRedGreen do North_HW_EnteringTL_BNH_West_Q_Red := true, North_HW_EnteringTL_BNH_West_Q_Green := true, sup_North_Downstream_EnteringTLs_West_Actuator := RedGreen;
    edge North_Downstream_EnteringTLs_West_Actuator_c_rr when sup_North_Downstream_EnteringTLs_West_Actuator = Red and sup_North_Commands = DownstreamEnteringTLRedRed do North_HW_EnteringTL_BNH_West_Q_RedRed := true, sup_North_Downstream_EnteringTLs_West_Actuator := RedRed;
    edge North_Downstream_EnteringTLs_West_SensorG_u_off when not North_HW_EnteringTL_BNH_West_Green and ((sup_North_Downstream_EnteringTLs_West_Actuator = Red or sup_North_Downstream_EnteringTLs_West_Actuator = RedRed) and sup_North_Downstream_EnteringTLs_West_SensorG = On) do sup_North_Downstream_EnteringTLs_West_SensorG := Off;
    edge North_Downstream_EnteringTLs_West_SensorG_u_on when North_HW_EnteringTL_BNH_West_Green and ((sup_North_Downstream_EnteringTLs_West_Actuator = Green or sup_North_Downstream_EnteringTLs_West_Actuator = RedGreen) and sup_North_Downstream_EnteringTLs_West_SensorG = Off) do sup_North_Downstream_EnteringTLs_West_SensorG := On;
    edge North_Downstream_EnteringTLs_West_SensorR1_u_off when not North_HW_EnteringTL_BNH_West_Red and (sup_North_Downstream_EnteringTLs_West_Actuator = Green and sup_North_Downstream_EnteringTLs_West_SensorR1 = On) do sup_North_Downstream_EnteringTLs_West_SensorR1 := Off;
    edge North_Downstream_EnteringTLs_West_SensorR1_u_on when North_HW_EnteringTL_BNH_West_Red and (sup_North_Downstream_EnteringTLs_West_Actuator != Green and sup_North_Downstream_EnteringTLs_West_SensorR1 = Off) do sup_North_Downstream_EnteringTLs_West_SensorR1 := On;
    edge North_Downstream_EnteringTLs_West_SensorR2_u_off when not North_HW_EnteringTL_BNH_West_RedRed and (sup_North_Downstream_EnteringTLs_West_Actuator != RedRed and sup_North_Downstream_EnteringTLs_West_SensorR2 = On) do sup_North_Downstream_EnteringTLs_West_SensorR2 := Off;
    edge North_Downstream_EnteringTLs_West_SensorR2_u_on when North_HW_EnteringTL_BNH_West_RedRed and (sup_North_Downstream_EnteringTLs_West_Actuator = RedRed and sup_North_Downstream_EnteringTLs_West_SensorR2 = Off) do sup_North_Downstream_EnteringTLs_West_SensorR2 := On;
    edge North_Downstream_EqualWaterSensor_u_off when not North_HW_EqualWaterSensor_BNH_Equal and sup_North_Downstream_EqualWaterSensor = Equal do sup_North_Downstream_EqualWaterSensor := Unequal;
    edge North_Downstream_EqualWaterSensor_u_on when North_HW_EqualWaterSensor_BNH_Equal and sup_North_Downstream_EqualWaterSensor = Unequal do sup_North_Downstream_EqualWaterSensor := Equal;
    edge North_Downstream_Gates_East_Actuator_c_close when sup_North_Downstream_Gates_East_Actuator = Rest and (sup_North_Downstream_Gates_East_Sensor != Closed and ((sup_North_Downstream_EnteringTLs_East_Actuator = Red and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Downstream_EnteringTLs_West_Actuator = Red and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Downstream_EnteringTLs_East_Actuator = RedRed and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = On and (sup_North_Downstream_EnteringTLs_West_Actuator = RedRed and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Downstream_LeavingTLs_East_Actuator = Red)) and (sup_North_Downstream_LeavingTLs_East_SensorR = On and sup_North_Downstream_LeavingTLs_East_SensorG = Off and (sup_North_Downstream_LeavingTLs_West_Actuator = Red and sup_North_Downstream_LeavingTLs_West_SensorR = On) and (sup_North_Downstream_LeavingTLs_West_SensorG = Off and sup_North_EmergencyStop != Active and sup_North_Commands = DownstreamGateClose)) do North_HW_Gate_BNH_East_Q_Close := true, sup_North_Downstream_Gates_East_Actuator := Closing;
    edge North_Downstream_Gates_East_Actuator_c_emergencyStop when (sup_North_Downstream_Gates_East_Actuator = Opening or sup_North_Downstream_Gates_East_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = DownstreamGateStop) do North_HW_Gate_BNH_East_Q_Close := false, North_HW_Gate_BNH_East_Q_Open := false, if sup_North_Downstream_Gates_East_Actuator = Opening: sup_North_Downstream_Gates_East_Actuator := Rest elif sup_North_Downstream_Gates_East_Actuator = Closing: sup_North_Downstream_Gates_East_Actuator := Rest end;
    edge North_Downstream_Gates_East_Actuator_c_endStopClosing when sup_North_Downstream_Gates_East_Actuator = Closing and sup_North_Downstream_Gates_East_Sensor = Closed do North_HW_Gate_BNH_East_Q_Close := false, sup_North_Downstream_Gates_East_Actuator := Rest;
    edge North_Downstream_Gates_East_Actuator_c_endStopOpening when sup_North_Downstream_Gates_East_Actuator = Opening and sup_North_Downstream_Gates_East_Sensor = Open do North_HW_Gate_BNH_East_Q_Open := false, sup_North_Downstream_Gates_East_Actuator := Rest;
    edge North_Downstream_Gates_East_Actuator_c_open when sup_North_Downstream_Gates_East_Actuator = Rest and (sup_North_Downstream_Gates_East_Sensor != Open and sup_North_Downstream_EqualWaterSensor != Unequal) and (sup_North_Upstream_Paddles_East_Actuator = Rest and sup_North_Upstream_Paddles_East_Sensor = Closed and (sup_North_Upstream_Paddles_West_Actuator = Rest and sup_North_Upstream_Paddles_West_Sensor = Closed) and (sup_North_EmergencyStop != Active and sup_North_Commands = DownstreamGateOpen)) do North_HW_Gate_BNH_East_Q_Open := true, sup_North_Downstream_Gates_East_Actuator := Opening;
    edge North_Downstream_Gates_East_Sensor_u_closed_off when not North_HW_Gate_BNH_East_Closed and (sup_North_Downstream_Gates_East_Actuator = Opening and sup_North_Downstream_Gates_East_Sensor = Closed) do sup_North_Downstream_Gates_East_Sensor := Intermediate;
    edge North_Downstream_Gates_East_Sensor_u_closed_on when North_HW_Gate_BNH_East_Closed and (sup_North_Downstream_Gates_East_Actuator = Closing and sup_North_Downstream_Gates_East_Sensor = Intermediate) do sup_North_Downstream_Gates_East_Sensor := Closed;
    edge North_Downstream_Gates_East_Sensor_u_open_off when not North_HW_Gate_BNH_East_Open and (sup_North_Downstream_Gates_East_Actuator = Closing and sup_North_Downstream_Gates_East_Sensor = Open) do sup_North_Downstream_Gates_East_Sensor := Intermediate;
    edge North_Downstream_Gates_East_Sensor_u_open_on when North_HW_Gate_BNH_East_Open and (sup_North_Downstream_Gates_East_Actuator = Opening and sup_North_Downstream_Gates_East_Sensor = Intermediate) do sup_North_Downstream_Gates_East_Sensor := Open;
    edge North_Downstream_Gates_West_Actuator_c_close when sup_North_Downstream_Gates_West_Actuator = Rest and (sup_North_Downstream_Gates_West_Sensor != Closed and ((sup_North_Downstream_EnteringTLs_East_Actuator = Red and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Downstream_EnteringTLs_West_Actuator = Red and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Downstream_EnteringTLs_East_Actuator = RedRed and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = On and (sup_North_Downstream_EnteringTLs_West_Actuator = RedRed and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Downstream_LeavingTLs_East_Actuator = Red)) and (sup_North_Downstream_LeavingTLs_East_SensorR = On and sup_North_Downstream_LeavingTLs_East_SensorG = Off and (sup_North_Downstream_LeavingTLs_West_Actuator = Red and sup_North_Downstream_LeavingTLs_West_SensorR = On) and (sup_North_Downstream_LeavingTLs_West_SensorG = Off and sup_North_EmergencyStop != Active and sup_North_Commands = DownstreamGateClose)) do North_HW_Gate_BNH_West_Q_Close := true, sup_North_Downstream_Gates_West_Actuator := Closing;
    edge North_Downstream_Gates_West_Actuator_c_emergencyStop when (sup_North_Downstream_Gates_West_Actuator = Opening or sup_North_Downstream_Gates_West_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = DownstreamGateStop) do North_HW_Gate_BNH_West_Q_Close := false, North_HW_Gate_BNH_West_Q_Open := false, if sup_North_Downstream_Gates_West_Actuator = Opening: sup_North_Downstream_Gates_West_Actuator := Rest elif sup_North_Downstream_Gates_West_Actuator = Closing: sup_North_Downstream_Gates_West_Actuator := Rest end;
    edge North_Downstream_Gates_West_Actuator_c_endStopClosing when sup_North_Downstream_Gates_West_Actuator = Closing and sup_North_Downstream_Gates_West_Sensor = Closed do North_HW_Gate_BNH_West_Q_Close := false, sup_North_Downstream_Gates_West_Actuator := Rest;
    edge North_Downstream_Gates_West_Actuator_c_endStopOpening when sup_North_Downstream_Gates_West_Actuator = Opening and sup_North_Downstream_Gates_West_Sensor = Open do North_HW_Gate_BNH_West_Q_Open := false, sup_North_Downstream_Gates_West_Actuator := Rest;
    edge North_Downstream_Gates_West_Actuator_c_open when sup_North_Downstream_Gates_West_Actuator = Rest and (sup_North_Downstream_Gates_West_Sensor != Open and sup_North_Downstream_EqualWaterSensor != Unequal) and (sup_North_Upstream_Paddles_East_Actuator = Rest and sup_North_Upstream_Paddles_East_Sensor = Closed and (sup_North_Upstream_Paddles_West_Actuator = Rest and sup_North_Upstream_Paddles_West_Sensor = Closed) and (sup_North_EmergencyStop != Active and sup_North_Commands = DownstreamGateOpen)) do North_HW_Gate_BNH_West_Q_Open := true, sup_North_Downstream_Gates_West_Actuator := Opening;
    edge North_Downstream_Gates_West_Sensor_u_closed_off when not North_HW_Gate_BNH_West_Closed and (sup_North_Downstream_Gates_West_Actuator = Opening and sup_North_Downstream_Gates_West_Sensor = Closed) do sup_North_Downstream_Gates_West_Sensor := Intermediate;
    edge North_Downstream_Gates_West_Sensor_u_closed_on when North_HW_Gate_BNH_West_Closed and (sup_North_Downstream_Gates_West_Actuator = Closing and sup_North_Downstream_Gates_West_Sensor = Intermediate) do sup_North_Downstream_Gates_West_Sensor := Closed;
    edge North_Downstream_Gates_West_Sensor_u_open_off when not North_HW_Gate_BNH_West_Open and (sup_North_Downstream_Gates_West_Actuator = Closing and sup_North_Downstream_Gates_West_Sensor = Open) do sup_North_Downstream_Gates_West_Sensor := Intermediate;
    edge North_Downstream_Gates_West_Sensor_u_open_on when North_HW_Gate_BNH_West_Open and (sup_North_Downstream_Gates_West_Actuator = Opening and sup_North_Downstream_Gates_West_Sensor = Intermediate) do sup_North_Downstream_Gates_West_Sensor := Open;
    edge North_Downstream_LeavingTLs_East_Actuator_c_g when sup_North_Downstream_LeavingTLs_East_Actuator = Red and ((sup_North_Downstream_EnteringTLs_East_Actuator = Red and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Downstream_EnteringTLs_West_Actuator = Red and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Downstream_EnteringTLs_East_Actuator = RedRed and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = On and (sup_North_Downstream_EnteringTLs_West_Actuator = RedRed and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Downstream_Gates_East_Actuator = Rest) and (sup_North_Downstream_Gates_East_Sensor = Open and (sup_North_Downstream_Gates_West_Actuator = Rest and sup_North_Downstream_Gates_West_Sensor = Open) and sup_North_Commands = DownstreamLeavingTLGreen) do North_HW_LeavingTL_BNH_East_Q_Red := false, North_HW_LeavingTL_BNH_East_Q_Green := true, sup_North_Downstream_LeavingTLs_East_Actuator := Green;
    edge North_Downstream_LeavingTLs_East_Actuator_c_r when sup_North_Downstream_LeavingTLs_East_Actuator = Green and sup_North_Commands = DownstreamLeavingTLRed do North_HW_LeavingTL_BNH_East_Q_Red := true, North_HW_LeavingTL_BNH_East_Q_Green := false, sup_North_Downstream_LeavingTLs_East_Actuator := Red;
    edge North_Downstream_LeavingTLs_East_SensorG_u_off when not North_HW_LeavingTL_BNH_East_Green and (sup_North_Downstream_LeavingTLs_East_Actuator = Red and sup_North_Downstream_LeavingTLs_East_SensorG = On) do sup_North_Downstream_LeavingTLs_East_SensorG := Off;
    edge North_Downstream_LeavingTLs_East_SensorG_u_on when North_HW_LeavingTL_BNH_East_Green and (sup_North_Downstream_LeavingTLs_East_Actuator != Red and sup_North_Downstream_LeavingTLs_East_SensorG = Off) do sup_North_Downstream_LeavingTLs_East_SensorG := On;
    edge North_Downstream_LeavingTLs_East_SensorR_u_off when not North_HW_LeavingTL_BNH_East_Red and (sup_North_Downstream_LeavingTLs_East_Actuator = Green and sup_North_Downstream_LeavingTLs_East_SensorR = On) do sup_North_Downstream_LeavingTLs_East_SensorR := Off;
    edge North_Downstream_LeavingTLs_East_SensorR_u_on when North_HW_LeavingTL_BNH_East_Red and (sup_North_Downstream_LeavingTLs_East_Actuator != Green and sup_North_Downstream_LeavingTLs_East_SensorR = Off) do sup_North_Downstream_LeavingTLs_East_SensorR := On;
    edge North_Downstream_LeavingTLs_West_Actuator_c_g when sup_North_Downstream_LeavingTLs_West_Actuator = Red and ((sup_North_Downstream_EnteringTLs_East_Actuator = Red and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Downstream_EnteringTLs_West_Actuator = Red and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Downstream_EnteringTLs_East_Actuator = RedRed and sup_North_Downstream_EnteringTLs_East_SensorR1 = On and sup_North_Downstream_EnteringTLs_East_SensorG = Off and sup_North_Downstream_EnteringTLs_East_SensorR2 = On and (sup_North_Downstream_EnteringTLs_West_Actuator = RedRed and sup_North_Downstream_EnteringTLs_West_SensorR1 = On and sup_North_Downstream_EnteringTLs_West_SensorG = Off and sup_North_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Downstream_Gates_East_Actuator = Rest) and (sup_North_Downstream_Gates_East_Sensor = Open and (sup_North_Downstream_Gates_West_Actuator = Rest and sup_North_Downstream_Gates_West_Sensor = Open) and sup_North_Commands = DownstreamLeavingTLGreen) do North_HW_LeavingTL_BNH_West_Q_Red := false, North_HW_LeavingTL_BNH_West_Q_Green := true, sup_North_Downstream_LeavingTLs_West_Actuator := Green;
    edge North_Downstream_LeavingTLs_West_Actuator_c_r when sup_North_Downstream_LeavingTLs_West_Actuator = Green and sup_North_Commands = DownstreamLeavingTLRed do North_HW_LeavingTL_BNH_West_Q_Red := true, North_HW_LeavingTL_BNH_West_Q_Green := false, sup_North_Downstream_LeavingTLs_West_Actuator := Red;
    edge North_Downstream_LeavingTLs_West_SensorG_u_off when not North_HW_LeavingTL_BNH_West_Green and (sup_North_Downstream_LeavingTLs_West_Actuator = Red and sup_North_Downstream_LeavingTLs_West_SensorG = On) do sup_North_Downstream_LeavingTLs_West_SensorG := Off;
    edge North_Downstream_LeavingTLs_West_SensorG_u_on when North_HW_LeavingTL_BNH_West_Green and (sup_North_Downstream_LeavingTLs_West_Actuator != Red and sup_North_Downstream_LeavingTLs_West_SensorG = Off) do sup_North_Downstream_LeavingTLs_West_SensorG := On;
    edge North_Downstream_LeavingTLs_West_SensorR_u_off when not North_HW_LeavingTL_BNH_West_Red and (sup_North_Downstream_LeavingTLs_West_Actuator = Green and sup_North_Downstream_LeavingTLs_West_SensorR = On) do sup_North_Downstream_LeavingTLs_West_SensorR := Off;
    edge North_Downstream_LeavingTLs_West_SensorR_u_on when North_HW_LeavingTL_BNH_West_Red and (sup_North_Downstream_LeavingTLs_West_Actuator != Green and sup_North_Downstream_LeavingTLs_West_SensorR = Off) do sup_North_Downstream_LeavingTLs_West_SensorR := On;
    edge North_Downstream_Paddles_East_Actuator_c_close when sup_North_Downstream_Paddles_East_Actuator = Rest and sup_North_Downstream_Paddles_East_Sensor != Closed and (sup_North_EmergencyStop != Active and sup_North_Commands = DownstreamPaddleClose) do North_HW_Paddle_BNH_East_Q_Close := true, sup_North_Downstream_Paddles_East_Actuator := Closing;
    edge North_Downstream_Paddles_East_Actuator_c_emergencyStop when (sup_North_Downstream_Paddles_East_Actuator = Opening or sup_North_Downstream_Paddles_East_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = DownstreamPaddleStop) do North_HW_Paddle_BNH_East_Q_Close := false, North_HW_Paddle_BNH_East_Q_Open := false, if sup_North_Downstream_Paddles_East_Actuator = Opening: sup_North_Downstream_Paddles_East_Actuator := Rest elif sup_North_Downstream_Paddles_East_Actuator = Closing: sup_North_Downstream_Paddles_East_Actuator := Rest end;
    edge North_Downstream_Paddles_East_Actuator_c_endStopClosing when sup_North_Downstream_Paddles_East_Actuator = Closing and sup_North_Downstream_Paddles_East_Sensor = Closed do North_HW_Paddle_BNH_East_Q_Close := false, sup_North_Downstream_Paddles_East_Actuator := Rest;
    edge North_Downstream_Paddles_East_Actuator_c_endStopOpening when sup_North_Downstream_Paddles_East_Actuator = Opening and sup_North_Downstream_Paddles_East_Sensor = Open do North_HW_Paddle_BNH_East_Q_Open := false, sup_North_Downstream_Paddles_East_Actuator := Rest;
    edge North_Downstream_Paddles_East_Actuator_c_open when sup_North_Downstream_Paddles_East_Actuator = Rest and sup_North_Downstream_Paddles_East_Sensor != Open and (sup_North_Upstream_Paddles_East_Actuator = Rest and sup_North_Upstream_Paddles_East_Sensor = Closed and (sup_North_Upstream_Paddles_West_Actuator = Rest and (sup_North_Upstream_Paddles_West_Sensor = Closed and sup_North_Upstream_Gates_East_Actuator = Rest))) and (sup_North_Upstream_Gates_East_Sensor = Closed and sup_North_Upstream_Gates_West_Actuator = Rest and (sup_North_Upstream_Gates_West_Sensor = Closed and (sup_North_Upstream_Gates_East_Actuator = Rest and sup_North_Upstream_Gates_East_Sensor = Closed)) and (sup_North_Upstream_Gates_West_Actuator = Rest and (sup_North_Upstream_Gates_West_Sensor = Closed and sup_North_EmergencyStop != Active) and sup_North_Commands = DownstreamPaddleOpen)) do North_HW_Paddle_BNH_East_Q_Open := true, sup_North_Downstream_Paddles_East_Actuator := Opening;
    edge North_Downstream_Paddles_East_Sensor_u_closed_off when not North_HW_Paddle_BNH_East_Closed and (sup_North_Downstream_Paddles_East_Actuator = Opening and sup_North_Downstream_Paddles_East_Sensor = Closed) do sup_North_Downstream_Paddles_East_Sensor := Intermediate;
    edge North_Downstream_Paddles_East_Sensor_u_closed_on when North_HW_Paddle_BNH_East_Closed and (sup_North_Downstream_Paddles_East_Actuator = Closing and sup_North_Downstream_Paddles_East_Sensor = Intermediate) do sup_North_Downstream_Paddles_East_Sensor := Closed;
    edge North_Downstream_Paddles_East_Sensor_u_open_off when not North_HW_Paddle_BNH_East_Open and (sup_North_Downstream_Paddles_East_Actuator = Closing and sup_North_Downstream_Paddles_East_Sensor = Open) do sup_North_Downstream_Paddles_East_Sensor := Intermediate;
    edge North_Downstream_Paddles_East_Sensor_u_open_on when North_HW_Paddle_BNH_East_Open and (sup_North_Downstream_Paddles_East_Actuator = Opening and sup_North_Downstream_Paddles_East_Sensor = Intermediate) do sup_North_Downstream_Paddles_East_Sensor := Open;
    edge North_Downstream_Paddles_West_Actuator_c_close when sup_North_Downstream_Paddles_West_Actuator = Rest and sup_North_Downstream_Paddles_West_Sensor != Closed and (sup_North_EmergencyStop != Active and sup_North_Commands = DownstreamPaddleClose) do North_HW_Paddle_BNH_West_Q_Close := true, sup_North_Downstream_Paddles_West_Actuator := Closing;
    edge North_Downstream_Paddles_West_Actuator_c_emergencyStop when (sup_North_Downstream_Paddles_West_Actuator = Opening or sup_North_Downstream_Paddles_West_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = DownstreamPaddleStop) do North_HW_Paddle_BNH_West_Q_Close := false, North_HW_Paddle_BNH_West_Q_Open := false, if sup_North_Downstream_Paddles_West_Actuator = Opening: sup_North_Downstream_Paddles_West_Actuator := Rest elif sup_North_Downstream_Paddles_West_Actuator = Closing: sup_North_Downstream_Paddles_West_Actuator := Rest end;
    edge North_Downstream_Paddles_West_Actuator_c_endStopClosing when sup_North_Downstream_Paddles_West_Actuator = Closing and sup_North_Downstream_Paddles_West_Sensor = Closed do North_HW_Paddle_BNH_West_Q_Close := false, sup_North_Downstream_Paddles_West_Actuator := Rest;
    edge North_Downstream_Paddles_West_Actuator_c_endStopOpening when sup_North_Downstream_Paddles_West_Actuator = Opening and sup_North_Downstream_Paddles_West_Sensor = Open do North_HW_Paddle_BNH_West_Q_Open := false, sup_North_Downstream_Paddles_West_Actuator := Rest;
    edge North_Downstream_Paddles_West_Actuator_c_open when sup_North_Downstream_Paddles_West_Actuator = Rest and sup_North_Downstream_Paddles_West_Sensor != Open and (sup_North_Upstream_Paddles_East_Actuator = Rest and sup_North_Upstream_Paddles_East_Sensor = Closed and (sup_North_Upstream_Paddles_West_Actuator = Rest and (sup_North_Upstream_Paddles_West_Sensor = Closed and sup_North_Upstream_Gates_East_Actuator = Rest))) and (sup_North_Upstream_Gates_East_Sensor = Closed and sup_North_Upstream_Gates_West_Actuator = Rest and (sup_North_Upstream_Gates_West_Sensor = Closed and (sup_North_Upstream_Gates_East_Actuator = Rest and sup_North_Upstream_Gates_East_Sensor = Closed)) and (sup_North_Upstream_Gates_West_Actuator = Rest and (sup_North_Upstream_Gates_West_Sensor = Closed and sup_North_EmergencyStop != Active) and sup_North_Commands = DownstreamPaddleOpen)) do North_HW_Paddle_BNH_West_Q_Open := true, sup_North_Downstream_Paddles_West_Actuator := Opening;
    edge North_Downstream_Paddles_West_Sensor_u_closed_off when not North_HW_Paddle_BNH_West_Closed and (sup_North_Downstream_Paddles_West_Actuator = Opening and sup_North_Downstream_Paddles_West_Sensor = Closed) do sup_North_Downstream_Paddles_West_Sensor := Intermediate;
    edge North_Downstream_Paddles_West_Sensor_u_closed_on when North_HW_Paddle_BNH_West_Closed and (sup_North_Downstream_Paddles_West_Actuator = Closing and sup_North_Downstream_Paddles_West_Sensor = Intermediate) do sup_North_Downstream_Paddles_West_Sensor := Closed;
    edge North_Downstream_Paddles_West_Sensor_u_open_off when not North_HW_Paddle_BNH_West_Open and (sup_North_Downstream_Paddles_West_Actuator = Closing and sup_North_Downstream_Paddles_West_Sensor = Open) do sup_North_Downstream_Paddles_West_Sensor := Intermediate;
    edge North_Downstream_Paddles_West_Sensor_u_open_on when North_HW_Paddle_BNH_West_Open and (sup_North_Downstream_Paddles_West_Actuator = Opening and sup_North_Downstream_Paddles_West_Sensor = Intermediate) do sup_North_Downstream_Paddles_West_Sensor := Open;
    edge North_EmergencyStop_u_activate when North_HW_EmergencyStop_Active and sup_North_EmergencyStop = Inactive do sup_North_EmergencyStop := Active;
    edge North_EmergencyStop_u_deactivate when not North_HW_EmergencyStop_Active and sup_North_EmergencyStop = Active do sup_North_EmergencyStop := Inactive;
    edge North_Upstream_EnteringTLs_East_Actuator_c_g when sup_North_Upstream_EnteringTLs_East_Actuator = RedGreen and (sup_North_Upstream_LeavingTLs_East_Actuator = Red and sup_North_Upstream_LeavingTLs_East_SensorR = On and (sup_North_Upstream_LeavingTLs_East_SensorG = Off and sup_North_Upstream_LeavingTLs_West_Actuator = Red)) and (sup_North_Upstream_LeavingTLs_West_SensorR = On and sup_North_Upstream_LeavingTLs_West_SensorG = Off and (sup_North_Upstream_Gates_East_Actuator = Rest and sup_North_Upstream_Gates_East_Sensor = Open) and (sup_North_Upstream_Gates_West_Actuator = Rest and sup_North_Upstream_Gates_West_Sensor = Open and sup_North_Commands = UpstreamEnteringTLGreen)) do North_HW_EnteringTL_BVH_East_Q_Green := true, sup_North_Upstream_EnteringTLs_East_Actuator := Green;
    edge North_Upstream_EnteringTLs_East_Actuator_c_r when (sup_North_Upstream_EnteringTLs_East_Actuator = RedRed or (sup_North_Upstream_EnteringTLs_East_Actuator = RedGreen or sup_North_Upstream_EnteringTLs_East_Actuator = Green)) and sup_North_Commands = UpstreamEnteringTLRed do North_HW_EnteringTL_BVH_East_Q_Red := true, North_HW_EnteringTL_BVH_East_Q_Green := false, North_HW_EnteringTL_BVH_East_Q_RedRed := false, if sup_North_Upstream_EnteringTLs_East_Actuator = RedRed: sup_North_Upstream_EnteringTLs_East_Actuator := Red elif sup_North_Upstream_EnteringTLs_East_Actuator = RedGreen: sup_North_Upstream_EnteringTLs_East_Actuator := Red elif sup_North_Upstream_EnteringTLs_East_Actuator = Green: sup_North_Upstream_EnteringTLs_East_Actuator := Red end;
    edge North_Upstream_EnteringTLs_East_Actuator_c_rg when sup_North_Upstream_EnteringTLs_East_Actuator = Red and sup_North_Commands = UpstreamEnteringTLRedGreen do North_HW_EnteringTL_BVH_East_Q_Red := true, North_HW_EnteringTL_BVH_East_Q_Green := true, sup_North_Upstream_EnteringTLs_East_Actuator := RedGreen;
    edge North_Upstream_EnteringTLs_East_Actuator_c_rr when sup_North_Upstream_EnteringTLs_East_Actuator = Red and sup_North_Commands = UpstreamEnteringTLRedRed do North_HW_EnteringTL_BVH_East_Q_RedRed := true, sup_North_Upstream_EnteringTLs_East_Actuator := RedRed;
    edge North_Upstream_EnteringTLs_East_SensorG_u_off when not North_HW_EnteringTL_BVH_East_Green and ((sup_North_Upstream_EnteringTLs_East_Actuator = Red or sup_North_Upstream_EnteringTLs_East_Actuator = RedRed) and sup_North_Upstream_EnteringTLs_East_SensorG = On) do sup_North_Upstream_EnteringTLs_East_SensorG := Off;
    edge North_Upstream_EnteringTLs_East_SensorG_u_on when North_HW_EnteringTL_BVH_East_Green and ((sup_North_Upstream_EnteringTLs_East_Actuator = Green or sup_North_Upstream_EnteringTLs_East_Actuator = RedGreen) and sup_North_Upstream_EnteringTLs_East_SensorG = Off) do sup_North_Upstream_EnteringTLs_East_SensorG := On;
    edge North_Upstream_EnteringTLs_East_SensorR1_u_off when not North_HW_EnteringTL_BVH_East_Red and (sup_North_Upstream_EnteringTLs_East_Actuator = Green and sup_North_Upstream_EnteringTLs_East_SensorR1 = On) do sup_North_Upstream_EnteringTLs_East_SensorR1 := Off;
    edge North_Upstream_EnteringTLs_East_SensorR1_u_on when North_HW_EnteringTL_BVH_East_Red and (sup_North_Upstream_EnteringTLs_East_Actuator != Green and sup_North_Upstream_EnteringTLs_East_SensorR1 = Off) do sup_North_Upstream_EnteringTLs_East_SensorR1 := On;
    edge North_Upstream_EnteringTLs_East_SensorR2_u_off when not North_HW_EnteringTL_BVH_East_RedRed and (sup_North_Upstream_EnteringTLs_East_Actuator != RedRed and sup_North_Upstream_EnteringTLs_East_SensorR2 = On) do sup_North_Upstream_EnteringTLs_East_SensorR2 := Off;
    edge North_Upstream_EnteringTLs_East_SensorR2_u_on when North_HW_EnteringTL_BVH_East_RedRed and (sup_North_Upstream_EnteringTLs_East_Actuator = RedRed and sup_North_Upstream_EnteringTLs_East_SensorR2 = Off) do sup_North_Upstream_EnteringTLs_East_SensorR2 := On;
    edge North_Upstream_EnteringTLs_West_Actuator_c_g when sup_North_Upstream_EnteringTLs_West_Actuator = RedGreen and (sup_North_Upstream_LeavingTLs_East_Actuator = Red and sup_North_Upstream_LeavingTLs_East_SensorR = On and (sup_North_Upstream_LeavingTLs_East_SensorG = Off and sup_North_Upstream_LeavingTLs_West_Actuator = Red)) and (sup_North_Upstream_LeavingTLs_West_SensorR = On and sup_North_Upstream_LeavingTLs_West_SensorG = Off and (sup_North_Upstream_Gates_East_Actuator = Rest and sup_North_Upstream_Gates_East_Sensor = Open) and (sup_North_Upstream_Gates_West_Actuator = Rest and sup_North_Upstream_Gates_West_Sensor = Open and sup_North_Commands = UpstreamEnteringTLGreen)) do North_HW_EnteringTL_BVH_West_Q_Green := true, sup_North_Upstream_EnteringTLs_West_Actuator := Green;
    edge North_Upstream_EnteringTLs_West_Actuator_c_r when (sup_North_Upstream_EnteringTLs_West_Actuator = RedRed or (sup_North_Upstream_EnteringTLs_West_Actuator = RedGreen or sup_North_Upstream_EnteringTLs_West_Actuator = Green)) and sup_North_Commands = UpstreamEnteringTLRed do North_HW_EnteringTL_BVH_West_Q_Red := true, North_HW_EnteringTL_BVH_West_Q_Green := false, North_HW_EnteringTL_BVH_West_Q_RedRed := false, if sup_North_Upstream_EnteringTLs_West_Actuator = RedRed: sup_North_Upstream_EnteringTLs_West_Actuator := Red elif sup_North_Upstream_EnteringTLs_West_Actuator = RedGreen: sup_North_Upstream_EnteringTLs_West_Actuator := Red elif sup_North_Upstream_EnteringTLs_West_Actuator = Green: sup_North_Upstream_EnteringTLs_West_Actuator := Red end;
    edge North_Upstream_EnteringTLs_West_Actuator_c_rg when sup_North_Upstream_EnteringTLs_West_Actuator = Red and sup_North_Commands = UpstreamEnteringTLRedGreen do North_HW_EnteringTL_BVH_West_Q_Red := true, North_HW_EnteringTL_BVH_West_Q_Green := true, sup_North_Upstream_EnteringTLs_West_Actuator := RedGreen;
    edge North_Upstream_EnteringTLs_West_Actuator_c_rr when sup_North_Upstream_EnteringTLs_West_Actuator = Red and sup_North_Commands = UpstreamEnteringTLRedRed do North_HW_EnteringTL_BVH_West_Q_RedRed := true, sup_North_Upstream_EnteringTLs_West_Actuator := RedRed;
    edge North_Upstream_EnteringTLs_West_SensorG_u_off when not North_HW_EnteringTL_BVH_West_Green and ((sup_North_Upstream_EnteringTLs_West_Actuator = Red or sup_North_Upstream_EnteringTLs_West_Actuator = RedRed) and sup_North_Upstream_EnteringTLs_West_SensorG = On) do sup_North_Upstream_EnteringTLs_West_SensorG := Off;
    edge North_Upstream_EnteringTLs_West_SensorG_u_on when North_HW_EnteringTL_BVH_West_Green and ((sup_North_Upstream_EnteringTLs_West_Actuator = Green or sup_North_Upstream_EnteringTLs_West_Actuator = RedGreen) and sup_North_Upstream_EnteringTLs_West_SensorG = Off) do sup_North_Upstream_EnteringTLs_West_SensorG := On;
    edge North_Upstream_EnteringTLs_West_SensorR1_u_off when not North_HW_EnteringTL_BVH_West_Red and (sup_North_Upstream_EnteringTLs_West_Actuator = Green and sup_North_Upstream_EnteringTLs_West_SensorR1 = On) do sup_North_Upstream_EnteringTLs_West_SensorR1 := Off;
    edge North_Upstream_EnteringTLs_West_SensorR1_u_on when North_HW_EnteringTL_BVH_West_Red and (sup_North_Upstream_EnteringTLs_West_Actuator != Green and sup_North_Upstream_EnteringTLs_West_SensorR1 = Off) do sup_North_Upstream_EnteringTLs_West_SensorR1 := On;
    edge North_Upstream_EnteringTLs_West_SensorR2_u_off when not North_HW_EnteringTL_BVH_West_RedRed and (sup_North_Upstream_EnteringTLs_West_Actuator != RedRed and sup_North_Upstream_EnteringTLs_West_SensorR2 = On) do sup_North_Upstream_EnteringTLs_West_SensorR2 := Off;
    edge North_Upstream_EnteringTLs_West_SensorR2_u_on when North_HW_EnteringTL_BVH_West_RedRed and (sup_North_Upstream_EnteringTLs_West_Actuator = RedRed and sup_North_Upstream_EnteringTLs_West_SensorR2 = Off) do sup_North_Upstream_EnteringTLs_West_SensorR2 := On;
    edge North_Upstream_EqualWaterSensor_u_off when not North_HW_EqualWaterSensor_BVH_Equal and sup_North_Upstream_EqualWaterSensor = Equal do sup_North_Upstream_EqualWaterSensor := Unequal;
    edge North_Upstream_EqualWaterSensor_u_on when North_HW_EqualWaterSensor_BVH_Equal and sup_North_Upstream_EqualWaterSensor = Unequal do sup_North_Upstream_EqualWaterSensor := Equal;
    edge North_Upstream_Gates_East_Actuator_c_close when sup_North_Upstream_Gates_East_Actuator = Rest and (sup_North_Upstream_Gates_East_Sensor != Closed and ((sup_North_Upstream_EnteringTLs_East_Actuator = Red and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Upstream_EnteringTLs_West_Actuator = Red and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Upstream_EnteringTLs_East_Actuator = RedRed and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = On and (sup_North_Upstream_EnteringTLs_West_Actuator = RedRed and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Upstream_LeavingTLs_East_Actuator = Red)) and (sup_North_Upstream_LeavingTLs_East_SensorR = On and sup_North_Upstream_LeavingTLs_East_SensorG = Off and (sup_North_Upstream_LeavingTLs_West_Actuator = Red and sup_North_Upstream_LeavingTLs_West_SensorR = On) and (sup_North_Upstream_LeavingTLs_West_SensorG = Off and sup_North_EmergencyStop != Active and sup_North_Commands = UpstreamGateClose)) do North_HW_Gate_BVH_East_Q_Close := true, sup_North_Upstream_Gates_East_Actuator := Closing;
    edge North_Upstream_Gates_East_Actuator_c_emergencyStop when (sup_North_Upstream_Gates_East_Actuator = Opening or sup_North_Upstream_Gates_East_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = UpstreamGateStop) do North_HW_Gate_BVH_East_Q_Close := false, North_HW_Gate_BVH_East_Q_Open := false, if sup_North_Upstream_Gates_East_Actuator = Opening: sup_North_Upstream_Gates_East_Actuator := Rest elif sup_North_Upstream_Gates_East_Actuator = Closing: sup_North_Upstream_Gates_East_Actuator := Rest end;
    edge North_Upstream_Gates_East_Actuator_c_endStopClosing when sup_North_Upstream_Gates_East_Actuator = Closing and sup_North_Upstream_Gates_East_Sensor = Closed do North_HW_Gate_BVH_East_Q_Close := false, sup_North_Upstream_Gates_East_Actuator := Rest;
    edge North_Upstream_Gates_East_Actuator_c_endStopOpening when sup_North_Upstream_Gates_East_Actuator = Opening and sup_North_Upstream_Gates_East_Sensor = Open do North_HW_Gate_BVH_East_Q_Open := false, sup_North_Upstream_Gates_East_Actuator := Rest;
    edge North_Upstream_Gates_East_Actuator_c_open when sup_North_Upstream_Gates_East_Actuator = Rest and (sup_North_Upstream_Gates_East_Sensor != Open and sup_North_Upstream_EqualWaterSensor != Unequal) and (sup_North_Downstream_Paddles_East_Actuator = Rest and sup_North_Downstream_Paddles_East_Sensor = Closed and (sup_North_Downstream_Paddles_West_Actuator = Rest and sup_North_Downstream_Paddles_West_Sensor = Closed) and (sup_North_EmergencyStop != Active and sup_North_Commands = UpstreamGateOpen)) do North_HW_Gate_BVH_East_Q_Open := true, sup_North_Upstream_Gates_East_Actuator := Opening;
    edge North_Upstream_Gates_East_Sensor_u_closed_off when not North_HW_Gate_BVH_East_Closed and (sup_North_Upstream_Gates_East_Actuator = Opening and sup_North_Upstream_Gates_East_Sensor = Closed) do sup_North_Upstream_Gates_East_Sensor := Intermediate;
    edge North_Upstream_Gates_East_Sensor_u_closed_on when North_HW_Gate_BVH_East_Closed and (sup_North_Upstream_Gates_East_Actuator = Closing and sup_North_Upstream_Gates_East_Sensor = Intermediate) do sup_North_Upstream_Gates_East_Sensor := Closed;
    edge North_Upstream_Gates_East_Sensor_u_open_off when not North_HW_Gate_BVH_East_Open and (sup_North_Upstream_Gates_East_Actuator = Closing and sup_North_Upstream_Gates_East_Sensor = Open) do sup_North_Upstream_Gates_East_Sensor := Intermediate;
    edge North_Upstream_Gates_East_Sensor_u_open_on when North_HW_Gate_BVH_East_Open and (sup_North_Upstream_Gates_East_Actuator = Opening and sup_North_Upstream_Gates_East_Sensor = Intermediate) do sup_North_Upstream_Gates_East_Sensor := Open;
    edge North_Upstream_Gates_West_Actuator_c_close when sup_North_Upstream_Gates_West_Actuator = Rest and (sup_North_Upstream_Gates_West_Sensor != Closed and ((sup_North_Upstream_EnteringTLs_East_Actuator = Red and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Upstream_EnteringTLs_West_Actuator = Red and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Upstream_EnteringTLs_East_Actuator = RedRed and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = On and (sup_North_Upstream_EnteringTLs_West_Actuator = RedRed and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Upstream_LeavingTLs_East_Actuator = Red)) and (sup_North_Upstream_LeavingTLs_East_SensorR = On and sup_North_Upstream_LeavingTLs_East_SensorG = Off and (sup_North_Upstream_LeavingTLs_West_Actuator = Red and sup_North_Upstream_LeavingTLs_West_SensorR = On) and (sup_North_Upstream_LeavingTLs_West_SensorG = Off and sup_North_EmergencyStop != Active and sup_North_Commands = UpstreamGateClose)) do North_HW_Gate_BVH_West_Q_Close := true, sup_North_Upstream_Gates_West_Actuator := Closing;
    edge North_Upstream_Gates_West_Actuator_c_emergencyStop when (sup_North_Upstream_Gates_West_Actuator = Opening or sup_North_Upstream_Gates_West_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = UpstreamGateStop) do North_HW_Gate_BVH_West_Q_Close := false, North_HW_Gate_BVH_West_Q_Open := false, if sup_North_Upstream_Gates_West_Actuator = Opening: sup_North_Upstream_Gates_West_Actuator := Rest elif sup_North_Upstream_Gates_West_Actuator = Closing: sup_North_Upstream_Gates_West_Actuator := Rest end;
    edge North_Upstream_Gates_West_Actuator_c_endStopClosing when sup_North_Upstream_Gates_West_Actuator = Closing and sup_North_Upstream_Gates_West_Sensor = Closed do North_HW_Gate_BVH_West_Q_Close := false, sup_North_Upstream_Gates_West_Actuator := Rest;
    edge North_Upstream_Gates_West_Actuator_c_endStopOpening when sup_North_Upstream_Gates_West_Actuator = Opening and sup_North_Upstream_Gates_West_Sensor = Open do North_HW_Gate_BVH_West_Q_Open := false, sup_North_Upstream_Gates_West_Actuator := Rest;
    edge North_Upstream_Gates_West_Actuator_c_open when sup_North_Upstream_Gates_West_Actuator = Rest and (sup_North_Upstream_Gates_West_Sensor != Open and sup_North_Upstream_EqualWaterSensor != Unequal) and (sup_North_Downstream_Paddles_East_Actuator = Rest and sup_North_Downstream_Paddles_East_Sensor = Closed and (sup_North_Downstream_Paddles_West_Actuator = Rest and sup_North_Downstream_Paddles_West_Sensor = Closed) and (sup_North_EmergencyStop != Active and sup_North_Commands = UpstreamGateOpen)) do North_HW_Gate_BVH_West_Q_Open := true, sup_North_Upstream_Gates_West_Actuator := Opening;
    edge North_Upstream_Gates_West_Sensor_u_closed_off when not North_HW_Gate_BVH_West_Closed and (sup_North_Upstream_Gates_West_Actuator = Opening and sup_North_Upstream_Gates_West_Sensor = Closed) do sup_North_Upstream_Gates_West_Sensor := Intermediate;
    edge North_Upstream_Gates_West_Sensor_u_closed_on when North_HW_Gate_BVH_West_Closed and (sup_North_Upstream_Gates_West_Actuator = Closing and sup_North_Upstream_Gates_West_Sensor = Intermediate) do sup_North_Upstream_Gates_West_Sensor := Closed;
    edge North_Upstream_Gates_West_Sensor_u_open_off when not North_HW_Gate_BVH_West_Open and (sup_North_Upstream_Gates_West_Actuator = Closing and sup_North_Upstream_Gates_West_Sensor = Open) do sup_North_Upstream_Gates_West_Sensor := Intermediate;
    edge North_Upstream_Gates_West_Sensor_u_open_on when North_HW_Gate_BVH_West_Open and (sup_North_Upstream_Gates_West_Actuator = Opening and sup_North_Upstream_Gates_West_Sensor = Intermediate) do sup_North_Upstream_Gates_West_Sensor := Open;
    edge North_Upstream_LeavingTLs_East_Actuator_c_g when sup_North_Upstream_LeavingTLs_East_Actuator = Red and ((sup_North_Upstream_EnteringTLs_East_Actuator = Red and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Upstream_EnteringTLs_West_Actuator = Red and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Upstream_EnteringTLs_East_Actuator = RedRed and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = On and (sup_North_Upstream_EnteringTLs_West_Actuator = RedRed and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Upstream_Gates_East_Actuator = Rest) and (sup_North_Upstream_Gates_East_Sensor = Open and (sup_North_Upstream_Gates_West_Actuator = Rest and sup_North_Upstream_Gates_West_Sensor = Open) and sup_North_Commands = UpstreamLeavingTLGreen) do North_HW_LeavingTL_BVH_East_Q_Red := false, North_HW_LeavingTL_BVH_East_Q_Green := true, sup_North_Upstream_LeavingTLs_East_Actuator := Green;
    edge North_Upstream_LeavingTLs_East_Actuator_c_r when sup_North_Upstream_LeavingTLs_East_Actuator = Green and sup_North_Commands = UpstreamLeavingTLRed do North_HW_LeavingTL_BVH_East_Q_Red := true, North_HW_LeavingTL_BVH_East_Q_Green := false, sup_North_Upstream_LeavingTLs_East_Actuator := Red;
    edge North_Upstream_LeavingTLs_East_SensorG_u_off when not North_HW_LeavingTL_BVH_East_Green and (sup_North_Upstream_LeavingTLs_East_Actuator = Red and sup_North_Upstream_LeavingTLs_East_SensorG = On) do sup_North_Upstream_LeavingTLs_East_SensorG := Off;
    edge North_Upstream_LeavingTLs_East_SensorG_u_on when North_HW_LeavingTL_BVH_East_Green and (sup_North_Upstream_LeavingTLs_East_Actuator != Red and sup_North_Upstream_LeavingTLs_East_SensorG = Off) do sup_North_Upstream_LeavingTLs_East_SensorG := On;
    edge North_Upstream_LeavingTLs_East_SensorR_u_off when not North_HW_LeavingTL_BVH_East_Red and (sup_North_Upstream_LeavingTLs_East_Actuator = Green and sup_North_Upstream_LeavingTLs_East_SensorR = On) do sup_North_Upstream_LeavingTLs_East_SensorR := Off;
    edge North_Upstream_LeavingTLs_East_SensorR_u_on when North_HW_LeavingTL_BVH_East_Red and (sup_North_Upstream_LeavingTLs_East_Actuator != Green and sup_North_Upstream_LeavingTLs_East_SensorR = Off) do sup_North_Upstream_LeavingTLs_East_SensorR := On;
    edge North_Upstream_LeavingTLs_West_Actuator_c_g when sup_North_Upstream_LeavingTLs_West_Actuator = Red and ((sup_North_Upstream_EnteringTLs_East_Actuator = Red and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_North_Upstream_EnteringTLs_West_Actuator = Red and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_North_Upstream_EnteringTLs_East_Actuator = RedRed and sup_North_Upstream_EnteringTLs_East_SensorR1 = On and sup_North_Upstream_EnteringTLs_East_SensorG = Off and sup_North_Upstream_EnteringTLs_East_SensorR2 = On and (sup_North_Upstream_EnteringTLs_West_Actuator = RedRed and sup_North_Upstream_EnteringTLs_West_SensorR1 = On and sup_North_Upstream_EnteringTLs_West_SensorG = Off and sup_North_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_North_Upstream_Gates_East_Actuator = Rest) and (sup_North_Upstream_Gates_East_Sensor = Open and (sup_North_Upstream_Gates_West_Actuator = Rest and sup_North_Upstream_Gates_West_Sensor = Open) and sup_North_Commands = UpstreamLeavingTLGreen) do North_HW_LeavingTL_BVH_West_Q_Red := false, North_HW_LeavingTL_BVH_West_Q_Green := true, sup_North_Upstream_LeavingTLs_West_Actuator := Green;
    edge North_Upstream_LeavingTLs_West_Actuator_c_r when sup_North_Upstream_LeavingTLs_West_Actuator = Green and sup_North_Commands = UpstreamLeavingTLRed do North_HW_LeavingTL_BVH_West_Q_Red := true, North_HW_LeavingTL_BVH_West_Q_Green := false, sup_North_Upstream_LeavingTLs_West_Actuator := Red;
    edge North_Upstream_LeavingTLs_West_SensorG_u_off when not North_HW_LeavingTL_BVH_West_Green and (sup_North_Upstream_LeavingTLs_West_Actuator = Red and sup_North_Upstream_LeavingTLs_West_SensorG = On) do sup_North_Upstream_LeavingTLs_West_SensorG := Off;
    edge North_Upstream_LeavingTLs_West_SensorG_u_on when North_HW_LeavingTL_BVH_West_Green and (sup_North_Upstream_LeavingTLs_West_Actuator != Red and sup_North_Upstream_LeavingTLs_West_SensorG = Off) do sup_North_Upstream_LeavingTLs_West_SensorG := On;
    edge North_Upstream_LeavingTLs_West_SensorR_u_off when not North_HW_LeavingTL_BVH_West_Red and (sup_North_Upstream_LeavingTLs_West_Actuator = Green and sup_North_Upstream_LeavingTLs_West_SensorR = On) do sup_North_Upstream_LeavingTLs_West_SensorR := Off;
    edge North_Upstream_LeavingTLs_West_SensorR_u_on when North_HW_LeavingTL_BVH_West_Red and (sup_North_Upstream_LeavingTLs_West_Actuator != Green and sup_North_Upstream_LeavingTLs_West_SensorR = Off) do sup_North_Upstream_LeavingTLs_West_SensorR := On;
    edge North_Upstream_Paddles_East_Actuator_c_close when sup_North_Upstream_Paddles_East_Actuator = Rest and sup_North_Upstream_Paddles_East_Sensor != Closed and (sup_North_EmergencyStop != Active and sup_North_Commands = UpstreamPaddleClose) do North_HW_Paddle_BVH_East_Q_Close := true, sup_North_Upstream_Paddles_East_Actuator := Closing;
    edge North_Upstream_Paddles_East_Actuator_c_emergencyStop when (sup_North_Upstream_Paddles_East_Actuator = Opening or sup_North_Upstream_Paddles_East_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = UpstreamPaddleStop) do North_HW_Paddle_BVH_East_Q_Close := false, North_HW_Paddle_BVH_East_Q_Open := false, if sup_North_Upstream_Paddles_East_Actuator = Opening: sup_North_Upstream_Paddles_East_Actuator := Rest elif sup_North_Upstream_Paddles_East_Actuator = Closing: sup_North_Upstream_Paddles_East_Actuator := Rest end;
    edge North_Upstream_Paddles_East_Actuator_c_endStopClosing when sup_North_Upstream_Paddles_East_Actuator = Closing and sup_North_Upstream_Paddles_East_Sensor = Closed do North_HW_Paddle_BVH_East_Q_Close := false, sup_North_Upstream_Paddles_East_Actuator := Rest;
    edge North_Upstream_Paddles_East_Actuator_c_endStopOpening when sup_North_Upstream_Paddles_East_Actuator = Opening and sup_North_Upstream_Paddles_East_Sensor = Open do North_HW_Paddle_BVH_East_Q_Open := false, sup_North_Upstream_Paddles_East_Actuator := Rest;
    edge North_Upstream_Paddles_East_Actuator_c_open when sup_North_Upstream_Paddles_East_Actuator = Rest and sup_North_Upstream_Paddles_East_Sensor != Open and (sup_North_Downstream_Paddles_East_Actuator = Rest and sup_North_Downstream_Paddles_East_Sensor = Closed and (sup_North_Downstream_Paddles_West_Actuator = Rest and (sup_North_Downstream_Paddles_West_Sensor = Closed and sup_North_Downstream_Gates_East_Actuator = Rest))) and (sup_North_Downstream_Gates_East_Sensor = Closed and sup_North_Downstream_Gates_West_Actuator = Rest and (sup_North_Downstream_Gates_West_Sensor = Closed and (sup_North_Downstream_Gates_East_Actuator = Rest and sup_North_Downstream_Gates_East_Sensor = Closed)) and (sup_North_Downstream_Gates_West_Actuator = Rest and (sup_North_Downstream_Gates_West_Sensor = Closed and sup_North_EmergencyStop != Active) and sup_North_Commands = UpstreamPaddleOpen)) do North_HW_Paddle_BVH_East_Q_Open := true, sup_North_Upstream_Paddles_East_Actuator := Opening;
    edge North_Upstream_Paddles_East_Sensor_u_closed_off when not North_HW_Paddle_BVH_East_Closed and (sup_North_Upstream_Paddles_East_Actuator = Opening and sup_North_Upstream_Paddles_East_Sensor = Closed) do sup_North_Upstream_Paddles_East_Sensor := Intermediate;
    edge North_Upstream_Paddles_East_Sensor_u_closed_on when North_HW_Paddle_BVH_East_Closed and (sup_North_Upstream_Paddles_East_Actuator = Closing and sup_North_Upstream_Paddles_East_Sensor = Intermediate) do sup_North_Upstream_Paddles_East_Sensor := Closed;
    edge North_Upstream_Paddles_East_Sensor_u_open_off when not North_HW_Paddle_BVH_East_Open and (sup_North_Upstream_Paddles_East_Actuator = Closing and sup_North_Upstream_Paddles_East_Sensor = Open) do sup_North_Upstream_Paddles_East_Sensor := Intermediate;
    edge North_Upstream_Paddles_East_Sensor_u_open_on when North_HW_Paddle_BVH_East_Open and (sup_North_Upstream_Paddles_East_Actuator = Opening and sup_North_Upstream_Paddles_East_Sensor = Intermediate) do sup_North_Upstream_Paddles_East_Sensor := Open;
    edge North_Upstream_Paddles_West_Actuator_c_close when sup_North_Upstream_Paddles_West_Actuator = Rest and sup_North_Upstream_Paddles_West_Sensor != Closed and (sup_North_EmergencyStop != Active and sup_North_Commands = UpstreamPaddleClose) do North_HW_Paddle_BVH_West_Q_Close := true, sup_North_Upstream_Paddles_West_Actuator := Closing;
    edge North_Upstream_Paddles_West_Actuator_c_emergencyStop when (sup_North_Upstream_Paddles_West_Actuator = Opening or sup_North_Upstream_Paddles_West_Actuator = Closing) and (sup_North_EmergencyStop = Active or sup_North_Commands = UpstreamPaddleStop) do North_HW_Paddle_BVH_West_Q_Close := false, North_HW_Paddle_BVH_West_Q_Open := false, if sup_North_Upstream_Paddles_West_Actuator = Opening: sup_North_Upstream_Paddles_West_Actuator := Rest elif sup_North_Upstream_Paddles_West_Actuator = Closing: sup_North_Upstream_Paddles_West_Actuator := Rest end;
    edge North_Upstream_Paddles_West_Actuator_c_endStopClosing when sup_North_Upstream_Paddles_West_Actuator = Closing and sup_North_Upstream_Paddles_West_Sensor = Closed do North_HW_Paddle_BVH_West_Q_Close := false, sup_North_Upstream_Paddles_West_Actuator := Rest;
    edge North_Upstream_Paddles_West_Actuator_c_endStopOpening when sup_North_Upstream_Paddles_West_Actuator = Opening and sup_North_Upstream_Paddles_West_Sensor = Open do North_HW_Paddle_BVH_West_Q_Open := false, sup_North_Upstream_Paddles_West_Actuator := Rest;
    edge North_Upstream_Paddles_West_Actuator_c_open when sup_North_Upstream_Paddles_West_Actuator = Rest and sup_North_Upstream_Paddles_West_Sensor != Open and (sup_North_Downstream_Paddles_East_Actuator = Rest and sup_North_Downstream_Paddles_East_Sensor = Closed and (sup_North_Downstream_Paddles_West_Actuator = Rest and (sup_North_Downstream_Paddles_West_Sensor = Closed and sup_North_Downstream_Gates_East_Actuator = Rest))) and (sup_North_Downstream_Gates_East_Sensor = Closed and sup_North_Downstream_Gates_West_Actuator = Rest and (sup_North_Downstream_Gates_West_Sensor = Closed and (sup_North_Downstream_Gates_East_Actuator = Rest and sup_North_Downstream_Gates_East_Sensor = Closed)) and (sup_North_Downstream_Gates_West_Actuator = Rest and (sup_North_Downstream_Gates_West_Sensor = Closed and sup_North_EmergencyStop != Active) and sup_North_Commands = UpstreamPaddleOpen)) do North_HW_Paddle_BVH_West_Q_Open := true, sup_North_Upstream_Paddles_West_Actuator := Opening;
    edge North_Upstream_Paddles_West_Sensor_u_closed_off when not North_HW_Paddle_BVH_West_Closed and (sup_North_Upstream_Paddles_West_Actuator = Opening and sup_North_Upstream_Paddles_West_Sensor = Closed) do sup_North_Upstream_Paddles_West_Sensor := Intermediate;
    edge North_Upstream_Paddles_West_Sensor_u_closed_on when North_HW_Paddle_BVH_West_Closed and (sup_North_Upstream_Paddles_West_Actuator = Closing and sup_North_Upstream_Paddles_West_Sensor = Intermediate) do sup_North_Upstream_Paddles_West_Sensor := Closed;
    edge North_Upstream_Paddles_West_Sensor_u_open_off when not North_HW_Paddle_BVH_West_Open and (sup_North_Upstream_Paddles_West_Actuator = Closing and sup_North_Upstream_Paddles_West_Sensor = Open) do sup_North_Upstream_Paddles_West_Sensor := Intermediate;
    edge North_Upstream_Paddles_West_Sensor_u_open_on when North_HW_Paddle_BVH_West_Open and (sup_North_Upstream_Paddles_West_Actuator = Opening and sup_North_Upstream_Paddles_West_Sensor = Intermediate) do sup_North_Upstream_Paddles_West_Sensor := Open;
    edge South_Commands_Deactivate when South_SCADA = Active and (not South_SCADA_DownstreamGateOpen and not South_SCADA_DownstreamGateClose) and (not South_SCADA_DownstreamGateStop and (not South_SCADA_DownstreamPaddleOpen and not South_SCADA_DownstreamPaddleClose)) and (not South_SCADA_DownstreamPaddleStop and (not South_SCADA_DownstreamEnteringTLRedRed and not South_SCADA_DownstreamEnteringTLRed) and (not South_SCADA_DownstreamEnteringTLRedGreen and (not South_SCADA_DownstreamEnteringTLGreen and not South_SCADA_DownstreamLeavingTLRed))) and (not South_SCADA_DownstreamLeavingTLGreen and (not South_SCADA_UpstreamGateOpen and not South_SCADA_UpstreamGateClose) and (not South_SCADA_UpstreamGateStop and (not South_SCADA_UpstreamPaddleOpen and not South_SCADA_UpstreamPaddleClose)) and (not South_SCADA_UpstreamPaddleStop and (not South_SCADA_UpstreamEnteringTLRedRed and not South_SCADA_UpstreamEnteringTLRed) and (not South_SCADA_UpstreamEnteringTLRedGreen and not South_SCADA_UpstreamEnteringTLGreen and (not South_SCADA_UpstreamLeavingTLRed and not South_SCADA_UpstreamLeavingTLGreen)))) do South_SCADA := Inactive, if sup_South_Commands = NoCommand: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := NoCommand elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := NoCommand elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := NoCommand end;
    edge South_Commands_DownstreamEnteringTLGreen_act when South_SCADA = Inactive and South_SCADA_DownstreamEnteringTLGreen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamEnteringTLRed_act when South_SCADA = Inactive and South_SCADA_DownstreamEnteringTLRed do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamEnteringTLRedGreen_act when South_SCADA = Inactive and South_SCADA_DownstreamEnteringTLRedGreen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamEnteringTLRedRed_act when South_SCADA = Inactive and South_SCADA_DownstreamEnteringTLRedRed do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamGateClose_act when South_SCADA = Inactive and South_SCADA_DownstreamGateClose do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamGateOpen_act when South_SCADA = Inactive and South_SCADA_DownstreamGateOpen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamGateStop_act when South_SCADA = Inactive and South_SCADA_DownstreamGateStop do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamLeavingTLGreen_act when South_SCADA = Inactive and South_SCADA_DownstreamLeavingTLGreen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamLeavingTLRed_act when South_SCADA = Inactive and South_SCADA_DownstreamLeavingTLRed do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamPaddleClose_act when South_SCADA = Inactive and South_SCADA_DownstreamPaddleClose do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamPaddleOpen_act when South_SCADA = Inactive and South_SCADA_DownstreamPaddleOpen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_DownstreamPaddleStop_act when South_SCADA = Inactive and South_SCADA_DownstreamPaddleStop do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamEnteringTLGreen_act when South_SCADA = Inactive and South_SCADA_UpstreamEnteringTLGreen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamEnteringTLRed_act when South_SCADA = Inactive and South_SCADA_UpstreamEnteringTLRed do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamEnteringTLRedGreen_act when South_SCADA = Inactive and South_SCADA_UpstreamEnteringTLRedGreen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamEnteringTLRedRed_act when South_SCADA = Inactive and South_SCADA_UpstreamEnteringTLRedRed do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamGateClose_act when South_SCADA = Inactive and South_SCADA_UpstreamGateClose do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamGateOpen_act when South_SCADA = Inactive and South_SCADA_UpstreamGateOpen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamGateStop_act when South_SCADA = Inactive and South_SCADA_UpstreamGateStop do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamLeavingTLGreen_act when South_SCADA = Inactive and South_SCADA_UpstreamLeavingTLGreen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamLeavingTLGreen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamLeavingTLRed_act when South_SCADA = Inactive and South_SCADA_UpstreamLeavingTLRed do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamPaddleClose_act when South_SCADA = Inactive and South_SCADA_UpstreamPaddleClose do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamPaddleOpen_act when South_SCADA = Inactive and South_SCADA_UpstreamPaddleOpen do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Commands_UpstreamPaddleStop_act when South_SCADA = Inactive and South_SCADA_UpstreamPaddleStop do South_SCADA := Active, if sup_South_Commands = NoCommand: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = DownstreamGateOpen: sup_South_Commands := DownstreamGateOpen elif sup_South_Commands = DownstreamGateClose: sup_South_Commands := DownstreamGateClose elif sup_South_Commands = DownstreamGateStop: sup_South_Commands := DownstreamGateStop elif sup_South_Commands = DownstreamPaddleOpen: sup_South_Commands := DownstreamPaddleOpen elif sup_South_Commands = DownstreamPaddleClose: sup_South_Commands := DownstreamPaddleClose elif sup_South_Commands = DownstreamPaddleStop: sup_South_Commands := DownstreamPaddleStop elif sup_South_Commands = DownstreamEnteringTLRedRed: sup_South_Commands := DownstreamEnteringTLRedRed elif sup_South_Commands = DownstreamEnteringTLRed: sup_South_Commands := DownstreamEnteringTLRed elif sup_South_Commands = DownstreamEnteringTLRedGreen: sup_South_Commands := DownstreamEnteringTLRedGreen elif sup_South_Commands = DownstreamEnteringTLGreen: sup_South_Commands := DownstreamEnteringTLGreen elif sup_South_Commands = DownstreamLeavingTLRed: sup_South_Commands := DownstreamLeavingTLRed elif sup_South_Commands = DownstreamLeavingTLGreen: sup_South_Commands := DownstreamLeavingTLGreen elif sup_South_Commands = UpstreamGateOpen: sup_South_Commands := UpstreamGateOpen elif sup_South_Commands = UpstreamGateClose: sup_South_Commands := UpstreamGateClose elif sup_South_Commands = UpstreamGateStop: sup_South_Commands := UpstreamGateStop elif sup_South_Commands = UpstreamPaddleOpen: sup_South_Commands := UpstreamPaddleOpen elif sup_South_Commands = UpstreamPaddleClose: sup_South_Commands := UpstreamPaddleClose elif sup_South_Commands = UpstreamPaddleStop: sup_South_Commands := UpstreamPaddleStop elif sup_South_Commands = UpstreamEnteringTLRedRed: sup_South_Commands := UpstreamEnteringTLRedRed elif sup_South_Commands = UpstreamEnteringTLRed: sup_South_Commands := UpstreamEnteringTLRed elif sup_South_Commands = UpstreamEnteringTLRedGreen: sup_South_Commands := UpstreamEnteringTLRedGreen elif sup_South_Commands = UpstreamEnteringTLGreen: sup_South_Commands := UpstreamEnteringTLGreen elif sup_South_Commands = UpstreamLeavingTLRed: sup_South_Commands := UpstreamLeavingTLRed elif sup_South_Commands = UpstreamLeavingTLGreen: sup_South_Commands := UpstreamLeavingTLGreen end;
    edge South_Downstream_EnteringTLs_East_Actuator_c_g when sup_South_Downstream_EnteringTLs_East_Actuator = RedGreen and (sup_South_Downstream_LeavingTLs_East_Actuator = Red and sup_South_Downstream_LeavingTLs_East_SensorR = On and (sup_South_Downstream_LeavingTLs_East_SensorG = Off and sup_South_Downstream_LeavingTLs_West_Actuator = Red)) and (sup_South_Downstream_LeavingTLs_West_SensorR = On and sup_South_Downstream_LeavingTLs_West_SensorG = Off and (sup_South_Downstream_Gates_East_Actuator = Rest and sup_South_Downstream_Gates_East_Sensor = Open) and (sup_South_Downstream_Gates_West_Actuator = Rest and sup_South_Downstream_Gates_West_Sensor = Open and sup_South_Commands = DownstreamEnteringTLGreen)) do South_HW_EnteringTL_BNH_East_Q_Green := true, sup_South_Downstream_EnteringTLs_East_Actuator := Green;
    edge South_Downstream_EnteringTLs_East_Actuator_c_r when (sup_South_Downstream_EnteringTLs_East_Actuator = RedRed or (sup_South_Downstream_EnteringTLs_East_Actuator = RedGreen or sup_South_Downstream_EnteringTLs_East_Actuator = Green)) and sup_South_Commands = DownstreamEnteringTLRed do South_HW_EnteringTL_BNH_East_Q_Red := true, South_HW_EnteringTL_BNH_East_Q_Green := false, South_HW_EnteringTL_BNH_East_Q_RedRed := false, if sup_South_Downstream_EnteringTLs_East_Actuator = RedRed: sup_South_Downstream_EnteringTLs_East_Actuator := Red elif sup_South_Downstream_EnteringTLs_East_Actuator = RedGreen: sup_South_Downstream_EnteringTLs_East_Actuator := Red elif sup_South_Downstream_EnteringTLs_East_Actuator = Green: sup_South_Downstream_EnteringTLs_East_Actuator := Red end;
    edge South_Downstream_EnteringTLs_East_Actuator_c_rg when sup_South_Downstream_EnteringTLs_East_Actuator = Red and sup_South_Commands = DownstreamEnteringTLRedGreen do South_HW_EnteringTL_BNH_East_Q_Red := true, South_HW_EnteringTL_BNH_East_Q_Green := true, sup_South_Downstream_EnteringTLs_East_Actuator := RedGreen;
    edge South_Downstream_EnteringTLs_East_Actuator_c_rr when sup_South_Downstream_EnteringTLs_East_Actuator = Red and sup_South_Commands = DownstreamEnteringTLRedRed do South_HW_EnteringTL_BNH_East_Q_RedRed := true, sup_South_Downstream_EnteringTLs_East_Actuator := RedRed;
    edge South_Downstream_EnteringTLs_East_SensorG_u_off when not South_HW_EnteringTL_BNH_East_Green and ((sup_South_Downstream_EnteringTLs_East_Actuator = Red or sup_South_Downstream_EnteringTLs_East_Actuator = RedRed) and sup_South_Downstream_EnteringTLs_East_SensorG = On) do sup_South_Downstream_EnteringTLs_East_SensorG := Off;
    edge South_Downstream_EnteringTLs_East_SensorG_u_on when South_HW_EnteringTL_BNH_East_Green and ((sup_South_Downstream_EnteringTLs_East_Actuator = Green or sup_South_Downstream_EnteringTLs_East_Actuator = RedGreen) and sup_South_Downstream_EnteringTLs_East_SensorG = Off) do sup_South_Downstream_EnteringTLs_East_SensorG := On;
    edge South_Downstream_EnteringTLs_East_SensorR1_u_off when not South_HW_EnteringTL_BNH_East_Red and (sup_South_Downstream_EnteringTLs_East_Actuator = Green and sup_South_Downstream_EnteringTLs_East_SensorR1 = On) do sup_South_Downstream_EnteringTLs_East_SensorR1 := Off;
    edge South_Downstream_EnteringTLs_East_SensorR1_u_on when South_HW_EnteringTL_BNH_East_Red and (sup_South_Downstream_EnteringTLs_East_Actuator != Green and sup_South_Downstream_EnteringTLs_East_SensorR1 = Off) do sup_South_Downstream_EnteringTLs_East_SensorR1 := On;
    edge South_Downstream_EnteringTLs_East_SensorR2_u_off when not South_HW_EnteringTL_BNH_East_RedRed and (sup_South_Downstream_EnteringTLs_East_Actuator != RedRed and sup_South_Downstream_EnteringTLs_East_SensorR2 = On) do sup_South_Downstream_EnteringTLs_East_SensorR2 := Off;
    edge South_Downstream_EnteringTLs_East_SensorR2_u_on when South_HW_EnteringTL_BNH_East_RedRed and (sup_South_Downstream_EnteringTLs_East_Actuator = RedRed and sup_South_Downstream_EnteringTLs_East_SensorR2 = Off) do sup_South_Downstream_EnteringTLs_East_SensorR2 := On;
    edge South_Downstream_EnteringTLs_West_Actuator_c_g when sup_South_Downstream_EnteringTLs_West_Actuator = RedGreen and (sup_South_Downstream_LeavingTLs_East_Actuator = Red and sup_South_Downstream_LeavingTLs_East_SensorR = On and (sup_South_Downstream_LeavingTLs_East_SensorG = Off and sup_South_Downstream_LeavingTLs_West_Actuator = Red)) and (sup_South_Downstream_LeavingTLs_West_SensorR = On and sup_South_Downstream_LeavingTLs_West_SensorG = Off and (sup_South_Downstream_Gates_East_Actuator = Rest and sup_South_Downstream_Gates_East_Sensor = Open) and (sup_South_Downstream_Gates_West_Actuator = Rest and sup_South_Downstream_Gates_West_Sensor = Open and sup_South_Commands = DownstreamEnteringTLGreen)) do South_HW_EnteringTL_BNH_West_Q_Green := true, sup_South_Downstream_EnteringTLs_West_Actuator := Green;
    edge South_Downstream_EnteringTLs_West_Actuator_c_r when (sup_South_Downstream_EnteringTLs_West_Actuator = RedRed or (sup_South_Downstream_EnteringTLs_West_Actuator = RedGreen or sup_South_Downstream_EnteringTLs_West_Actuator = Green)) and sup_South_Commands = DownstreamEnteringTLRed do South_HW_EnteringTL_BNH_West_Q_Red := true, South_HW_EnteringTL_BNH_West_Q_Green := false, South_HW_EnteringTL_BNH_West_Q_RedRed := false, if sup_South_Downstream_EnteringTLs_West_Actuator = RedRed: sup_South_Downstream_EnteringTLs_West_Actuator := Red elif sup_South_Downstream_EnteringTLs_West_Actuator = RedGreen: sup_South_Downstream_EnteringTLs_West_Actuator := Red elif sup_South_Downstream_EnteringTLs_West_Actuator = Green: sup_South_Downstream_EnteringTLs_West_Actuator := Red end;
    edge South_Downstream_EnteringTLs_West_Actuator_c_rg when sup_South_Downstream_EnteringTLs_West_Actuator = Red and sup_South_Commands = DownstreamEnteringTLRedGreen do South_HW_EnteringTL_BNH_West_Q_Red := true, South_HW_EnteringTL_BNH_West_Q_Green := true, sup_South_Downstream_EnteringTLs_West_Actuator := RedGreen;
    edge South_Downstream_EnteringTLs_West_Actuator_c_rr when sup_South_Downstream_EnteringTLs_West_Actuator = Red and sup_South_Commands = DownstreamEnteringTLRedRed do South_HW_EnteringTL_BNH_West_Q_RedRed := true, sup_South_Downstream_EnteringTLs_West_Actuator := RedRed;
    edge South_Downstream_EnteringTLs_West_SensorG_u_off when not South_HW_EnteringTL_BNH_West_Green and ((sup_South_Downstream_EnteringTLs_West_Actuator = Red or sup_South_Downstream_EnteringTLs_West_Actuator = RedRed) and sup_South_Downstream_EnteringTLs_West_SensorG = On) do sup_South_Downstream_EnteringTLs_West_SensorG := Off;
    edge South_Downstream_EnteringTLs_West_SensorG_u_on when South_HW_EnteringTL_BNH_West_Green and ((sup_South_Downstream_EnteringTLs_West_Actuator = Green or sup_South_Downstream_EnteringTLs_West_Actuator = RedGreen) and sup_South_Downstream_EnteringTLs_West_SensorG = Off) do sup_South_Downstream_EnteringTLs_West_SensorG := On;
    edge South_Downstream_EnteringTLs_West_SensorR1_u_off when not South_HW_EnteringTL_BNH_West_Red and (sup_South_Downstream_EnteringTLs_West_Actuator = Green and sup_South_Downstream_EnteringTLs_West_SensorR1 = On) do sup_South_Downstream_EnteringTLs_West_SensorR1 := Off;
    edge South_Downstream_EnteringTLs_West_SensorR1_u_on when South_HW_EnteringTL_BNH_West_Red and (sup_South_Downstream_EnteringTLs_West_Actuator != Green and sup_South_Downstream_EnteringTLs_West_SensorR1 = Off) do sup_South_Downstream_EnteringTLs_West_SensorR1 := On;
    edge South_Downstream_EnteringTLs_West_SensorR2_u_off when not South_HW_EnteringTL_BNH_West_RedRed and (sup_South_Downstream_EnteringTLs_West_Actuator != RedRed and sup_South_Downstream_EnteringTLs_West_SensorR2 = On) do sup_South_Downstream_EnteringTLs_West_SensorR2 := Off;
    edge South_Downstream_EnteringTLs_West_SensorR2_u_on when South_HW_EnteringTL_BNH_West_RedRed and (sup_South_Downstream_EnteringTLs_West_Actuator = RedRed and sup_South_Downstream_EnteringTLs_West_SensorR2 = Off) do sup_South_Downstream_EnteringTLs_West_SensorR2 := On;
    edge South_Downstream_EqualWaterSensor_u_off when not South_HW_EqualWaterSensor_BNH_Equal and sup_South_Downstream_EqualWaterSensor = Equal do sup_South_Downstream_EqualWaterSensor := Unequal;
    edge South_Downstream_EqualWaterSensor_u_on when South_HW_EqualWaterSensor_BNH_Equal and sup_South_Downstream_EqualWaterSensor = Unequal do sup_South_Downstream_EqualWaterSensor := Equal;
    edge South_Downstream_Gates_East_Actuator_c_close when sup_South_Downstream_Gates_East_Actuator = Rest and (sup_South_Downstream_Gates_East_Sensor != Closed and ((sup_South_Downstream_EnteringTLs_East_Actuator = Red and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Downstream_EnteringTLs_West_Actuator = Red and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Downstream_EnteringTLs_East_Actuator = RedRed and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = On and (sup_South_Downstream_EnteringTLs_West_Actuator = RedRed and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Downstream_LeavingTLs_East_Actuator = Red)) and (sup_South_Downstream_LeavingTLs_East_SensorR = On and sup_South_Downstream_LeavingTLs_East_SensorG = Off and (sup_South_Downstream_LeavingTLs_West_Actuator = Red and sup_South_Downstream_LeavingTLs_West_SensorR = On) and (sup_South_Downstream_LeavingTLs_West_SensorG = Off and sup_South_EmergencyStop != Active and sup_South_Commands = DownstreamGateClose)) do South_HW_Gate_BNH_East_Q_Close := true, sup_South_Downstream_Gates_East_Actuator := Closing;
    edge South_Downstream_Gates_East_Actuator_c_emergencyStop when (sup_South_Downstream_Gates_East_Actuator = Opening or sup_South_Downstream_Gates_East_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = DownstreamGateStop) do South_HW_Gate_BNH_East_Q_Close := false, South_HW_Gate_BNH_East_Q_Open := false, if sup_South_Downstream_Gates_East_Actuator = Opening: sup_South_Downstream_Gates_East_Actuator := Rest elif sup_South_Downstream_Gates_East_Actuator = Closing: sup_South_Downstream_Gates_East_Actuator := Rest end;
    edge South_Downstream_Gates_East_Actuator_c_endStopClosing when sup_South_Downstream_Gates_East_Actuator = Closing and sup_South_Downstream_Gates_East_Sensor = Closed do South_HW_Gate_BNH_East_Q_Close := false, sup_South_Downstream_Gates_East_Actuator := Rest;
    edge South_Downstream_Gates_East_Actuator_c_endStopOpening when sup_South_Downstream_Gates_East_Actuator = Opening and sup_South_Downstream_Gates_East_Sensor = Open do South_HW_Gate_BNH_East_Q_Open := false, sup_South_Downstream_Gates_East_Actuator := Rest;
    edge South_Downstream_Gates_East_Actuator_c_open when sup_South_Downstream_Gates_East_Actuator = Rest and (sup_South_Downstream_Gates_East_Sensor != Open and sup_South_Downstream_EqualWaterSensor != Unequal) and (sup_South_Upstream_Paddles_East_Actuator = Rest and sup_South_Upstream_Paddles_East_Sensor = Closed and (sup_South_Upstream_Paddles_West_Actuator = Rest and sup_South_Upstream_Paddles_West_Sensor = Closed) and (sup_South_EmergencyStop != Active and sup_South_Commands = DownstreamGateOpen)) do South_HW_Gate_BNH_East_Q_Open := true, sup_South_Downstream_Gates_East_Actuator := Opening;
    edge South_Downstream_Gates_East_Sensor_u_closed_off when not South_HW_Gate_BNH_East_Closed and (sup_South_Downstream_Gates_East_Actuator = Opening and sup_South_Downstream_Gates_East_Sensor = Closed) do sup_South_Downstream_Gates_East_Sensor := Intermediate;
    edge South_Downstream_Gates_East_Sensor_u_closed_on when South_HW_Gate_BNH_East_Closed and (sup_South_Downstream_Gates_East_Actuator = Closing and sup_South_Downstream_Gates_East_Sensor = Intermediate) do sup_South_Downstream_Gates_East_Sensor := Closed;
    edge South_Downstream_Gates_East_Sensor_u_open_off when not South_HW_Gate_BNH_East_Open and (sup_South_Downstream_Gates_East_Actuator = Closing and sup_South_Downstream_Gates_East_Sensor = Open) do sup_South_Downstream_Gates_East_Sensor := Intermediate;
    edge South_Downstream_Gates_East_Sensor_u_open_on when South_HW_Gate_BNH_East_Open and (sup_South_Downstream_Gates_East_Actuator = Opening and sup_South_Downstream_Gates_East_Sensor = Intermediate) do sup_South_Downstream_Gates_East_Sensor := Open;
    edge South_Downstream_Gates_West_Actuator_c_close when sup_South_Downstream_Gates_West_Actuator = Rest and (sup_South_Downstream_Gates_West_Sensor != Closed and ((sup_South_Downstream_EnteringTLs_East_Actuator = Red and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Downstream_EnteringTLs_West_Actuator = Red and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Downstream_EnteringTLs_East_Actuator = RedRed and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = On and (sup_South_Downstream_EnteringTLs_West_Actuator = RedRed and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Downstream_LeavingTLs_East_Actuator = Red)) and (sup_South_Downstream_LeavingTLs_East_SensorR = On and sup_South_Downstream_LeavingTLs_East_SensorG = Off and (sup_South_Downstream_LeavingTLs_West_Actuator = Red and sup_South_Downstream_LeavingTLs_West_SensorR = On) and (sup_South_Downstream_LeavingTLs_West_SensorG = Off and sup_South_EmergencyStop != Active and sup_South_Commands = DownstreamGateClose)) do South_HW_Gate_BNH_West_Q_Close := true, sup_South_Downstream_Gates_West_Actuator := Closing;
    edge South_Downstream_Gates_West_Actuator_c_emergencyStop when (sup_South_Downstream_Gates_West_Actuator = Opening or sup_South_Downstream_Gates_West_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = DownstreamGateStop) do South_HW_Gate_BNH_West_Q_Close := false, South_HW_Gate_BNH_West_Q_Open := false, if sup_South_Downstream_Gates_West_Actuator = Opening: sup_South_Downstream_Gates_West_Actuator := Rest elif sup_South_Downstream_Gates_West_Actuator = Closing: sup_South_Downstream_Gates_West_Actuator := Rest end;
    edge South_Downstream_Gates_West_Actuator_c_endStopClosing when sup_South_Downstream_Gates_West_Actuator = Closing and sup_South_Downstream_Gates_West_Sensor = Closed do South_HW_Gate_BNH_West_Q_Close := false, sup_South_Downstream_Gates_West_Actuator := Rest;
    edge South_Downstream_Gates_West_Actuator_c_endStopOpening when sup_South_Downstream_Gates_West_Actuator = Opening and sup_South_Downstream_Gates_West_Sensor = Open do South_HW_Gate_BNH_West_Q_Open := false, sup_South_Downstream_Gates_West_Actuator := Rest;
    edge South_Downstream_Gates_West_Actuator_c_open when sup_South_Downstream_Gates_West_Actuator = Rest and (sup_South_Downstream_Gates_West_Sensor != Open and sup_South_Downstream_EqualWaterSensor != Unequal) and (sup_South_Upstream_Paddles_East_Actuator = Rest and sup_South_Upstream_Paddles_East_Sensor = Closed and (sup_South_Upstream_Paddles_West_Actuator = Rest and sup_South_Upstream_Paddles_West_Sensor = Closed) and (sup_South_EmergencyStop != Active and sup_South_Commands = DownstreamGateOpen)) do South_HW_Gate_BNH_West_Q_Open := true, sup_South_Downstream_Gates_West_Actuator := Opening;
    edge South_Downstream_Gates_West_Sensor_u_closed_off when not South_HW_Gate_BNH_West_Closed and (sup_South_Downstream_Gates_West_Actuator = Opening and sup_South_Downstream_Gates_West_Sensor = Closed) do sup_South_Downstream_Gates_West_Sensor := Intermediate;
    edge South_Downstream_Gates_West_Sensor_u_closed_on when South_HW_Gate_BNH_West_Closed and (sup_South_Downstream_Gates_West_Actuator = Closing and sup_South_Downstream_Gates_West_Sensor = Intermediate) do sup_South_Downstream_Gates_West_Sensor := Closed;
    edge South_Downstream_Gates_West_Sensor_u_open_off when not South_HW_Gate_BNH_West_Open and (sup_South_Downstream_Gates_West_Actuator = Closing and sup_South_Downstream_Gates_West_Sensor = Open) do sup_South_Downstream_Gates_West_Sensor := Intermediate;
    edge South_Downstream_Gates_West_Sensor_u_open_on when South_HW_Gate_BNH_West_Open and (sup_South_Downstream_Gates_West_Actuator = Opening and sup_South_Downstream_Gates_West_Sensor = Intermediate) do sup_South_Downstream_Gates_West_Sensor := Open;
    edge South_Downstream_LeavingTLs_East_Actuator_c_g when sup_South_Downstream_LeavingTLs_East_Actuator = Red and ((sup_South_Downstream_EnteringTLs_East_Actuator = Red and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Downstream_EnteringTLs_West_Actuator = Red and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Downstream_EnteringTLs_East_Actuator = RedRed and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = On and (sup_South_Downstream_EnteringTLs_West_Actuator = RedRed and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Downstream_Gates_East_Actuator = Rest) and (sup_South_Downstream_Gates_East_Sensor = Open and (sup_South_Downstream_Gates_West_Actuator = Rest and sup_South_Downstream_Gates_West_Sensor = Open) and sup_South_Commands = DownstreamLeavingTLGreen) do South_HW_LeavingTL_BNH_East_Q_Red := false, South_HW_LeavingTL_BNH_East_Q_Green := true, sup_South_Downstream_LeavingTLs_East_Actuator := Green;
    edge South_Downstream_LeavingTLs_East_Actuator_c_r when sup_South_Downstream_LeavingTLs_East_Actuator = Green and sup_South_Commands = DownstreamLeavingTLRed do South_HW_LeavingTL_BNH_East_Q_Red := true, South_HW_LeavingTL_BNH_East_Q_Green := false, sup_South_Downstream_LeavingTLs_East_Actuator := Red;
    edge South_Downstream_LeavingTLs_East_SensorG_u_off when not South_HW_LeavingTL_BNH_East_Green and (sup_South_Downstream_LeavingTLs_East_Actuator = Red and sup_South_Downstream_LeavingTLs_East_SensorG = On) do sup_South_Downstream_LeavingTLs_East_SensorG := Off;
    edge South_Downstream_LeavingTLs_East_SensorG_u_on when South_HW_LeavingTL_BNH_East_Green and (sup_South_Downstream_LeavingTLs_East_Actuator != Red and sup_South_Downstream_LeavingTLs_East_SensorG = Off) do sup_South_Downstream_LeavingTLs_East_SensorG := On;
    edge South_Downstream_LeavingTLs_East_SensorR_u_off when not South_HW_LeavingTL_BNH_East_Red and (sup_South_Downstream_LeavingTLs_East_Actuator = Green and sup_South_Downstream_LeavingTLs_East_SensorR = On) do sup_South_Downstream_LeavingTLs_East_SensorR := Off;
    edge South_Downstream_LeavingTLs_East_SensorR_u_on when South_HW_LeavingTL_BNH_East_Red and (sup_South_Downstream_LeavingTLs_East_Actuator != Green and sup_South_Downstream_LeavingTLs_East_SensorR = Off) do sup_South_Downstream_LeavingTLs_East_SensorR := On;
    edge South_Downstream_LeavingTLs_West_Actuator_c_g when sup_South_Downstream_LeavingTLs_West_Actuator = Red and ((sup_South_Downstream_EnteringTLs_East_Actuator = Red and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Downstream_EnteringTLs_West_Actuator = Red and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Downstream_EnteringTLs_East_Actuator = RedRed and sup_South_Downstream_EnteringTLs_East_SensorR1 = On and sup_South_Downstream_EnteringTLs_East_SensorG = Off and sup_South_Downstream_EnteringTLs_East_SensorR2 = On and (sup_South_Downstream_EnteringTLs_West_Actuator = RedRed and sup_South_Downstream_EnteringTLs_West_SensorR1 = On and sup_South_Downstream_EnteringTLs_West_SensorG = Off and sup_South_Downstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Downstream_Gates_East_Actuator = Rest) and (sup_South_Downstream_Gates_East_Sensor = Open and (sup_South_Downstream_Gates_West_Actuator = Rest and sup_South_Downstream_Gates_West_Sensor = Open) and sup_South_Commands = DownstreamLeavingTLGreen) do South_HW_LeavingTL_BNH_West_Q_Red := false, South_HW_LeavingTL_BNH_West_Q_Green := true, sup_South_Downstream_LeavingTLs_West_Actuator := Green;
    edge South_Downstream_LeavingTLs_West_Actuator_c_r when sup_South_Downstream_LeavingTLs_West_Actuator = Green and sup_South_Commands = DownstreamLeavingTLRed do South_HW_LeavingTL_BNH_West_Q_Red := true, South_HW_LeavingTL_BNH_West_Q_Green := false, sup_South_Downstream_LeavingTLs_West_Actuator := Red;
    edge South_Downstream_LeavingTLs_West_SensorG_u_off when not South_HW_LeavingTL_BNH_West_Green and (sup_South_Downstream_LeavingTLs_West_Actuator = Red and sup_South_Downstream_LeavingTLs_West_SensorG = On) do sup_South_Downstream_LeavingTLs_West_SensorG := Off;
    edge South_Downstream_LeavingTLs_West_SensorG_u_on when South_HW_LeavingTL_BNH_West_Green and (sup_South_Downstream_LeavingTLs_West_Actuator != Red and sup_South_Downstream_LeavingTLs_West_SensorG = Off) do sup_South_Downstream_LeavingTLs_West_SensorG := On;
    edge South_Downstream_LeavingTLs_West_SensorR_u_off when not South_HW_LeavingTL_BNH_West_Red and (sup_South_Downstream_LeavingTLs_West_Actuator = Green and sup_South_Downstream_LeavingTLs_West_SensorR = On) do sup_South_Downstream_LeavingTLs_West_SensorR := Off;
    edge South_Downstream_LeavingTLs_West_SensorR_u_on when South_HW_LeavingTL_BNH_West_Red and (sup_South_Downstream_LeavingTLs_West_Actuator != Green and sup_South_Downstream_LeavingTLs_West_SensorR = Off) do sup_South_Downstream_LeavingTLs_West_SensorR := On;
    edge South_Downstream_Paddles_East_Actuator_c_close when sup_South_Downstream_Paddles_East_Actuator = Rest and sup_South_Downstream_Paddles_East_Sensor != Closed and (sup_South_EmergencyStop != Active and sup_South_Commands = DownstreamPaddleClose) do South_HW_Paddle_BNH_East_Q_Close := true, sup_South_Downstream_Paddles_East_Actuator := Closing;
    edge South_Downstream_Paddles_East_Actuator_c_emergencyStop when (sup_South_Downstream_Paddles_East_Actuator = Opening or sup_South_Downstream_Paddles_East_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = DownstreamPaddleStop) do South_HW_Paddle_BNH_East_Q_Close := false, South_HW_Paddle_BNH_East_Q_Open := false, if sup_South_Downstream_Paddles_East_Actuator = Opening: sup_South_Downstream_Paddles_East_Actuator := Rest elif sup_South_Downstream_Paddles_East_Actuator = Closing: sup_South_Downstream_Paddles_East_Actuator := Rest end;
    edge South_Downstream_Paddles_East_Actuator_c_endStopClosing when sup_South_Downstream_Paddles_East_Actuator = Closing and sup_South_Downstream_Paddles_East_Sensor = Closed do South_HW_Paddle_BNH_East_Q_Close := false, sup_South_Downstream_Paddles_East_Actuator := Rest;
    edge South_Downstream_Paddles_East_Actuator_c_endStopOpening when sup_South_Downstream_Paddles_East_Actuator = Opening and sup_South_Downstream_Paddles_East_Sensor = Open do South_HW_Paddle_BNH_East_Q_Open := false, sup_South_Downstream_Paddles_East_Actuator := Rest;
    edge South_Downstream_Paddles_East_Actuator_c_open when sup_South_Downstream_Paddles_East_Actuator = Rest and sup_South_Downstream_Paddles_East_Sensor != Open and (sup_South_Upstream_Paddles_East_Actuator = Rest and sup_South_Upstream_Paddles_East_Sensor = Closed and (sup_South_Upstream_Paddles_West_Actuator = Rest and (sup_South_Upstream_Paddles_West_Sensor = Closed and sup_South_Upstream_Gates_East_Actuator = Rest))) and (sup_South_Upstream_Gates_East_Sensor = Closed and sup_South_Upstream_Gates_West_Actuator = Rest and (sup_South_Upstream_Gates_West_Sensor = Closed and (sup_South_Upstream_Gates_East_Actuator = Rest and sup_South_Upstream_Gates_East_Sensor = Closed)) and (sup_South_Upstream_Gates_West_Actuator = Rest and (sup_South_Upstream_Gates_West_Sensor = Closed and sup_South_EmergencyStop != Active) and sup_South_Commands = DownstreamPaddleOpen)) do South_HW_Paddle_BNH_East_Q_Open := true, sup_South_Downstream_Paddles_East_Actuator := Opening;
    edge South_Downstream_Paddles_East_Sensor_u_closed_off when not South_HW_Paddle_BNH_East_Closed and (sup_South_Downstream_Paddles_East_Actuator = Opening and sup_South_Downstream_Paddles_East_Sensor = Closed) do sup_South_Downstream_Paddles_East_Sensor := Intermediate;
    edge South_Downstream_Paddles_East_Sensor_u_closed_on when South_HW_Paddle_BNH_East_Closed and (sup_South_Downstream_Paddles_East_Actuator = Closing and sup_South_Downstream_Paddles_East_Sensor = Intermediate) do sup_South_Downstream_Paddles_East_Sensor := Closed;
    edge South_Downstream_Paddles_East_Sensor_u_open_off when not South_HW_Paddle_BNH_East_Open and (sup_South_Downstream_Paddles_East_Actuator = Closing and sup_South_Downstream_Paddles_East_Sensor = Open) do sup_South_Downstream_Paddles_East_Sensor := Intermediate;
    edge South_Downstream_Paddles_East_Sensor_u_open_on when South_HW_Paddle_BNH_East_Open and (sup_South_Downstream_Paddles_East_Actuator = Opening and sup_South_Downstream_Paddles_East_Sensor = Intermediate) do sup_South_Downstream_Paddles_East_Sensor := Open;
    edge South_Downstream_Paddles_West_Actuator_c_close when sup_South_Downstream_Paddles_West_Actuator = Rest and sup_South_Downstream_Paddles_West_Sensor != Closed and (sup_South_EmergencyStop != Active and sup_South_Commands = DownstreamPaddleClose) do South_HW_Paddle_BNH_West_Q_Close := true, sup_South_Downstream_Paddles_West_Actuator := Closing;
    edge South_Downstream_Paddles_West_Actuator_c_emergencyStop when (sup_South_Downstream_Paddles_West_Actuator = Opening or sup_South_Downstream_Paddles_West_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = DownstreamPaddleStop) do South_HW_Paddle_BNH_West_Q_Close := false, South_HW_Paddle_BNH_West_Q_Open := false, if sup_South_Downstream_Paddles_West_Actuator = Opening: sup_South_Downstream_Paddles_West_Actuator := Rest elif sup_South_Downstream_Paddles_West_Actuator = Closing: sup_South_Downstream_Paddles_West_Actuator := Rest end;
    edge South_Downstream_Paddles_West_Actuator_c_endStopClosing when sup_South_Downstream_Paddles_West_Actuator = Closing and sup_South_Downstream_Paddles_West_Sensor = Closed do South_HW_Paddle_BNH_West_Q_Close := false, sup_South_Downstream_Paddles_West_Actuator := Rest;
    edge South_Downstream_Paddles_West_Actuator_c_endStopOpening when sup_South_Downstream_Paddles_West_Actuator = Opening and sup_South_Downstream_Paddles_West_Sensor = Open do South_HW_Paddle_BNH_West_Q_Open := false, sup_South_Downstream_Paddles_West_Actuator := Rest;
    edge South_Downstream_Paddles_West_Actuator_c_open when sup_South_Downstream_Paddles_West_Actuator = Rest and sup_South_Downstream_Paddles_West_Sensor != Open and (sup_South_Upstream_Paddles_East_Actuator = Rest and sup_South_Upstream_Paddles_East_Sensor = Closed and (sup_South_Upstream_Paddles_West_Actuator = Rest and (sup_South_Upstream_Paddles_West_Sensor = Closed and sup_South_Upstream_Gates_East_Actuator = Rest))) and (sup_South_Upstream_Gates_East_Sensor = Closed and sup_South_Upstream_Gates_West_Actuator = Rest and (sup_South_Upstream_Gates_West_Sensor = Closed and (sup_South_Upstream_Gates_East_Actuator = Rest and sup_South_Upstream_Gates_East_Sensor = Closed)) and (sup_South_Upstream_Gates_West_Actuator = Rest and (sup_South_Upstream_Gates_West_Sensor = Closed and sup_South_EmergencyStop != Active) and sup_South_Commands = DownstreamPaddleOpen)) do South_HW_Paddle_BNH_West_Q_Open := true, sup_South_Downstream_Paddles_West_Actuator := Opening;
    edge South_Downstream_Paddles_West_Sensor_u_closed_off when not South_HW_Paddle_BNH_West_Closed and (sup_South_Downstream_Paddles_West_Actuator = Opening and sup_South_Downstream_Paddles_West_Sensor = Closed) do sup_South_Downstream_Paddles_West_Sensor := Intermediate;
    edge South_Downstream_Paddles_West_Sensor_u_closed_on when South_HW_Paddle_BNH_West_Closed and (sup_South_Downstream_Paddles_West_Actuator = Closing and sup_South_Downstream_Paddles_West_Sensor = Intermediate) do sup_South_Downstream_Paddles_West_Sensor := Closed;
    edge South_Downstream_Paddles_West_Sensor_u_open_off when not South_HW_Paddle_BNH_West_Open and (sup_South_Downstream_Paddles_West_Actuator = Closing and sup_South_Downstream_Paddles_West_Sensor = Open) do sup_South_Downstream_Paddles_West_Sensor := Intermediate;
    edge South_Downstream_Paddles_West_Sensor_u_open_on when South_HW_Paddle_BNH_West_Open and (sup_South_Downstream_Paddles_West_Actuator = Opening and sup_South_Downstream_Paddles_West_Sensor = Intermediate) do sup_South_Downstream_Paddles_West_Sensor := Open;
    edge South_EmergencyStop_u_activate when South_HW_EmergencyStop_Active and sup_South_EmergencyStop = Inactive do sup_South_EmergencyStop := Active;
    edge South_EmergencyStop_u_deactivate when not South_HW_EmergencyStop_Active and sup_South_EmergencyStop = Active do sup_South_EmergencyStop := Inactive;
    edge South_Upstream_EnteringTLs_East_Actuator_c_g when sup_South_Upstream_EnteringTLs_East_Actuator = RedGreen and (sup_South_Upstream_LeavingTLs_East_Actuator = Red and sup_South_Upstream_LeavingTLs_East_SensorR = On and (sup_South_Upstream_LeavingTLs_East_SensorG = Off and sup_South_Upstream_LeavingTLs_West_Actuator = Red)) and (sup_South_Upstream_LeavingTLs_West_SensorR = On and sup_South_Upstream_LeavingTLs_West_SensorG = Off and (sup_South_Upstream_Gates_East_Actuator = Rest and sup_South_Upstream_Gates_East_Sensor = Open) and (sup_South_Upstream_Gates_West_Actuator = Rest and sup_South_Upstream_Gates_West_Sensor = Open and sup_South_Commands = UpstreamEnteringTLGreen)) do South_HW_EnteringTL_BVH_East_Q_Green := true, sup_South_Upstream_EnteringTLs_East_Actuator := Green;
    edge South_Upstream_EnteringTLs_East_Actuator_c_r when (sup_South_Upstream_EnteringTLs_East_Actuator = RedRed or (sup_South_Upstream_EnteringTLs_East_Actuator = RedGreen or sup_South_Upstream_EnteringTLs_East_Actuator = Green)) and sup_South_Commands = UpstreamEnteringTLRed do South_HW_EnteringTL_BVH_East_Q_Red := true, South_HW_EnteringTL_BVH_East_Q_Green := false, South_HW_EnteringTL_BVH_East_Q_RedRed := false, if sup_South_Upstream_EnteringTLs_East_Actuator = RedRed: sup_South_Upstream_EnteringTLs_East_Actuator := Red elif sup_South_Upstream_EnteringTLs_East_Actuator = RedGreen: sup_South_Upstream_EnteringTLs_East_Actuator := Red elif sup_South_Upstream_EnteringTLs_East_Actuator = Green: sup_South_Upstream_EnteringTLs_East_Actuator := Red end;
    edge South_Upstream_EnteringTLs_East_Actuator_c_rg when sup_South_Upstream_EnteringTLs_East_Actuator = Red and sup_South_Commands = UpstreamEnteringTLRedGreen do South_HW_EnteringTL_BVH_East_Q_Red := true, South_HW_EnteringTL_BVH_East_Q_Green := true, sup_South_Upstream_EnteringTLs_East_Actuator := RedGreen;
    edge South_Upstream_EnteringTLs_East_Actuator_c_rr when sup_South_Upstream_EnteringTLs_East_Actuator = Red and sup_South_Commands = UpstreamEnteringTLRedRed do South_HW_EnteringTL_BVH_East_Q_RedRed := true, sup_South_Upstream_EnteringTLs_East_Actuator := RedRed;
    edge South_Upstream_EnteringTLs_East_SensorG_u_off when not South_HW_EnteringTL_BVH_East_Green and ((sup_South_Upstream_EnteringTLs_East_Actuator = Red or sup_South_Upstream_EnteringTLs_East_Actuator = RedRed) and sup_South_Upstream_EnteringTLs_East_SensorG = On) do sup_South_Upstream_EnteringTLs_East_SensorG := Off;
    edge South_Upstream_EnteringTLs_East_SensorG_u_on when South_HW_EnteringTL_BVH_East_Green and ((sup_South_Upstream_EnteringTLs_East_Actuator = Green or sup_South_Upstream_EnteringTLs_East_Actuator = RedGreen) and sup_South_Upstream_EnteringTLs_East_SensorG = Off) do sup_South_Upstream_EnteringTLs_East_SensorG := On;
    edge South_Upstream_EnteringTLs_East_SensorR1_u_off when not South_HW_EnteringTL_BVH_East_Red and (sup_South_Upstream_EnteringTLs_East_Actuator = Green and sup_South_Upstream_EnteringTLs_East_SensorR1 = On) do sup_South_Upstream_EnteringTLs_East_SensorR1 := Off;
    edge South_Upstream_EnteringTLs_East_SensorR1_u_on when South_HW_EnteringTL_BVH_East_Red and (sup_South_Upstream_EnteringTLs_East_Actuator != Green and sup_South_Upstream_EnteringTLs_East_SensorR1 = Off) do sup_South_Upstream_EnteringTLs_East_SensorR1 := On;
    edge South_Upstream_EnteringTLs_East_SensorR2_u_off when not South_HW_EnteringTL_BVH_East_RedRed and (sup_South_Upstream_EnteringTLs_East_Actuator != RedRed and sup_South_Upstream_EnteringTLs_East_SensorR2 = On) do sup_South_Upstream_EnteringTLs_East_SensorR2 := Off;
    edge South_Upstream_EnteringTLs_East_SensorR2_u_on when South_HW_EnteringTL_BVH_East_RedRed and (sup_South_Upstream_EnteringTLs_East_Actuator = RedRed and sup_South_Upstream_EnteringTLs_East_SensorR2 = Off) do sup_South_Upstream_EnteringTLs_East_SensorR2 := On;
    edge South_Upstream_EnteringTLs_West_Actuator_c_g when sup_South_Upstream_EnteringTLs_West_Actuator = RedGreen and (sup_South_Upstream_LeavingTLs_East_Actuator = Red and sup_South_Upstream_LeavingTLs_East_SensorR = On and (sup_South_Upstream_LeavingTLs_East_SensorG = Off and sup_South_Upstream_LeavingTLs_West_Actuator = Red)) and (sup_South_Upstream_LeavingTLs_West_SensorR = On and sup_South_Upstream_LeavingTLs_West_SensorG = Off and (sup_South_Upstream_Gates_East_Actuator = Rest and sup_South_Upstream_Gates_East_Sensor = Open) and (sup_South_Upstream_Gates_West_Actuator = Rest and sup_South_Upstream_Gates_West_Sensor = Open and sup_South_Commands = UpstreamEnteringTLGreen)) do South_HW_EnteringTL_BVH_West_Q_Green := true, sup_South_Upstream_EnteringTLs_West_Actuator := Green;
    edge South_Upstream_EnteringTLs_West_Actuator_c_r when (sup_South_Upstream_EnteringTLs_West_Actuator = RedRed or (sup_South_Upstream_EnteringTLs_West_Actuator = RedGreen or sup_South_Upstream_EnteringTLs_West_Actuator = Green)) and sup_South_Commands = UpstreamEnteringTLRed do South_HW_EnteringTL_BVH_West_Q_Red := true, South_HW_EnteringTL_BVH_West_Q_Green := false, South_HW_EnteringTL_BVH_West_Q_RedRed := false, if sup_South_Upstream_EnteringTLs_West_Actuator = RedRed: sup_South_Upstream_EnteringTLs_West_Actuator := Red elif sup_South_Upstream_EnteringTLs_West_Actuator = RedGreen: sup_South_Upstream_EnteringTLs_West_Actuator := Red elif sup_South_Upstream_EnteringTLs_West_Actuator = Green: sup_South_Upstream_EnteringTLs_West_Actuator := Red end;
    edge South_Upstream_EnteringTLs_West_Actuator_c_rg when sup_South_Upstream_EnteringTLs_West_Actuator = Red and sup_South_Commands = UpstreamEnteringTLRedGreen do South_HW_EnteringTL_BVH_West_Q_Red := true, South_HW_EnteringTL_BVH_West_Q_Green := true, sup_South_Upstream_EnteringTLs_West_Actuator := RedGreen;
    edge South_Upstream_EnteringTLs_West_Actuator_c_rr when sup_South_Upstream_EnteringTLs_West_Actuator = Red and sup_South_Commands = UpstreamEnteringTLRedRed do South_HW_EnteringTL_BVH_West_Q_RedRed := true, sup_South_Upstream_EnteringTLs_West_Actuator := RedRed;
    edge South_Upstream_EnteringTLs_West_SensorG_u_off when not South_HW_EnteringTL_BVH_West_Green and ((sup_South_Upstream_EnteringTLs_West_Actuator = Red or sup_South_Upstream_EnteringTLs_West_Actuator = RedRed) and sup_South_Upstream_EnteringTLs_West_SensorG = On) do sup_South_Upstream_EnteringTLs_West_SensorG := Off;
    edge South_Upstream_EnteringTLs_West_SensorG_u_on when South_HW_EnteringTL_BVH_West_Green and ((sup_South_Upstream_EnteringTLs_West_Actuator = Green or sup_South_Upstream_EnteringTLs_West_Actuator = RedGreen) and sup_South_Upstream_EnteringTLs_West_SensorG = Off) do sup_South_Upstream_EnteringTLs_West_SensorG := On;
    edge South_Upstream_EnteringTLs_West_SensorR1_u_off when not South_HW_EnteringTL_BVH_West_Red and (sup_South_Upstream_EnteringTLs_West_Actuator = Green and sup_South_Upstream_EnteringTLs_West_SensorR1 = On) do sup_South_Upstream_EnteringTLs_West_SensorR1 := Off;
    edge South_Upstream_EnteringTLs_West_SensorR1_u_on when South_HW_EnteringTL_BVH_West_Red and (sup_South_Upstream_EnteringTLs_West_Actuator != Green and sup_South_Upstream_EnteringTLs_West_SensorR1 = Off) do sup_South_Upstream_EnteringTLs_West_SensorR1 := On;
    edge South_Upstream_EnteringTLs_West_SensorR2_u_off when not South_HW_EnteringTL_BVH_West_RedRed and (sup_South_Upstream_EnteringTLs_West_Actuator != RedRed and sup_South_Upstream_EnteringTLs_West_SensorR2 = On) do sup_South_Upstream_EnteringTLs_West_SensorR2 := Off;
    edge South_Upstream_EnteringTLs_West_SensorR2_u_on when South_HW_EnteringTL_BVH_West_RedRed and (sup_South_Upstream_EnteringTLs_West_Actuator = RedRed and sup_South_Upstream_EnteringTLs_West_SensorR2 = Off) do sup_South_Upstream_EnteringTLs_West_SensorR2 := On;
    edge South_Upstream_EqualWaterSensor_u_off when not South_HW_EqualWaterSensor_BVH_Equal and sup_South_Upstream_EqualWaterSensor = Equal do sup_South_Upstream_EqualWaterSensor := Unequal;
    edge South_Upstream_EqualWaterSensor_u_on when South_HW_EqualWaterSensor_BVH_Equal and sup_South_Upstream_EqualWaterSensor = Unequal do sup_South_Upstream_EqualWaterSensor := Equal;
    edge South_Upstream_Gates_East_Actuator_c_close when sup_South_Upstream_Gates_East_Actuator = Rest and (sup_South_Upstream_Gates_East_Sensor != Closed and ((sup_South_Upstream_EnteringTLs_East_Actuator = Red and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Upstream_EnteringTLs_West_Actuator = Red and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Upstream_EnteringTLs_East_Actuator = RedRed and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = On and (sup_South_Upstream_EnteringTLs_West_Actuator = RedRed and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Upstream_LeavingTLs_East_Actuator = Red)) and (sup_South_Upstream_LeavingTLs_East_SensorR = On and sup_South_Upstream_LeavingTLs_East_SensorG = Off and (sup_South_Upstream_LeavingTLs_West_Actuator = Red and sup_South_Upstream_LeavingTLs_West_SensorR = On) and (sup_South_Upstream_LeavingTLs_West_SensorG = Off and sup_South_EmergencyStop != Active and sup_South_Commands = UpstreamGateClose)) do South_HW_Gate_BVH_East_Q_Close := true, sup_South_Upstream_Gates_East_Actuator := Closing;
    edge South_Upstream_Gates_East_Actuator_c_emergencyStop when (sup_South_Upstream_Gates_East_Actuator = Opening or sup_South_Upstream_Gates_East_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = UpstreamGateStop) do South_HW_Gate_BVH_East_Q_Close := false, South_HW_Gate_BVH_East_Q_Open := false, if sup_South_Upstream_Gates_East_Actuator = Opening: sup_South_Upstream_Gates_East_Actuator := Rest elif sup_South_Upstream_Gates_East_Actuator = Closing: sup_South_Upstream_Gates_East_Actuator := Rest end;
    edge South_Upstream_Gates_East_Actuator_c_endStopClosing when sup_South_Upstream_Gates_East_Actuator = Closing and sup_South_Upstream_Gates_East_Sensor = Closed do South_HW_Gate_BVH_East_Q_Close := false, sup_South_Upstream_Gates_East_Actuator := Rest;
    edge South_Upstream_Gates_East_Actuator_c_endStopOpening when sup_South_Upstream_Gates_East_Actuator = Opening and sup_South_Upstream_Gates_East_Sensor = Open do South_HW_Gate_BVH_East_Q_Open := false, sup_South_Upstream_Gates_East_Actuator := Rest;
    edge South_Upstream_Gates_East_Actuator_c_open when sup_South_Upstream_Gates_East_Actuator = Rest and (sup_South_Upstream_Gates_East_Sensor != Open and sup_South_Upstream_EqualWaterSensor != Unequal) and (sup_South_Downstream_Paddles_East_Actuator = Rest and sup_South_Downstream_Paddles_East_Sensor = Closed and (sup_South_Downstream_Paddles_West_Actuator = Rest and sup_South_Downstream_Paddles_West_Sensor = Closed) and (sup_South_EmergencyStop != Active and sup_South_Commands = UpstreamGateOpen)) do South_HW_Gate_BVH_East_Q_Open := true, sup_South_Upstream_Gates_East_Actuator := Opening;
    edge South_Upstream_Gates_East_Sensor_u_closed_off when not South_HW_Gate_BVH_East_Closed and (sup_South_Upstream_Gates_East_Actuator = Opening and sup_South_Upstream_Gates_East_Sensor = Closed) do sup_South_Upstream_Gates_East_Sensor := Intermediate;
    edge South_Upstream_Gates_East_Sensor_u_closed_on when South_HW_Gate_BVH_East_Closed and (sup_South_Upstream_Gates_East_Actuator = Closing and sup_South_Upstream_Gates_East_Sensor = Intermediate) do sup_South_Upstream_Gates_East_Sensor := Closed;
    edge South_Upstream_Gates_East_Sensor_u_open_off when not South_HW_Gate_BVH_East_Open and (sup_South_Upstream_Gates_East_Actuator = Closing and sup_South_Upstream_Gates_East_Sensor = Open) do sup_South_Upstream_Gates_East_Sensor := Intermediate;
    edge South_Upstream_Gates_East_Sensor_u_open_on when South_HW_Gate_BVH_East_Open and (sup_South_Upstream_Gates_East_Actuator = Opening and sup_South_Upstream_Gates_East_Sensor = Intermediate) do sup_South_Upstream_Gates_East_Sensor := Open;
    edge South_Upstream_Gates_West_Actuator_c_close when sup_South_Upstream_Gates_West_Actuator = Rest and (sup_South_Upstream_Gates_West_Sensor != Closed and ((sup_South_Upstream_EnteringTLs_East_Actuator = Red and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Upstream_EnteringTLs_West_Actuator = Red and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Upstream_EnteringTLs_East_Actuator = RedRed and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = On and (sup_South_Upstream_EnteringTLs_West_Actuator = RedRed and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Upstream_LeavingTLs_East_Actuator = Red)) and (sup_South_Upstream_LeavingTLs_East_SensorR = On and sup_South_Upstream_LeavingTLs_East_SensorG = Off and (sup_South_Upstream_LeavingTLs_West_Actuator = Red and sup_South_Upstream_LeavingTLs_West_SensorR = On) and (sup_South_Upstream_LeavingTLs_West_SensorG = Off and sup_South_EmergencyStop != Active and sup_South_Commands = UpstreamGateClose)) do South_HW_Gate_BVH_West_Q_Close := true, sup_South_Upstream_Gates_West_Actuator := Closing;
    edge South_Upstream_Gates_West_Actuator_c_emergencyStop when (sup_South_Upstream_Gates_West_Actuator = Opening or sup_South_Upstream_Gates_West_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = UpstreamGateStop) do South_HW_Gate_BVH_West_Q_Close := false, South_HW_Gate_BVH_West_Q_Open := false, if sup_South_Upstream_Gates_West_Actuator = Opening: sup_South_Upstream_Gates_West_Actuator := Rest elif sup_South_Upstream_Gates_West_Actuator = Closing: sup_South_Upstream_Gates_West_Actuator := Rest end;
    edge South_Upstream_Gates_West_Actuator_c_endStopClosing when sup_South_Upstream_Gates_West_Actuator = Closing and sup_South_Upstream_Gates_West_Sensor = Closed do South_HW_Gate_BVH_West_Q_Close := false, sup_South_Upstream_Gates_West_Actuator := Rest;
    edge South_Upstream_Gates_West_Actuator_c_endStopOpening when sup_South_Upstream_Gates_West_Actuator = Opening and sup_South_Upstream_Gates_West_Sensor = Open do South_HW_Gate_BVH_West_Q_Open := false, sup_South_Upstream_Gates_West_Actuator := Rest;
    edge South_Upstream_Gates_West_Actuator_c_open when sup_South_Upstream_Gates_West_Actuator = Rest and (sup_South_Upstream_Gates_West_Sensor != Open and sup_South_Upstream_EqualWaterSensor != Unequal) and (sup_South_Downstream_Paddles_East_Actuator = Rest and sup_South_Downstream_Paddles_East_Sensor = Closed and (sup_South_Downstream_Paddles_West_Actuator = Rest and sup_South_Downstream_Paddles_West_Sensor = Closed) and (sup_South_EmergencyStop != Active and sup_South_Commands = UpstreamGateOpen)) do South_HW_Gate_BVH_West_Q_Open := true, sup_South_Upstream_Gates_West_Actuator := Opening;
    edge South_Upstream_Gates_West_Sensor_u_closed_off when not South_HW_Gate_BVH_West_Closed and (sup_South_Upstream_Gates_West_Actuator = Opening and sup_South_Upstream_Gates_West_Sensor = Closed) do sup_South_Upstream_Gates_West_Sensor := Intermediate;
    edge South_Upstream_Gates_West_Sensor_u_closed_on when South_HW_Gate_BVH_West_Closed and (sup_South_Upstream_Gates_West_Actuator = Closing and sup_South_Upstream_Gates_West_Sensor = Intermediate) do sup_South_Upstream_Gates_West_Sensor := Closed;
    edge South_Upstream_Gates_West_Sensor_u_open_off when not South_HW_Gate_BVH_West_Open and (sup_South_Upstream_Gates_West_Actuator = Closing and sup_South_Upstream_Gates_West_Sensor = Open) do sup_South_Upstream_Gates_West_Sensor := Intermediate;
    edge South_Upstream_Gates_West_Sensor_u_open_on when South_HW_Gate_BVH_West_Open and (sup_South_Upstream_Gates_West_Actuator = Opening and sup_South_Upstream_Gates_West_Sensor = Intermediate) do sup_South_Upstream_Gates_West_Sensor := Open;
    edge South_Upstream_LeavingTLs_East_Actuator_c_g when sup_South_Upstream_LeavingTLs_East_Actuator = Red and ((sup_South_Upstream_EnteringTLs_East_Actuator = Red and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Upstream_EnteringTLs_West_Actuator = Red and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Upstream_EnteringTLs_East_Actuator = RedRed and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = On and (sup_South_Upstream_EnteringTLs_West_Actuator = RedRed and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Upstream_Gates_East_Actuator = Rest) and (sup_South_Upstream_Gates_East_Sensor = Open and (sup_South_Upstream_Gates_West_Actuator = Rest and sup_South_Upstream_Gates_West_Sensor = Open) and sup_South_Commands = UpstreamLeavingTLGreen) do South_HW_LeavingTL_BVH_East_Q_Red := false, South_HW_LeavingTL_BVH_East_Q_Green := true, sup_South_Upstream_LeavingTLs_East_Actuator := Green;
    edge South_Upstream_LeavingTLs_East_Actuator_c_r when sup_South_Upstream_LeavingTLs_East_Actuator = Green and sup_South_Commands = UpstreamLeavingTLRed do South_HW_LeavingTL_BVH_East_Q_Red := true, South_HW_LeavingTL_BVH_East_Q_Green := false, sup_South_Upstream_LeavingTLs_East_Actuator := Red;
    edge South_Upstream_LeavingTLs_East_SensorG_u_off when not South_HW_LeavingTL_BVH_East_Green and (sup_South_Upstream_LeavingTLs_East_Actuator = Red and sup_South_Upstream_LeavingTLs_East_SensorG = On) do sup_South_Upstream_LeavingTLs_East_SensorG := Off;
    edge South_Upstream_LeavingTLs_East_SensorG_u_on when South_HW_LeavingTL_BVH_East_Green and (sup_South_Upstream_LeavingTLs_East_Actuator != Red and sup_South_Upstream_LeavingTLs_East_SensorG = Off) do sup_South_Upstream_LeavingTLs_East_SensorG := On;
    edge South_Upstream_LeavingTLs_East_SensorR_u_off when not South_HW_LeavingTL_BVH_East_Red and (sup_South_Upstream_LeavingTLs_East_Actuator = Green and sup_South_Upstream_LeavingTLs_East_SensorR = On) do sup_South_Upstream_LeavingTLs_East_SensorR := Off;
    edge South_Upstream_LeavingTLs_East_SensorR_u_on when South_HW_LeavingTL_BVH_East_Red and (sup_South_Upstream_LeavingTLs_East_Actuator != Green and sup_South_Upstream_LeavingTLs_East_SensorR = Off) do sup_South_Upstream_LeavingTLs_East_SensorR := On;
    edge South_Upstream_LeavingTLs_West_Actuator_c_g when sup_South_Upstream_LeavingTLs_West_Actuator = Red and ((sup_South_Upstream_EnteringTLs_East_Actuator = Red and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = Off and (sup_South_Upstream_EnteringTLs_West_Actuator = Red and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = Off) or sup_South_Upstream_EnteringTLs_East_Actuator = RedRed and sup_South_Upstream_EnteringTLs_East_SensorR1 = On and sup_South_Upstream_EnteringTLs_East_SensorG = Off and sup_South_Upstream_EnteringTLs_East_SensorR2 = On and (sup_South_Upstream_EnteringTLs_West_Actuator = RedRed and sup_South_Upstream_EnteringTLs_West_SensorR1 = On and sup_South_Upstream_EnteringTLs_West_SensorG = Off and sup_South_Upstream_EnteringTLs_West_SensorR2 = On)) and sup_South_Upstream_Gates_East_Actuator = Rest) and (sup_South_Upstream_Gates_East_Sensor = Open and (sup_South_Upstream_Gates_West_Actuator = Rest and sup_South_Upstream_Gates_West_Sensor = Open) and sup_South_Commands = UpstreamLeavingTLGreen) do South_HW_LeavingTL_BVH_West_Q_Red := false, South_HW_LeavingTL_BVH_West_Q_Green := true, sup_South_Upstream_LeavingTLs_West_Actuator := Green;
    edge South_Upstream_LeavingTLs_West_Actuator_c_r when sup_South_Upstream_LeavingTLs_West_Actuator = Green and sup_South_Commands = UpstreamLeavingTLRed do South_HW_LeavingTL_BVH_West_Q_Red := true, South_HW_LeavingTL_BVH_West_Q_Green := false, sup_South_Upstream_LeavingTLs_West_Actuator := Red;
    edge South_Upstream_LeavingTLs_West_SensorG_u_off when not South_HW_LeavingTL_BVH_West_Green and (sup_South_Upstream_LeavingTLs_West_Actuator = Red and sup_South_Upstream_LeavingTLs_West_SensorG = On) do sup_South_Upstream_LeavingTLs_West_SensorG := Off;
    edge South_Upstream_LeavingTLs_West_SensorG_u_on when South_HW_LeavingTL_BVH_West_Green and (sup_South_Upstream_LeavingTLs_West_Actuator != Red and sup_South_Upstream_LeavingTLs_West_SensorG = Off) do sup_South_Upstream_LeavingTLs_West_SensorG := On;
    edge South_Upstream_LeavingTLs_West_SensorR_u_off when not South_HW_LeavingTL_BVH_West_Red and (sup_South_Upstream_LeavingTLs_West_Actuator = Green and sup_South_Upstream_LeavingTLs_West_SensorR = On) do sup_South_Upstream_LeavingTLs_West_SensorR := Off;
    edge South_Upstream_LeavingTLs_West_SensorR_u_on when South_HW_LeavingTL_BVH_West_Red and (sup_South_Upstream_LeavingTLs_West_Actuator != Green and sup_South_Upstream_LeavingTLs_West_SensorR = Off) do sup_South_Upstream_LeavingTLs_West_SensorR := On;
    edge South_Upstream_Paddles_East_Actuator_c_close when sup_South_Upstream_Paddles_East_Actuator = Rest and sup_South_Upstream_Paddles_East_Sensor != Closed and (sup_South_EmergencyStop != Active and sup_South_Commands = UpstreamPaddleClose) do South_HW_Paddle_BVH_East_Q_Close := true, sup_South_Upstream_Paddles_East_Actuator := Closing;
    edge South_Upstream_Paddles_East_Actuator_c_emergencyStop when (sup_South_Upstream_Paddles_East_Actuator = Opening or sup_South_Upstream_Paddles_East_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = UpstreamPaddleStop) do South_HW_Paddle_BVH_East_Q_Close := false, South_HW_Paddle_BVH_East_Q_Open := false, if sup_South_Upstream_Paddles_East_Actuator = Opening: sup_South_Upstream_Paddles_East_Actuator := Rest elif sup_South_Upstream_Paddles_East_Actuator = Closing: sup_South_Upstream_Paddles_East_Actuator := Rest end;
    edge South_Upstream_Paddles_East_Actuator_c_endStopClosing when sup_South_Upstream_Paddles_East_Actuator = Closing and sup_South_Upstream_Paddles_East_Sensor = Closed do South_HW_Paddle_BVH_East_Q_Close := false, sup_South_Upstream_Paddles_East_Actuator := Rest;
    edge South_Upstream_Paddles_East_Actuator_c_endStopOpening when sup_South_Upstream_Paddles_East_Actuator = Opening and sup_South_Upstream_Paddles_East_Sensor = Open do South_HW_Paddle_BVH_East_Q_Open := false, sup_South_Upstream_Paddles_East_Actuator := Rest;
    edge South_Upstream_Paddles_East_Actuator_c_open when sup_South_Upstream_Paddles_East_Actuator = Rest and sup_South_Upstream_Paddles_East_Sensor != Open and (sup_South_Downstream_Paddles_East_Actuator = Rest and sup_South_Downstream_Paddles_East_Sensor = Closed and (sup_South_Downstream_Paddles_West_Actuator = Rest and (sup_South_Downstream_Paddles_West_Sensor = Closed and sup_South_Downstream_Gates_East_Actuator = Rest))) and (sup_South_Downstream_Gates_East_Sensor = Closed and sup_South_Downstream_Gates_West_Actuator = Rest and (sup_South_Downstream_Gates_West_Sensor = Closed and (sup_South_Downstream_Gates_East_Actuator = Rest and sup_South_Downstream_Gates_East_Sensor = Closed)) and (sup_South_Downstream_Gates_West_Actuator = Rest and (sup_South_Downstream_Gates_West_Sensor = Closed and sup_South_EmergencyStop != Active) and sup_South_Commands = UpstreamPaddleOpen)) do South_HW_Paddle_BVH_East_Q_Open := true, sup_South_Upstream_Paddles_East_Actuator := Opening;
    edge South_Upstream_Paddles_East_Sensor_u_closed_off when not South_HW_Paddle_BVH_East_Closed and (sup_South_Upstream_Paddles_East_Actuator = Opening and sup_South_Upstream_Paddles_East_Sensor = Closed) do sup_South_Upstream_Paddles_East_Sensor := Intermediate;
    edge South_Upstream_Paddles_East_Sensor_u_closed_on when South_HW_Paddle_BVH_East_Closed and (sup_South_Upstream_Paddles_East_Actuator = Closing and sup_South_Upstream_Paddles_East_Sensor = Intermediate) do sup_South_Upstream_Paddles_East_Sensor := Closed;
    edge South_Upstream_Paddles_East_Sensor_u_open_off when not South_HW_Paddle_BVH_East_Open and (sup_South_Upstream_Paddles_East_Actuator = Closing and sup_South_Upstream_Paddles_East_Sensor = Open) do sup_South_Upstream_Paddles_East_Sensor := Intermediate;
    edge South_Upstream_Paddles_East_Sensor_u_open_on when South_HW_Paddle_BVH_East_Open and (sup_South_Upstream_Paddles_East_Actuator = Opening and sup_South_Upstream_Paddles_East_Sensor = Intermediate) do sup_South_Upstream_Paddles_East_Sensor := Open;
    edge South_Upstream_Paddles_West_Actuator_c_close when sup_South_Upstream_Paddles_West_Actuator = Rest and sup_South_Upstream_Paddles_West_Sensor != Closed and (sup_South_EmergencyStop != Active and sup_South_Commands = UpstreamPaddleClose) do South_HW_Paddle_BVH_West_Q_Close := true, sup_South_Upstream_Paddles_West_Actuator := Closing;
    edge South_Upstream_Paddles_West_Actuator_c_emergencyStop when (sup_South_Upstream_Paddles_West_Actuator = Opening or sup_South_Upstream_Paddles_West_Actuator = Closing) and (sup_South_EmergencyStop = Active or sup_South_Commands = UpstreamPaddleStop) do South_HW_Paddle_BVH_West_Q_Close := false, South_HW_Paddle_BVH_West_Q_Open := false, if sup_South_Upstream_Paddles_West_Actuator = Opening: sup_South_Upstream_Paddles_West_Actuator := Rest elif sup_South_Upstream_Paddles_West_Actuator = Closing: sup_South_Upstream_Paddles_West_Actuator := Rest end;
    edge South_Upstream_Paddles_West_Actuator_c_endStopClosing when sup_South_Upstream_Paddles_West_Actuator = Closing and sup_South_Upstream_Paddles_West_Sensor = Closed do South_HW_Paddle_BVH_West_Q_Close := false, sup_South_Upstream_Paddles_West_Actuator := Rest;
    edge South_Upstream_Paddles_West_Actuator_c_endStopOpening when sup_South_Upstream_Paddles_West_Actuator = Opening and sup_South_Upstream_Paddles_West_Sensor = Open do South_HW_Paddle_BVH_West_Q_Open := false, sup_South_Upstream_Paddles_West_Actuator := Rest;
    edge South_Upstream_Paddles_West_Actuator_c_open when sup_South_Upstream_Paddles_West_Actuator = Rest and sup_South_Upstream_Paddles_West_Sensor != Open and (sup_South_Downstream_Paddles_East_Actuator = Rest and sup_South_Downstream_Paddles_East_Sensor = Closed and (sup_South_Downstream_Paddles_West_Actuator = Rest and (sup_South_Downstream_Paddles_West_Sensor = Closed and sup_South_Downstream_Gates_East_Actuator = Rest))) and (sup_South_Downstream_Gates_East_Sensor = Closed and sup_South_Downstream_Gates_West_Actuator = Rest and (sup_South_Downstream_Gates_West_Sensor = Closed and (sup_South_Downstream_Gates_East_Actuator = Rest and sup_South_Downstream_Gates_East_Sensor = Closed)) and (sup_South_Downstream_Gates_West_Actuator = Rest and (sup_South_Downstream_Gates_West_Sensor = Closed and sup_South_EmergencyStop != Active) and sup_South_Commands = UpstreamPaddleOpen)) do South_HW_Paddle_BVH_West_Q_Open := true, sup_South_Upstream_Paddles_West_Actuator := Opening;
    edge South_Upstream_Paddles_West_Sensor_u_closed_off when not South_HW_Paddle_BVH_West_Closed and (sup_South_Upstream_Paddles_West_Actuator = Opening and sup_South_Upstream_Paddles_West_Sensor = Closed) do sup_South_Upstream_Paddles_West_Sensor := Intermediate;
    edge South_Upstream_Paddles_West_Sensor_u_closed_on when South_HW_Paddle_BVH_West_Closed and (sup_South_Upstream_Paddles_West_Actuator = Closing and sup_South_Upstream_Paddles_West_Sensor = Intermediate) do sup_South_Upstream_Paddles_West_Sensor := Closed;
    edge South_Upstream_Paddles_West_Sensor_u_open_off when not South_HW_Paddle_BVH_West_Open and (sup_South_Upstream_Paddles_West_Actuator = Closing and sup_South_Upstream_Paddles_West_Sensor = Open) do sup_South_Upstream_Paddles_West_Sensor := Intermediate;
    edge South_Upstream_Paddles_West_Sensor_u_open_on when South_HW_Paddle_BVH_West_Open and (sup_South_Upstream_Paddles_West_Actuator = Opening and sup_South_Upstream_Paddles_West_Sensor = Intermediate) do sup_South_Upstream_Paddles_West_Sensor := Open;
end
